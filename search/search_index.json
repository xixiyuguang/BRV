{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868 \u00b6 rv_simple . linear (). setup { addType < SimpleModel >( R . layout . item_simple ) }. models = getData () \u8fd9\u91cc\u51fa\u73b0\u7684 BRV \u5173\u952e\u8bcd\u5373\u672c\u6846\u67b6, RV \u5373RecyclerView\u7b80\u79f0 \u5217\u8868\u586b\u5145\u6570\u636e\u7684\u4e09\u79cd\u65b9\u5f0f \u00b6 BRV\u652f\u6301\u4e09\u79cd\u65b9\u5f0f, \u7075\u6d3b\u4f7f\u7528; \u8fd9\u91cc\u63d0\u53ca\u7684Model\u5c31\u7b49\u540c\u4e8e\u6570\u636e\u7c7b/JavaBean/POJO 1) \u51fd\u6570\u56de\u8c03 \u00b6 \u5728 onBind \u51fd\u6570\u4e2d\u586b\u5145\u6570\u636e rv_simple . linear (). setup { addType < SimpleModel >( R . layout . item_simple ) onBind { findView < TextView >( R . id . tv_simple ). text = getModel < SimpleModel >(). name } }. models = getData () 2) \u5b9e\u73b0\u63a5\u53e3 \u00b6 \u901a\u8fc7\u4e3aModel\u5b9e\u73b0\u63a5\u53e3 ItemBind , \u5b9e\u73b0\u51fd\u6570 onBind , \u5728\u8be5\u51fd\u6570\u4e2d\u586b\u5145\u6570\u636e; \u8fd9\u79cd\u65b9\u5f0f\u5728\u5f88\u591a\u6846\u67b6\u4e2d\u88ab\u5e94\u7528, \u4f8b\u5982BRVAH, \u4f46\u662f\u6211\u4e0d\u63a8\u8350\u8fd9\u79cd\u89c6\u56fe\u5728Model\u4e2d\u7ed1\u5b9a\u7684\u65b9\u5f0f, \u56e0\u4e3aModel\u5e94\u5f53\u53ea\u5b58\u50a8\u6570\u636e\u548c\u8ba1\u7b97\u903b\u8f91, \u4e0d\u5e94\u5305\u542b\u4efb\u4f55UI class SimpleModel ( var name : String = \"BRV\" ) : ItemBind { override fun onBind ( holder : BindingAdapter . BindingViewHolder ) { val appName = holder . context . getString ( R . string . app_name ) holder . findView < TextView >( R . id . tv_simple ). text = appName + itemPosition } } 3) DataBinding \u00b6 \u901a\u8fc7DataBinding\u6570\u636e\u7ed1\u5b9a\u5f62\u5f0f\u81ea\u52a8\u586b\u5145\u6570\u636e, \u63a8\u8350, \u8fd9\u662f\u4ee3\u7801\u91cf\u6700\u5c11\u6700\u7075\u6d3b\u7684\u4e00\u79cd\u65b9\u5f0f \u7b2c\u4e00\u6b65, \u542f\u7528DataBinding, \u5728module\u4e2d\u7684build.gradle\u6587\u4ef6\u4e2d android { /.../ dataBinding { enabled = true } } \u7b2c\u4e8c\u6b65, \u5728Item\u7684\u5e03\u5c40\u6587\u4ef6\u4e2d\u521b\u5efa\u53d8\u91cf, \u7136\u540e\u7ed1\u5b9a\u53d8\u91cf\u5230\u89c6\u56fe\u63a7\u4ef6\u4e0a <layout xmlns:android= \"http://schemas.android.com/apk/res/android\" > <data> <variable name= \"m\" type= \"com.drake.brv.sample.model.SimpleModel\" /> </data> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" > <FrameLayout android:id= \"@+id/item\" android:layout_width= \"match_parent\" android:layout_height= \"100dp\" android:layout_margin= \"16dp\" android:background= \"@drawable/bg_card\" android:foreground= \"?selectableItemBackgroundBorderless\" > <TextView android:id= \"@+id/tv_simple\" android:text= \"@{String.valueOf(m.name)}\" android:gravity= \"center\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </FrameLayout> </LinearLayout> </layout> \u9009\u4e2d\u884c\u662fdatabinding\u4f7f\u7528\u65b9\u6cd5 \u7b2c\u4e09\u6b65, \u5e94\u5f53\u5728Application\u4e2d\u6ce8\u518c\u4e00\u4e2a\u5168\u5c40\u7684ID(\u8bb0\u4f4f\u5728 AndroidManifest \u6ce8\u518c\u8be5Application) \u6ce8\u610f\u8981\u5148\u521b\u5efa <layout> \u5e03\u5c40\u4e2d\u7684\u53d8\u91cf m , BR.m \u624d\u80fd\u88ab\u751f\u6210, \u5982\u679c\u4f9d\u7136\u6ca1\u6709\u751f\u6210\u8bf7 make project (\u5373AndroidStudio\u9876\u90e8\u5de5\u5177\u680f\u7684\u5c0f\u9524\u5b50\u56fe\u6807)\u6216 build project class App : Application () { override fun onCreate () { super . onCreate () // \u521d\u59cb\u5316BindingAdapter\u7684\u9ed8\u8ba4\u7ed1\u5b9aID, \u5982\u679c\u4e0d\u4f7f\u7528databinding\u5e76\u4e0d\u9700\u8981\u521d\u59cb\u5316 BRV . modelId = BR . m } } \u8fd9\u79cd\u65b9\u5f0f\u521b\u5efa\u5217\u8868\u65e0\u9700\u5904\u7406\u6570\u636e rv_simple . linear (). setup { addType < SimpleModel >( R . layout . item_simple ) }. models = getData () \u522b\u770b\u6587\u6863\u4e2d\u7b2c\u4e09\u79cd\u65b9\u5f0f\u590d\u6742, \u5b9e\u9645\u7b2c\u4e09\u79cd\u65b9\u5f0f\u4ee3\u7801\u91cf\u6700\u5c11, \u540c\u65f6\u6700\u89e3\u8026 \u4f7f\u7528DataBinding\u53ef\u4ee5\u4f7f\u7528\u6216\u8005\u53c2\u8003\u6211\u7684\u5e38\u7528\u81ea\u5b9a\u4e49\u5c5e\u6027: DataBindingComponent.kt \u4f60\u53ef\u4ee5\u590d\u5236\u6587\u4ef6\u6216\u8005\u4f9d\u8d56\u4ed3\u5e93","title":"\u4f7f\u7528"},{"location":"#_1","text":"rv_simple . linear (). setup { addType < SimpleModel >( R . layout . item_simple ) }. models = getData () \u8fd9\u91cc\u51fa\u73b0\u7684 BRV \u5173\u952e\u8bcd\u5373\u672c\u6846\u67b6, RV \u5373RecyclerView\u7b80\u79f0","title":"\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868"},{"location":"#_2","text":"BRV\u652f\u6301\u4e09\u79cd\u65b9\u5f0f, \u7075\u6d3b\u4f7f\u7528; \u8fd9\u91cc\u63d0\u53ca\u7684Model\u5c31\u7b49\u540c\u4e8e\u6570\u636e\u7c7b/JavaBean/POJO","title":"\u5217\u8868\u586b\u5145\u6570\u636e\u7684\u4e09\u79cd\u65b9\u5f0f"},{"location":"#1","text":"\u5728 onBind \u51fd\u6570\u4e2d\u586b\u5145\u6570\u636e rv_simple . linear (). setup { addType < SimpleModel >( R . layout . item_simple ) onBind { findView < TextView >( R . id . tv_simple ). text = getModel < SimpleModel >(). name } }. models = getData ()","title":"1) \u51fd\u6570\u56de\u8c03"},{"location":"#2","text":"\u901a\u8fc7\u4e3aModel\u5b9e\u73b0\u63a5\u53e3 ItemBind , \u5b9e\u73b0\u51fd\u6570 onBind , \u5728\u8be5\u51fd\u6570\u4e2d\u586b\u5145\u6570\u636e; \u8fd9\u79cd\u65b9\u5f0f\u5728\u5f88\u591a\u6846\u67b6\u4e2d\u88ab\u5e94\u7528, \u4f8b\u5982BRVAH, \u4f46\u662f\u6211\u4e0d\u63a8\u8350\u8fd9\u79cd\u89c6\u56fe\u5728Model\u4e2d\u7ed1\u5b9a\u7684\u65b9\u5f0f, \u56e0\u4e3aModel\u5e94\u5f53\u53ea\u5b58\u50a8\u6570\u636e\u548c\u8ba1\u7b97\u903b\u8f91, \u4e0d\u5e94\u5305\u542b\u4efb\u4f55UI class SimpleModel ( var name : String = \"BRV\" ) : ItemBind { override fun onBind ( holder : BindingAdapter . BindingViewHolder ) { val appName = holder . context . getString ( R . string . app_name ) holder . findView < TextView >( R . id . tv_simple ). text = appName + itemPosition } }","title":"2) \u5b9e\u73b0\u63a5\u53e3"},{"location":"#3-databinding","text":"\u901a\u8fc7DataBinding\u6570\u636e\u7ed1\u5b9a\u5f62\u5f0f\u81ea\u52a8\u586b\u5145\u6570\u636e, \u63a8\u8350, \u8fd9\u662f\u4ee3\u7801\u91cf\u6700\u5c11\u6700\u7075\u6d3b\u7684\u4e00\u79cd\u65b9\u5f0f \u7b2c\u4e00\u6b65, \u542f\u7528DataBinding, \u5728module\u4e2d\u7684build.gradle\u6587\u4ef6\u4e2d android { /.../ dataBinding { enabled = true } } \u7b2c\u4e8c\u6b65, \u5728Item\u7684\u5e03\u5c40\u6587\u4ef6\u4e2d\u521b\u5efa\u53d8\u91cf, \u7136\u540e\u7ed1\u5b9a\u53d8\u91cf\u5230\u89c6\u56fe\u63a7\u4ef6\u4e0a <layout xmlns:android= \"http://schemas.android.com/apk/res/android\" > <data> <variable name= \"m\" type= \"com.drake.brv.sample.model.SimpleModel\" /> </data> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" > <FrameLayout android:id= \"@+id/item\" android:layout_width= \"match_parent\" android:layout_height= \"100dp\" android:layout_margin= \"16dp\" android:background= \"@drawable/bg_card\" android:foreground= \"?selectableItemBackgroundBorderless\" > <TextView android:id= \"@+id/tv_simple\" android:text= \"@{String.valueOf(m.name)}\" android:gravity= \"center\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </FrameLayout> </LinearLayout> </layout> \u9009\u4e2d\u884c\u662fdatabinding\u4f7f\u7528\u65b9\u6cd5 \u7b2c\u4e09\u6b65, \u5e94\u5f53\u5728Application\u4e2d\u6ce8\u518c\u4e00\u4e2a\u5168\u5c40\u7684ID(\u8bb0\u4f4f\u5728 AndroidManifest \u6ce8\u518c\u8be5Application) \u6ce8\u610f\u8981\u5148\u521b\u5efa <layout> \u5e03\u5c40\u4e2d\u7684\u53d8\u91cf m , BR.m \u624d\u80fd\u88ab\u751f\u6210, \u5982\u679c\u4f9d\u7136\u6ca1\u6709\u751f\u6210\u8bf7 make project (\u5373AndroidStudio\u9876\u90e8\u5de5\u5177\u680f\u7684\u5c0f\u9524\u5b50\u56fe\u6807)\u6216 build project class App : Application () { override fun onCreate () { super . onCreate () // \u521d\u59cb\u5316BindingAdapter\u7684\u9ed8\u8ba4\u7ed1\u5b9aID, \u5982\u679c\u4e0d\u4f7f\u7528databinding\u5e76\u4e0d\u9700\u8981\u521d\u59cb\u5316 BRV . modelId = BR . m } } \u8fd9\u79cd\u65b9\u5f0f\u521b\u5efa\u5217\u8868\u65e0\u9700\u5904\u7406\u6570\u636e rv_simple . linear (). setup { addType < SimpleModel >( R . layout . item_simple ) }. models = getData () \u522b\u770b\u6587\u6863\u4e2d\u7b2c\u4e09\u79cd\u65b9\u5f0f\u590d\u6742, \u5b9e\u9645\u7b2c\u4e09\u79cd\u65b9\u5f0f\u4ee3\u7801\u91cf\u6700\u5c11, \u540c\u65f6\u6700\u89e3\u8026 \u4f7f\u7528DataBinding\u53ef\u4ee5\u4f7f\u7528\u6216\u8005\u53c2\u8003\u6211\u7684\u5e38\u7528\u81ea\u5b9a\u4e49\u5c5e\u6027: DataBindingComponent.kt \u4f60\u53ef\u4ee5\u590d\u5236\u6587\u4ef6\u6216\u8005\u4f9d\u8d56\u4ed3\u5e93","title":"3) DataBinding"},{"location":"checked/","text":"\u53ef\u7f16\u8f91/\u591a\u9009\u5217\u8868\u5728\u5f00\u53d1\u4e2d\u5f88\u5e38\u89c1, BRV\u53ef\u4ee5\u77ed\u77ed\u51e0\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u9009\u62e9\u6a21\u5f0f: \u8be6\u7ec6Demo \u591a\u9009\u5217\u8868 \u00b6 \u521b\u5efa\u5217\u8868 rv_check_mode . linear (). setup { addType < CheckModel >( R . layout . item_check_mode ) }. models = getData \u4e3aModel\u521b\u5efa\u4e00\u4e2a\u5b57\u6bb5\u7528\u4e8e\u4fdd\u5b58\u9009\u62e9\u7684\u72b6\u6001 data class CheckModel ( var checked : Boolean = false , var visibility : Boolean = false ) : BaseObservable () // BaseObservable \u8fd9\u662fDataBinding\u7684\u6570\u636e\u7ed1\u5b9a\u5199\u6cd5 \u76d1\u542c\u9009\u62e9\u4e8b\u4ef6 rv_check_mode . linear (). setup { addType < CheckModel >( R . layout . item_check_mode ) onChecked { position , isChecked , isAllChecked -> val model = getModel < CheckModel >( position ) model . checked = isChecked model . notifyChange () // \u901a\u77e5UI\u8ddf\u968f\u6570\u636e\u53d8\u5316 } }. models = getData \u89e6\u53d1\u9009\u62e9\u4e8b\u4ef6 rv_check_mode . linear (). setup { addType < CheckModel >( R . layout . item_check_mode ) onChecked { position , isChecked , isAllChecked -> val model = getModel < CheckModel >( position ) model . checked = isChecked model . notifyChange () // \u901a\u77e5UI\u8ddf\u968f\u6570\u636e\u53d8\u5316 } onClick ( R . id . cb , R . id . item ) { var checked = ( getModel () as CheckModel ). checked setChecked ( adapterPosition , checked ) // \u5728\u70b9\u51fb\u4e8b\u4ef6\u4e2d\u89e6\u53d1\u9009\u62e9\u4e8b\u4ef6, \u5373\u70b9\u51fb\u5217\u8868\u6761\u76ee\u5c31\u9009\u4e2d } }. models = getData \u5b66\u5b8c\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u591a\u9009\u5217\u8868\u540e\u53ef\u4ee5\u67e5\u770b\u51fd\u6570\u5b66\u4e60\u66f4\u590d\u6742\u7684\u529f\u80fd\u914d\u7f6e \u51fd\u6570 \u00b6 \u51fd\u6570 \u63cf\u8ff0 allChecked \u5168\u9009\u6216\u8005\u5168\u90e8\u53d6\u6d88\u5168\u9009 singleMode \u662f\u5426\u4e3a\u5355\u9009\u6a21\u5f0f isCheckedAll \u662f\u5426\u88ab\u5168\u9009 checkedReverse \u53cd\u9009 setChecked \u6307\u5b9a\u4f4d\u7f6e\u7684\u6761\u76ee\u662f\u5426\u9009\u4e2d checkedSwitch \u5207\u6362\u9009\u4e2d\u72b6\u6001 setCheckableType \u6307\u5b9a\u7684type\u624d\u5141\u8bb8\u9009\u4e2d getCheckedModels \u5f97\u5230\u9009\u62e9\u7684\u6570\u636e\u6a21\u578b\u96c6\u5408 checkedPosition \u88ab\u9009\u62e9\u7684item\u7684position\u96c6\u5408 checkedCount \u5df2\u9009\u62e9\u6570\u91cf onChecked \u9009\u62e9\u56de\u8c03","title":"\u9009\u62e9\u6a21\u5f0f"},{"location":"checked/#_1","text":"\u521b\u5efa\u5217\u8868 rv_check_mode . linear (). setup { addType < CheckModel >( R . layout . item_check_mode ) }. models = getData \u4e3aModel\u521b\u5efa\u4e00\u4e2a\u5b57\u6bb5\u7528\u4e8e\u4fdd\u5b58\u9009\u62e9\u7684\u72b6\u6001 data class CheckModel ( var checked : Boolean = false , var visibility : Boolean = false ) : BaseObservable () // BaseObservable \u8fd9\u662fDataBinding\u7684\u6570\u636e\u7ed1\u5b9a\u5199\u6cd5 \u76d1\u542c\u9009\u62e9\u4e8b\u4ef6 rv_check_mode . linear (). setup { addType < CheckModel >( R . layout . item_check_mode ) onChecked { position , isChecked , isAllChecked -> val model = getModel < CheckModel >( position ) model . checked = isChecked model . notifyChange () // \u901a\u77e5UI\u8ddf\u968f\u6570\u636e\u53d8\u5316 } }. models = getData \u89e6\u53d1\u9009\u62e9\u4e8b\u4ef6 rv_check_mode . linear (). setup { addType < CheckModel >( R . layout . item_check_mode ) onChecked { position , isChecked , isAllChecked -> val model = getModel < CheckModel >( position ) model . checked = isChecked model . notifyChange () // \u901a\u77e5UI\u8ddf\u968f\u6570\u636e\u53d8\u5316 } onClick ( R . id . cb , R . id . item ) { var checked = ( getModel () as CheckModel ). checked setChecked ( adapterPosition , checked ) // \u5728\u70b9\u51fb\u4e8b\u4ef6\u4e2d\u89e6\u53d1\u9009\u62e9\u4e8b\u4ef6, \u5373\u70b9\u51fb\u5217\u8868\u6761\u76ee\u5c31\u9009\u4e2d } }. models = getData \u5b66\u5b8c\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u591a\u9009\u5217\u8868\u540e\u53ef\u4ee5\u67e5\u770b\u51fd\u6570\u5b66\u4e60\u66f4\u590d\u6742\u7684\u529f\u80fd\u914d\u7f6e","title":"\u591a\u9009\u5217\u8868"},{"location":"checked/#_2","text":"\u51fd\u6570 \u63cf\u8ff0 allChecked \u5168\u9009\u6216\u8005\u5168\u90e8\u53d6\u6d88\u5168\u9009 singleMode \u662f\u5426\u4e3a\u5355\u9009\u6a21\u5f0f isCheckedAll \u662f\u5426\u88ab\u5168\u9009 checkedReverse \u53cd\u9009 setChecked \u6307\u5b9a\u4f4d\u7f6e\u7684\u6761\u76ee\u662f\u5426\u9009\u4e2d checkedSwitch \u5207\u6362\u9009\u4e2d\u72b6\u6001 setCheckableType \u6307\u5b9a\u7684type\u624d\u5141\u8bb8\u9009\u4e2d getCheckedModels \u5f97\u5230\u9009\u62e9\u7684\u6570\u636e\u6a21\u578b\u96c6\u5408 checkedPosition \u88ab\u9009\u62e9\u7684item\u7684position\u96c6\u5408 checkedCount \u5df2\u9009\u62e9\u6570\u91cf onChecked \u9009\u62e9\u56de\u8c03","title":"\u51fd\u6570"},{"location":"divider-grid/","text":"\u652f\u6301 GridLayoutManager \u7684\u7f51\u683c\u5e03\u5c40\u7684\u5206\u5272\u7ebf \u6c34\u5e73\u5206\u5272\u7ebf \u00b6 rv . grid ( 3 ). divider ( R . drawable . divider_horizontal ). setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData () \u5782\u76f4\u5206\u5272\u7ebf \u00b6 rv . grid ( 3 , RecyclerView . HORIZONTAL ) . divider ( R . drawable . divider_vertical , DividerOrientation . VERTICAL ) . setup { addType < DividerModel >( R . layout . item_divider_vertical ) }. models = getData () \u7f51\u683c\u5206\u5272\u7ebf \u00b6 rv . grid ( 3 ). divider { setDrawable ( R . drawable . divider_horizontal ) orientation = DividerOrientation . GRID }. setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData () \u8fb9\u7f18\u5206\u5272\u7ebf \u00b6 \u901a\u8fc7\u4e24\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u63a7\u5236\u8fb9\u7f18\u5206\u5272\u7ebf\u662f\u5426\u663e\u793a \u5b57\u6bb5 \u63cf\u8ff0 startVisible \u662f\u5426\u663e\u793a\u4e0a\u4e0b\u8fb9\u7f18\u5206\u5272\u7ebf endVisible \u662f\u5426\u663e\u793a\u5de6\u53f3\u8fb9\u7f18\u5206\u5272\u7ebf includeVisible \u662f\u5426\u663e\u793a\u5468\u56f4\u5206\u5272\u7ebf 1) \u4e0a\u4e0b \u00b6 rv . grid ( 3 ). divider { setDrawable ( R . drawable . divider_horizontal ) orientation = DividerOrientation . GRID startVisible = true }. setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData () 2) \u5de6\u53f3 \u00b6 rv . grid ( 3 ). divider { setDrawable ( R . drawable . divider_horizontal ) orientation = DividerOrientation . GRID endVisible = true }. setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData () 3) \u56db\u5468 \u00b6 rv . grid ( 3 ). divider { setDrawable ( R . drawable . divider_horizontal ) orientation = DividerOrientation . GRID startVisible = true endVisible = true }. setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData ()","title":"\u7f51\u683c\u5217\u8868"},{"location":"divider-grid/#_1","text":"rv . grid ( 3 ). divider ( R . drawable . divider_horizontal ). setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData ()","title":"\u6c34\u5e73\u5206\u5272\u7ebf"},{"location":"divider-grid/#_2","text":"rv . grid ( 3 , RecyclerView . HORIZONTAL ) . divider ( R . drawable . divider_vertical , DividerOrientation . VERTICAL ) . setup { addType < DividerModel >( R . layout . item_divider_vertical ) }. models = getData ()","title":"\u5782\u76f4\u5206\u5272\u7ebf"},{"location":"divider-grid/#_3","text":"rv . grid ( 3 ). divider { setDrawable ( R . drawable . divider_horizontal ) orientation = DividerOrientation . GRID }. setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData ()","title":"\u7f51\u683c\u5206\u5272\u7ebf"},{"location":"divider-grid/#_4","text":"\u901a\u8fc7\u4e24\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u63a7\u5236\u8fb9\u7f18\u5206\u5272\u7ebf\u662f\u5426\u663e\u793a \u5b57\u6bb5 \u63cf\u8ff0 startVisible \u662f\u5426\u663e\u793a\u4e0a\u4e0b\u8fb9\u7f18\u5206\u5272\u7ebf endVisible \u662f\u5426\u663e\u793a\u5de6\u53f3\u8fb9\u7f18\u5206\u5272\u7ebf includeVisible \u662f\u5426\u663e\u793a\u5468\u56f4\u5206\u5272\u7ebf","title":"\u8fb9\u7f18\u5206\u5272\u7ebf"},{"location":"divider-grid/#1","text":"rv . grid ( 3 ). divider { setDrawable ( R . drawable . divider_horizontal ) orientation = DividerOrientation . GRID startVisible = true }. setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData ()","title":"1) \u4e0a\u4e0b"},{"location":"divider-grid/#2","text":"rv . grid ( 3 ). divider { setDrawable ( R . drawable . divider_horizontal ) orientation = DividerOrientation . GRID endVisible = true }. setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData ()","title":"2) \u5de6\u53f3"},{"location":"divider-grid/#3","text":"rv . grid ( 3 ). divider { setDrawable ( R . drawable . divider_horizontal ) orientation = DividerOrientation . GRID startVisible = true endVisible = true }. setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData ()","title":"3) \u56db\u5468"},{"location":"divider-linear/","text":"\u6c34\u5e73\u5206\u5272\u7ebf \u00b6 \u521b\u5efa\u4e00\u4e2a drawable \u6587\u4ef6\u6765\u63cf\u8ff0\u5206\u9694\u7ebf, \u5176\u5177\u5907\u590d\u7528\u7684\u7279\u70b9 <shape xmlns:android= \"http://schemas.android.com/apk/res/android\" > <solid android:color= \"@color/dividerDecoration\" /> <size android:height= \"5dp\" /> </shape> \u521b\u5efa\u5217\u8868 rv_grid . linear (). divider ( R . drawable . divider_horizontal ). setup { addType < DividerModel >( R . layout . item_divider ) }. models = getData () \u5782\u76f4\u5206\u5272\u7ebf \u00b6 \u521b\u5efaDrawable\u4f5c\u4e3a\u5206\u9694\u7ebf <shape xmlns:android= \"http://schemas.android.com/apk/res/android\" > <solid android:color= \"@color/dividerDecoration\" /> <size android:width= \"5dp\" /> </shape> \u521b\u5efa\u5217\u8868 rv . linear ( RecyclerView . HORIZONTAL ). divider ( R . drawable . divider_vertical ). setup { addType < DividerModel >( R . layout . item_divider_vertical ) }. models = getData () \u8fd9\u91cc\u4f7f\u7528 Drawable \u8d44\u6e90\u6765\u5feb\u901f\u8bbe\u7f6e\u5206\u5272\u7ebf, Drawable\u7684\u5bbd\u9ad8\u5c31\u662f\u5206\u5272\u7ebf\u7684\u5bbd\u9ad8 \u5982\u679c\u6c34\u5e73\u5206\u5272\u7ebf, \u5219Drawable\u7684\u5bbd\u5ea6\u503c\u65e0\u6548(\u5b9e\u9645\u5bbd\u5ea6\u503c\u4e3aRecyclerView\u7684\u5bbd) \u5982\u679c\u5782\u76f4\u5206\u5272\u7ebf, \u5219Drawable\u7684\u9ad8\u5ea6\u503c\u65e0\u6548(\u5b9e\u9645\u5206\u5272\u7ebf\u9ad8\u5ea6\u4e3aRecyclerView\u9ad8\u5ea6) \u8fb9\u7f18\u5206\u5272\u7ebf \u00b6 \u5b57\u6bb5 \u63cf\u8ff0 startVisible \u662f\u5426\u663e\u793a\u9996\u90e8\u5206\u5272\u7ebf endVisible \u662f\u5426\u663e\u793a\u5c3e\u90e8\u5206\u5272\u7ebf includeVisible \u662f\u5426\u663e\u793a\u9996\u5c3e\u5206\u5272\u7ebf \u901a\u8fc7\u4e24\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u63a7\u5236\u9996\u5c3e\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf rv . linear (). divider { setDrawable ( R . drawable . divider_horizontal ) startVisible = true endVisible = true }. setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData ()","title":"\u7ebf\u6027\u5217\u8868"},{"location":"divider-linear/#_1","text":"\u521b\u5efa\u4e00\u4e2a drawable \u6587\u4ef6\u6765\u63cf\u8ff0\u5206\u9694\u7ebf, \u5176\u5177\u5907\u590d\u7528\u7684\u7279\u70b9 <shape xmlns:android= \"http://schemas.android.com/apk/res/android\" > <solid android:color= \"@color/dividerDecoration\" /> <size android:height= \"5dp\" /> </shape> \u521b\u5efa\u5217\u8868 rv_grid . linear (). divider ( R . drawable . divider_horizontal ). setup { addType < DividerModel >( R . layout . item_divider ) }. models = getData ()","title":"\u6c34\u5e73\u5206\u5272\u7ebf"},{"location":"divider-linear/#_2","text":"\u521b\u5efaDrawable\u4f5c\u4e3a\u5206\u9694\u7ebf <shape xmlns:android= \"http://schemas.android.com/apk/res/android\" > <solid android:color= \"@color/dividerDecoration\" /> <size android:width= \"5dp\" /> </shape> \u521b\u5efa\u5217\u8868 rv . linear ( RecyclerView . HORIZONTAL ). divider ( R . drawable . divider_vertical ). setup { addType < DividerModel >( R . layout . item_divider_vertical ) }. models = getData () \u8fd9\u91cc\u4f7f\u7528 Drawable \u8d44\u6e90\u6765\u5feb\u901f\u8bbe\u7f6e\u5206\u5272\u7ebf, Drawable\u7684\u5bbd\u9ad8\u5c31\u662f\u5206\u5272\u7ebf\u7684\u5bbd\u9ad8 \u5982\u679c\u6c34\u5e73\u5206\u5272\u7ebf, \u5219Drawable\u7684\u5bbd\u5ea6\u503c\u65e0\u6548(\u5b9e\u9645\u5bbd\u5ea6\u503c\u4e3aRecyclerView\u7684\u5bbd) \u5982\u679c\u5782\u76f4\u5206\u5272\u7ebf, \u5219Drawable\u7684\u9ad8\u5ea6\u503c\u65e0\u6548(\u5b9e\u9645\u5206\u5272\u7ebf\u9ad8\u5ea6\u4e3aRecyclerView\u9ad8\u5ea6)","title":"\u5782\u76f4\u5206\u5272\u7ebf"},{"location":"divider-linear/#_3","text":"\u5b57\u6bb5 \u63cf\u8ff0 startVisible \u662f\u5426\u663e\u793a\u9996\u90e8\u5206\u5272\u7ebf endVisible \u662f\u5426\u663e\u793a\u5c3e\u90e8\u5206\u5272\u7ebf includeVisible \u662f\u5426\u663e\u793a\u9996\u5c3e\u5206\u5272\u7ebf \u901a\u8fc7\u4e24\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u63a7\u5236\u9996\u5c3e\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf rv . linear (). divider { setDrawable ( R . drawable . divider_horizontal ) startVisible = true endVisible = true }. setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData ()","title":"\u8fb9\u7f18\u5206\u5272\u7ebf"},{"location":"divider-staggerd/","text":"\u7011\u5e03\u6d41\u5206\u5272\u7ebf rv . staggered ( 3 ). divider ( R . drawable . divider_horizontal ). setup { addType < DividerModel >( R . layout . item_divider_horizontal ) onBind { // \u6a21\u62df\u52a8\u6001\u9ad8\u5ea6 val layoutParams = itemView . layoutParams layoutParams . height = getModel < DividerModel >(). height itemView . layoutParams = layoutParams } }. models = getData () \u8fb9\u7f18\u5206\u5272\u7ebf \u00b6 \u901a\u8fc7\u4e24\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u63a7\u5236\u8fb9\u7f18\u5206\u5272\u7ebf\u662f\u5426\u663e\u793a \u5b57\u6bb5 \u63cf\u8ff0 startVisible \u662f\u5426\u663e\u793a\u4e0a\u4e0b\u8fb9\u7f18\u5206\u5272\u7ebf endVisible \u662f\u5426\u663e\u793a\u5de6\u53f3\u8fb9\u7f18\u5206\u5272\u7ebf includeVisible \u662f\u5426\u663e\u793a\u5468\u56f4\u5206\u5272\u7ebf","title":"\u7011\u5e03\u6d41\u5217\u8868"},{"location":"divider-staggerd/#_1","text":"\u901a\u8fc7\u4e24\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u63a7\u5236\u8fb9\u7f18\u5206\u5272\u7ebf\u662f\u5426\u663e\u793a \u5b57\u6bb5 \u63cf\u8ff0 startVisible \u662f\u5426\u663e\u793a\u4e0a\u4e0b\u8fb9\u7f18\u5206\u5272\u7ebf endVisible \u662f\u5426\u663e\u793a\u5de6\u53f3\u8fb9\u7f18\u5206\u5272\u7ebf includeVisible \u662f\u5426\u663e\u793a\u5468\u56f4\u5206\u5272\u7ebf","title":"\u8fb9\u7f18\u5206\u5272\u7ebf"},{"location":"drag/","text":"\u4e3a\u6570\u636e\u6a21\u578b\u5b9e\u73b0\u63a5\u53e3 ItemDrag \u5373\u53ef\u5f00\u542f\u62d6\u62fd\u529f\u80fd data class DragModel ( override var itemOrientationDrag : Int = ItemOrientation . ALL ) : ItemDrag \u6ce8\u610f\u5982\u679c\u4f60\u7684\u6570\u636e\u6a21\u578b\u88abGson\u53cd\u5e8f\u5217\u5316\u540e, \u4f1a\u5220\u9664\u6240\u6709\u7684\u5b57\u6bb5\u521d\u59cb\u5316\u503c \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u91cd\u5199\u8bbf\u95ee\u51fd\u6570\u6765\u89e3\u51b3\u95ee\u9898, \u8ba9\u8be5\u503c\u56fa\u5b9a\u8fd4\u56de class DragModel () : ItemDrag { override var itemOrientationDrag : Int = 0 get () = ItemOrientation . ALL // \u53ea\u4f1a\u8fd4\u56de\u8be5\u503c } ItemOrientation \u00b6 \u8be5\u7c7b\u5305\u542b\u62d6\u62fd\u53ef\u914d\u7f6e\u7684\u65b9\u5411 \u5b57\u6bb5 \u63cf\u8ff0 ALL \u5168\u90e8\u65b9\u5411 VERTICAL \u5782\u76f4\u65b9\u5411 HORIZONTAL \u6c34\u5e73\u65b9\u5411 LEFT \u5411\u5de6 RIGHT \u5411\u53f3 UP \u5411\u4e0a DOWN \u5411\u4e0b NONE \u7981\u7528 \u81ea\u5b9a\u4e49 \u00b6 \u5982\u679c\u60f3\u8981\u6269\u5c55ItemTouchHelper\u53ef\u4ee5\u7ed9BindingAdapter\u7684\u53d8\u91cf itemTouchHelper \u8d4b\u503c rv . linear (). setup { addType < Model >( R . layout . item ) itemTouchHelper = ItemTouchHelper ( object : DefaultItemTouchCallback ( this ) { // \u8fd9\u91cc\u53ef\u4ee5\u91cd\u5199\u51fd\u6570 override fun onMoved ( recyclerView : RecyclerView , viewHolder : RecyclerView . ViewHolder , fromPos : Int , target : RecyclerView . ViewHolder , toPos : Int , x : Int , y : Int ) { super . onMoved ( recyclerView , viewHolder , fromPos , target , toPos , x , y ) // \u8fd9\u662f\u62d6\u62fd\u4ea4\u6362\u540e\u56de\u8c03, \u8fd9\u91cc\u53ef\u4ee5\u540c\u6b65\u670d\u52a1\u5668 } }) }. models = data","title":"\u62d6\u62fd"},{"location":"drag/#itemorientation","text":"\u8be5\u7c7b\u5305\u542b\u62d6\u62fd\u53ef\u914d\u7f6e\u7684\u65b9\u5411 \u5b57\u6bb5 \u63cf\u8ff0 ALL \u5168\u90e8\u65b9\u5411 VERTICAL \u5782\u76f4\u65b9\u5411 HORIZONTAL \u6c34\u5e73\u65b9\u5411 LEFT \u5411\u5de6 RIGHT \u5411\u53f3 UP \u5411\u4e0a DOWN \u5411\u4e0b NONE \u7981\u7528","title":"ItemOrientation"},{"location":"drag/#_1","text":"\u5982\u679c\u60f3\u8981\u6269\u5c55ItemTouchHelper\u53ef\u4ee5\u7ed9BindingAdapter\u7684\u53d8\u91cf itemTouchHelper \u8d4b\u503c rv . linear (). setup { addType < Model >( R . layout . item ) itemTouchHelper = ItemTouchHelper ( object : DefaultItemTouchCallback ( this ) { // \u8fd9\u91cc\u53ef\u4ee5\u91cd\u5199\u51fd\u6570 override fun onMoved ( recyclerView : RecyclerView , viewHolder : RecyclerView . ViewHolder , fromPos : Int , target : RecyclerView . ViewHolder , toPos : Int , x : Int , y : Int ) { super . onMoved ( recyclerView , viewHolder , fromPos , target , toPos , x , y ) // \u8fd9\u662f\u62d6\u62fd\u4ea4\u6362\u540e\u56de\u8c03, \u8fd9\u91cc\u53ef\u4ee5\u540c\u6b65\u670d\u52a1\u5668 } }) }. models = data","title":"\u81ea\u5b9a\u4e49"},{"location":"extension/","text":"RecyclerView \u00b6 \u63d0\u4f9b\u4e00\u4e9b BindingAdapter \u5e38\u7528\u7684\u8c03\u7528 \u51fd\u6570 \u63cf\u8ff0 bindingAdapter \u5982\u679cAdapter\u662f[BindingAdapter]\u5219\u8fd4\u56de\u5bf9\u8c61, \u5426\u5219\u629b\u51fa\u5f02\u5e38 models \u6570\u636e\u6a21\u578b\u96c6\u5408, \u9700\u8981\u6267\u884c notify* \u51fd\u6570\u624b\u52a8\u5237\u65b0\u5217\u8868 mutable \u53ef\u589e\u5220\u7684[models]\u6570\u636e\u6a21\u578b\u96c6\u5408, \u9700\u8981\u6267\u884c notify* \u51fd\u6570\u624b\u52a8\u5237\u65b0\u5217\u8868 addModels \u6dfb\u52a0\u6570\u636e, \u81ea\u52a8\u5237\u65b0\u5217\u8868 \u5e03\u5c40\u7ba1\u7406\u5668 \u00b6 \u6846\u67b6\u8fd8\u63d0\u4f9b\u5feb\u901f\u521b\u5efa\u5e03\u5c40\u7ba1\u7406\u5668\u7684\u6269\u5c55\u51fd\u6570, \u4e0a\u9762\u4f7f\u7528\u793a\u4f8b LinearLayoutManager rv_simple . linear (). setup { addType < SimpleModel >( R . layout . item_simple ) }. models = getData () GridLayoutManager rv_simple . grid ( 3 ). setup { addType < SimpleModel >( R . layout . item_simple ) }. models = getData () StaggeredLayoutManager rv_simple . staggered ( 3 ). setup { addType < SimpleModel >( R . layout . item_simple ) }. models = getData () \u76f8\u5173\u51fd\u6570 \u51fd\u6570 \u63cf\u8ff0 linear \u4f7f\u7528 LinearLayoutManager \u521b\u5efa\u7ebf\u6027\u5217\u8868 grid \u4f7f\u7528 GridLayoutManager \u521b\u5efa\u7f51\u683c\u5217\u8868 staggered \u4f7f\u7528 StaggeredLayoutManager \u521b\u5efa\u7011\u5e03\u6d41\u5217\u8868 \u5206\u5272\u7ebf \u00b6 \u6846\u67b6\u63d0\u4f9b\u5feb\u901f\u8bbe\u7f6e\u5206\u9694\u7269\u6269\u5c55\u51fd\u6570 rv . linear (). divider ( R . drawable . divider_horizontal ). setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData () \u6269\u5c55\u51fd\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u4f7f\u7528\u7684 DefaultDecoration \u6765\u521b\u5efa\u5bf9\u8c61 \u5bf9\u8bdd\u6846 \u00b6 \u901a\u8fc7\u6269\u5c55\u51fd\u6570\u5feb\u901f\u7ed9\u5bf9\u8bdd\u6846\u521b\u5efa\u5217\u8868 Dialog(activity).setAdapter(bindingAdapter).show() \u51fd\u6570 fun Dialog . brv ( block : BindingAdapter .( RecyclerView ) -> Unit ): Dialog","title":"\u6269\u5c55\u51fd\u6570"},{"location":"extension/#recyclerview","text":"\u63d0\u4f9b\u4e00\u4e9b BindingAdapter \u5e38\u7528\u7684\u8c03\u7528 \u51fd\u6570 \u63cf\u8ff0 bindingAdapter \u5982\u679cAdapter\u662f[BindingAdapter]\u5219\u8fd4\u56de\u5bf9\u8c61, \u5426\u5219\u629b\u51fa\u5f02\u5e38 models \u6570\u636e\u6a21\u578b\u96c6\u5408, \u9700\u8981\u6267\u884c notify* \u51fd\u6570\u624b\u52a8\u5237\u65b0\u5217\u8868 mutable \u53ef\u589e\u5220\u7684[models]\u6570\u636e\u6a21\u578b\u96c6\u5408, \u9700\u8981\u6267\u884c notify* \u51fd\u6570\u624b\u52a8\u5237\u65b0\u5217\u8868 addModels \u6dfb\u52a0\u6570\u636e, \u81ea\u52a8\u5237\u65b0\u5217\u8868","title":"RecyclerView"},{"location":"extension/#_1","text":"\u6846\u67b6\u8fd8\u63d0\u4f9b\u5feb\u901f\u521b\u5efa\u5e03\u5c40\u7ba1\u7406\u5668\u7684\u6269\u5c55\u51fd\u6570, \u4e0a\u9762\u4f7f\u7528\u793a\u4f8b LinearLayoutManager rv_simple . linear (). setup { addType < SimpleModel >( R . layout . item_simple ) }. models = getData () GridLayoutManager rv_simple . grid ( 3 ). setup { addType < SimpleModel >( R . layout . item_simple ) }. models = getData () StaggeredLayoutManager rv_simple . staggered ( 3 ). setup { addType < SimpleModel >( R . layout . item_simple ) }. models = getData () \u76f8\u5173\u51fd\u6570 \u51fd\u6570 \u63cf\u8ff0 linear \u4f7f\u7528 LinearLayoutManager \u521b\u5efa\u7ebf\u6027\u5217\u8868 grid \u4f7f\u7528 GridLayoutManager \u521b\u5efa\u7f51\u683c\u5217\u8868 staggered \u4f7f\u7528 StaggeredLayoutManager \u521b\u5efa\u7011\u5e03\u6d41\u5217\u8868","title":"\u5e03\u5c40\u7ba1\u7406\u5668"},{"location":"extension/#_2","text":"\u6846\u67b6\u63d0\u4f9b\u5feb\u901f\u8bbe\u7f6e\u5206\u9694\u7269\u6269\u5c55\u51fd\u6570 rv . linear (). divider ( R . drawable . divider_horizontal ). setup { addType < DividerModel >( R . layout . item_divider_horizontal ) }. models = getData () \u6269\u5c55\u51fd\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u4f7f\u7528\u7684 DefaultDecoration \u6765\u521b\u5efa\u5bf9\u8c61","title":"\u5206\u5272\u7ebf"},{"location":"extension/#_3","text":"\u901a\u8fc7\u6269\u5c55\u51fd\u6570\u5feb\u901f\u7ed9\u5bf9\u8bdd\u6846\u521b\u5efa\u5217\u8868 Dialog(activity).setAdapter(bindingAdapter).show() \u51fd\u6570 fun Dialog . brv ( block : BindingAdapter .( RecyclerView ) -> Unit ): Dialog","title":"\u5bf9\u8bdd\u6846"},{"location":"flexbox/","text":"BRV\u5bf9\u4e8e\u4f38\u7f29\u5e03\u5c40\u7684\u5b9e\u73b0\u53ef\u4ee5\u81ea\u884c\u6dfb\u52a0Google\u5f00\u6e90\u5e93 flexbox-layout \u6dfb\u52a0\u4f9d\u8d56 dependencies { implementation 'com.google.android:flexbox:2.0.1' } \u7136\u540e\u521b\u5efa\u5217\u8868 rv . layoutManager = FlexboxLayoutManager ( activity ) rv . setup { addType < FlexTagModel >( R . layout . item_flex_tag ) }. models = getData ()","title":"\u4f38\u7f29\u5e03\u5c40"},{"location":"group/","text":"\u7279\u70b9 \u00b6 \u5c55\u5f00/\u6298\u53e0 \u52a8\u753b \u9012\u5f52\u5c55\u5f00/\u6298\u53e0 \u5c55\u5f00\u540e\u7f6e\u9876 \u5217\u8868\u59cb\u7ec8\u4ec5\u5c55\u5f00\u4e00\u4e2a\u5206\u7ec4 \u67e5\u627e\u4e0a\u5c42\u5206\u7ec4 \u4f7f\u7528 \u00b6 \u8981\u6c42Model\u5b9e\u73b0 ItemExpand class GroupModel : ItemExpand { // \u540c\u7ea7\u522b\u5206\u7ec4\u7684\u7d22\u5f15\u4f4d\u7f6e override var itemGroupPosition : Int = 0 // \u5f53\u524d\u6761\u76ee\u662f\u5426\u5c55\u5f00 override var itemExpand : Boolean = false // \u8be5\u53d8\u91cf\u5b58\u50a8\u5b50\u5217\u8868 override var itemSublist : List < Any ?>? = listOf ( Model (), Model (), Model (), Model ()) } \u521b\u5efa\u5217\u8868 rv_group . linear (). setup { // \u4efb\u4f55\u6761\u76ee\u90fd\u9700\u8981\u6dfb\u52a0\u7c7b\u578b\u5230BindingAdapter\u4e2d addType < GroupModel >( R . layout . item_group_title ) addFastClickable ( R . id . item ) // \u5c55\u5f00\u548c\u6298\u53e0\u70b9\u51fb\u4e8b\u4ef6\u4e0d\u9700\u8981\u9632\u6296\u52a8, \u6240\u4ee5\u4f7f\u7528\u8be5\u51fd\u6570 onClick { expandOrCollapse () // \u5c55\u5f00\u6216\u8005\u6298\u53e0 } }. models = getData () \u5206\u7ec4\u76f8\u5173\u51fd\u6570 \u00b6 [BindingAdapter] \u5206\u7ec4\u76f8\u5173\u51fd\u6570 var expandAnimationEnabled = true // \u5c55\u5f00\u6298\u53e0\u662f\u5426\u5b58\u5728\u52a8\u753b var singleExpandMode = false // \u662f\u5426\u53ea\u5141\u8bb8\u4e00\u4e2a\u5206\u7ec4\u5c55\u5f00(\u5373\u5c55\u5f00\u5f53\u524d\u5206\u7ec4\u5c31\u6298\u53e0\u4e0a\u4e2a\u5206\u7ec4) fun onExpand ( block : BindingViewHolder .( Boolean ) -> Unit ) // \u5c55\u5f00\u56de\u8c03\u76d1\u542c fun expand ( @IntRange ( from = 0 ) position : Int , // \u6307\u5b9a\u6761\u76ee\u4f4d\u7f6e scrollTop : Boolean = false , // \u5c55\u5f00\u540e\u662f\u5426\u5728\u5217\u8868\u4e2d\u79fb\u52a8\u7f6e\u9876\u5f53\u524d\u6761\u76ee @IntRange ( from = - 1 ) depth : Int = 0 // \u9012\u5f52\u7ea7\u522b, -1 \u8868\u793a\u5c55\u5f00\u5f53\u524d\u6761\u76ee\u7684\u6240\u6709\u5b50\u5217\u8868 ): Int // \u5c55\u5f00\u6307\u5b9a\u6761\u76ee fun collapse ( @IntRange ( from = 0 ) position : Int , @IntRange ( from = - 1 ) depth : Int = 0 ): Int // \u6298\u53e0\u6307\u5b9a\u6761\u76ee fun expandOrCollapse ( @IntRange ( from = 0 ) position : Int , scrollTop : Boolean = false , @IntRange ( from = - 1 ) depth : Int = 0 ): Int // \u5c55\u5f00\u6216\u8005\u6298\u53e0\u6307\u5b9a\u6761\u76ee(\u6839\u636e\u5f53\u524d\u6761\u76ee\u72b6\u6001\u51b3\u5b9a\u662f\u6298\u53e0/\u5c55\u5f00) [BindingViewHolder] \u5206\u7ec4\u76f8\u5173\u51fd\u6570 fun expand ( scrollTop : Boolean = true , @IntRange ( from = - 1 ) depth : Int = 0 ): Int fun collapse ( @IntRange ( from = - 1 ) depth : Int = 0 ): Int fun expandOrCollapse ( scrollTop : Boolean = false , @IntRange ( from = - 1 ) depth : Int = 0 ): Int // \u5c55\u5f00\u548c\u6298\u53e0 fun findParentPosition (): Int // \u67e5\u627e\u4e0a\u5c42\u5206\u7ec4\u7d22\u5f15\u4f4d\u7f6e, \u5982\u679c\u6ca1\u6709\u8fd4\u56de-1 fun findParentViewHolder (): BindingViewHolder ? // \u67e5\u627e\u4e0a\u5c42\u5206\u7ec4ViewHolder, \u5982\u679c\u6ca1\u6709\u8fd4\u56deNull","title":"\u5206\u7ec4"},{"location":"group/#_1","text":"\u5c55\u5f00/\u6298\u53e0 \u52a8\u753b \u9012\u5f52\u5c55\u5f00/\u6298\u53e0 \u5c55\u5f00\u540e\u7f6e\u9876 \u5217\u8868\u59cb\u7ec8\u4ec5\u5c55\u5f00\u4e00\u4e2a\u5206\u7ec4 \u67e5\u627e\u4e0a\u5c42\u5206\u7ec4","title":"\u7279\u70b9"},{"location":"group/#_2","text":"\u8981\u6c42Model\u5b9e\u73b0 ItemExpand class GroupModel : ItemExpand { // \u540c\u7ea7\u522b\u5206\u7ec4\u7684\u7d22\u5f15\u4f4d\u7f6e override var itemGroupPosition : Int = 0 // \u5f53\u524d\u6761\u76ee\u662f\u5426\u5c55\u5f00 override var itemExpand : Boolean = false // \u8be5\u53d8\u91cf\u5b58\u50a8\u5b50\u5217\u8868 override var itemSublist : List < Any ?>? = listOf ( Model (), Model (), Model (), Model ()) } \u521b\u5efa\u5217\u8868 rv_group . linear (). setup { // \u4efb\u4f55\u6761\u76ee\u90fd\u9700\u8981\u6dfb\u52a0\u7c7b\u578b\u5230BindingAdapter\u4e2d addType < GroupModel >( R . layout . item_group_title ) addFastClickable ( R . id . item ) // \u5c55\u5f00\u548c\u6298\u53e0\u70b9\u51fb\u4e8b\u4ef6\u4e0d\u9700\u8981\u9632\u6296\u52a8, \u6240\u4ee5\u4f7f\u7528\u8be5\u51fd\u6570 onClick { expandOrCollapse () // \u5c55\u5f00\u6216\u8005\u6298\u53e0 } }. models = getData ()","title":"\u4f7f\u7528"},{"location":"group/#_3","text":"[BindingAdapter] \u5206\u7ec4\u76f8\u5173\u51fd\u6570 var expandAnimationEnabled = true // \u5c55\u5f00\u6298\u53e0\u662f\u5426\u5b58\u5728\u52a8\u753b var singleExpandMode = false // \u662f\u5426\u53ea\u5141\u8bb8\u4e00\u4e2a\u5206\u7ec4\u5c55\u5f00(\u5373\u5c55\u5f00\u5f53\u524d\u5206\u7ec4\u5c31\u6298\u53e0\u4e0a\u4e2a\u5206\u7ec4) fun onExpand ( block : BindingViewHolder .( Boolean ) -> Unit ) // \u5c55\u5f00\u56de\u8c03\u76d1\u542c fun expand ( @IntRange ( from = 0 ) position : Int , // \u6307\u5b9a\u6761\u76ee\u4f4d\u7f6e scrollTop : Boolean = false , // \u5c55\u5f00\u540e\u662f\u5426\u5728\u5217\u8868\u4e2d\u79fb\u52a8\u7f6e\u9876\u5f53\u524d\u6761\u76ee @IntRange ( from = - 1 ) depth : Int = 0 // \u9012\u5f52\u7ea7\u522b, -1 \u8868\u793a\u5c55\u5f00\u5f53\u524d\u6761\u76ee\u7684\u6240\u6709\u5b50\u5217\u8868 ): Int // \u5c55\u5f00\u6307\u5b9a\u6761\u76ee fun collapse ( @IntRange ( from = 0 ) position : Int , @IntRange ( from = - 1 ) depth : Int = 0 ): Int // \u6298\u53e0\u6307\u5b9a\u6761\u76ee fun expandOrCollapse ( @IntRange ( from = 0 ) position : Int , scrollTop : Boolean = false , @IntRange ( from = - 1 ) depth : Int = 0 ): Int // \u5c55\u5f00\u6216\u8005\u6298\u53e0\u6307\u5b9a\u6761\u76ee(\u6839\u636e\u5f53\u524d\u6761\u76ee\u72b6\u6001\u51b3\u5b9a\u662f\u6298\u53e0/\u5c55\u5f00) [BindingViewHolder] \u5206\u7ec4\u76f8\u5173\u51fd\u6570 fun expand ( scrollTop : Boolean = true , @IntRange ( from = - 1 ) depth : Int = 0 ): Int fun collapse ( @IntRange ( from = - 1 ) depth : Int = 0 ): Int fun expandOrCollapse ( scrollTop : Boolean = false , @IntRange ( from = - 1 ) depth : Int = 0 ): Int // \u5c55\u5f00\u548c\u6298\u53e0 fun findParentPosition (): Int // \u67e5\u627e\u4e0a\u5c42\u5206\u7ec4\u7d22\u5f15\u4f4d\u7f6e, \u5982\u679c\u6ca1\u6709\u8fd4\u56de-1 fun findParentViewHolder (): BindingViewHolder ? // \u67e5\u627e\u4e0a\u5c42\u5206\u7ec4ViewHolder, \u5982\u679c\u6ca1\u6709\u8fd4\u56deNull","title":"\u5206\u7ec4\u76f8\u5173\u51fd\u6570"},{"location":"header_footer/","text":"\u5934\u5e03\u5c40\u548c\u811a\u5e03\u5c40\u5728rv\u4e2d\u7b97\u4f5c\u4e00\u4e2aitem, \u6240\u4ee5\u8ba1\u7b97 position \u7684\u65f6\u5019\u5e94\u5f53\u8003\u8651\u5176\u4e2d \u5934\u5e03\u5c40\u548c\u811a\u5e03\u5c40\u4e5f\u9700\u8981\u4f7f\u7528 addType \u51fd\u6570\u6dfb\u52a0\u7c7b\u578b PageRefreshLayout \u7684\u7f3a\u7701\u9875\u529f\u80fd\u4f1a\u5bfc\u81f4\u6574\u4e2a\u5217\u8868\u53ef\u80fd\u90fd\u4f1a\u88ab\u7f3a\u7701\u9875\u906e\u6321 \u5982\u679c\u4f60\u5e0c\u671b\u5934\u5e03\u5c40\u4e0d\u4f1a\u88ab\u6570\u636e\u95ee\u9898\u5f71\u54cd, \u5e76\u4e14\u548cRV\u8054\u52a8\u5212\u52a8 \u8bf7\u4f7f\u7528 CoordinatorLayout \u5d4c\u5957RV \u800c\u4e0d\u662f ScrollView/NestedScrollView \u5d4c\u5957RV\u6216\u8005\u4f7f\u7528BRV\u7684\u5934\u5e03\u5c40(Header) \u51fd\u6570 \u00b6 \u51fd\u6570 \u63cf\u8ff0 addHeader / addFooter \u6dfb\u52a0\u5934\u5e03\u5c40/\u811a\u5e03\u5c40 removeHeader / removeFooter \u5220\u9664\u5934\u5e03\u5c40/\u811a\u5e03\u5c40 removeHeaderAt / removeFooterAt \u5220\u9664\u6307\u5b9a\u7d22\u5f15\u7684\u5934\u5e03\u5c40/\u811a\u5e03\u5c40 clearHeader / clearFooter \u6e05\u9664\u5168\u90e8\u5934\u5e03\u5c40/\u811a\u5e03\u5c40 isHeader / isFooter \u6307\u5b9a\u7d22\u5f15\u662f\u5426\u662f\u5934\u5e03\u5c40/\u811a\u5e03\u5c40 headerCount / footerCount \u5934\u5e03\u5c40/\u811a\u5e03\u5c40\u6570\u91cf","title":"\u5934\u811a\u5e03\u5c40"},{"location":"header_footer/#_1","text":"\u51fd\u6570 \u63cf\u8ff0 addHeader / addFooter \u6dfb\u52a0\u5934\u5e03\u5c40/\u811a\u5e03\u5c40 removeHeader / removeFooter \u5220\u9664\u5934\u5e03\u5c40/\u811a\u5e03\u5c40 removeHeaderAt / removeFooterAt \u5220\u9664\u6307\u5b9a\u7d22\u5f15\u7684\u5934\u5e03\u5c40/\u811a\u5e03\u5c40 clearHeader / clearFooter \u6e05\u9664\u5168\u90e8\u5934\u5e03\u5c40/\u811a\u5e03\u5c40 isHeader / isFooter \u6307\u5b9a\u7d22\u5f15\u662f\u5426\u662f\u5934\u5e03\u5c40/\u811a\u5e03\u5c40 headerCount / footerCount \u5934\u5e03\u5c40/\u811a\u5e03\u5c40\u6570\u91cf","title":"\u51fd\u6570"},{"location":"hover/","text":"\u901a\u8fc7\u5b9e\u73b0\u63a5\u53e3 ItemHover class HoverHeaderModel : ItemHover { // \u8fd4\u56de\u503c\u51b3\u5b9a\u662f\u5426\u60ac\u505c override var itemHover : Boolean = true } \u7136\u540e\u8fd9\u4e2aItem\u5c31\u4f1a\u60ac\u505c\u5728\u9876\u90e8\u4e86 \u5b8c\u6574\u793a\u4f8b override fun onActivityCreated ( savedInstanceState : Bundle ?) { super . onActivityCreated ( savedInstanceState ) rv_hover . linear (). setup { addType < Model >( R . layout . item_multi_type_simple ) addType < HoverHeaderModel >( R . layout . item_hover_header ) models = getData () // \u70b9\u51fb\u4e8b\u4ef6 onClick ( R . id . item ) { when ( itemViewType ) { R . layout . item_hover_header -> toast ( \"\u60ac\u505c\u6761\u76ee\" ) else -> toast ( \"\u666e\u901a\u6761\u76ee\" ) } } // \u53ef\u9009\u9879, \u7c98\u6027\u76d1\u542c\u5668 onHoverAttachListener = object : OnHoverAttachListener { // \u9ecf\u4f4f\u9876\u90e8\u7684\u65f6\u5019, v\u8868\u793a\u6307\u5b9a\u60ac\u505c\u7684itemView\u5bf9\u8c61 override fun attachHover ( v : View ) { ViewCompat . setElevation ( v , 10F ) } // \u4ece\u9876\u90e8\u5206\u79bb\u7684\u65f6\u5019 override fun detachHover ( v : View ) { ViewCompat . setElevation ( v , 0F ) } } } } \u4e0d\u540c\u4e8e\u5927\u90e8\u5206\u60ac\u505c\u6846\u67b6, BRV\u65e0\u9700\u7279\u6b8a\u5904\u7406\u652f\u6301\u5168\u90e8\u7684\u70b9\u51fb\u4e8b\u4ef6 [BindingAdapter] \u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u5c5e\u4e8e\u60ac\u505c fun isHover ( position : Int ): Boolean","title":"\u60ac\u505c"},{"location":"listener/","text":"\u51fd\u6570 \u00b6 \u51fd\u6570 \u63cf\u8ff0 addClickable \u6dfb\u52a0\u9700\u8981\u76d1\u542c\u70b9\u51fb\u4e8b\u4ef6\u7684\u89c6\u56feId (500\u6beb\u79d2\u9632\u6296\u52a8) addFastClickable \u6dfb\u52a0\u9700\u8981\u76d1\u542c\u70b9\u51fb\u4e8b\u4ef6\u7684\u89c6\u56feId addLongClickable \u6dfb\u52a0\u9700\u8981\u76d1\u542c\u957f\u6309\u4e8b\u4ef6\u7684\u89c6\u56feId onClick \u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6\u76d1\u542c\u5668, \u540c\u65f6\u652f\u6301\u53c2\u6570\u6dfb\u52a0Id onLongClick \u6dfb\u52a0\u957f\u6309\u4e8b\u4ef6\u76d1\u542c\u5668, \u540c\u65f6\u652f\u6301\u53c2\u6570\u6dfb\u52a0Id onBind \u5bf9\u5e94Adapter\u7684 onBindViewHolder \u51fd\u6570\u56de\u8c03, \u6bcf\u6b21\u663e\u793aItem\u90fd\u4f1a\u89e6\u53d1\u56de\u8c03, \u7528\u4e8e\u5904\u7406\u6570\u636e\u7ed1\u5b9a onCreate \u5bf9\u5e94Adapter\u7684 onCreateViewHolder \u51fd\u6570\u56de\u8c03, \u7528\u4e8e\u521b\u5efaItem\u7684\u89c6\u56fe listBind \u4e00\u4e2a onBindViewHolder \u76d1\u542c\u5668\u7684\u96c6\u5408, \u4e00\u822c\u7528\u4e8e\u5176\u4ed6\u6846\u67b6\u6765\u76d1\u542c\u6269\u5c55, \u4f7f\u7528\u8005\u4e00\u822c\u4e0d\u9700\u8981\u4f7f\u7528 \u793a\u4f8b \u00b6 \u901a\u8fc7\u4f7f\u7528Item\u7684\u5e03\u5c40\u6587\u4ef6\u4e2d\u7684\u63a7\u4ef6id\u53ef\u4ee5\u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6\u6216\u8005\u957f\u6309\u4e8b\u4ef6 rv_normal . linear (). setup { addType < NormalModel >( R . layout . item_multi_type_normal ) addClickable ( R . id . item ) onClick { // Item\u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6, \u5c31\u8981\u7ed9Item\u7684\u6839\u5e03\u5c40\u8bbe\u7f6e\u4e00\u4e2aid, \u8fd9\u91cc\u8bbe\u7f6e\u7684\u662fR.id.item } }. models = getData () \u5176\u5b9e\u4e0a\u9762\u4e24\u4e2a\u6b65\u9aa4\u53ef\u4ee5\u6574\u5408\u6210\u4e00\u4e2a, \u8fd9\u91cc\u6f14\u793a\u4e0b\u540c\u65f6\u8bbe\u7f6e\u591a\u4e2aId\u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6 rv_normal . linear (). setup { addType < NormalModel >( R . layout . item_multi_type_normal ) onClick ( R . id . item , R . id . btn_submit ) { // it\u5c31\u662f\u4f60\u8bbe\u7f6e\u7684id when ( it ){ R . id . item -> { // Item\u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6, \u5c31\u8981\u7ed9Item\u7684\u6839\u5e03\u5c40\u8bbe\u7f6e\u4e00\u4e2aid, \u8fd9\u91cc\u8bbe\u7f6e\u7684\u662fR.id.item } R . id . btn_submit -> { // \u505a\u4efb\u4f55\u4e8b } } } }. models = getData () \u5d4c\u5957 \u00b6 \u5728\u4f7f\u7528rv\u5d4c\u5957rv\u65f6\u5e94\u5f53\u5728onCreate\u56de\u8c03\u4e2d\u4e3a\u5185\u5d4c\u7684rv\u8bbe\u7f6e\u89c6\u56fe\u4f7f\u7528 rv.setup , \u5728onBind\u4e2d\u7ed1\u5b9a\u6570\u636e\u4f7f\u7528 rv.models rv_simple . linear (). setup { addType < SimpleModel >( R . layout . item_simple ) onCreate { val rv_nested = findView < RecyclerView >( R . id . rv_check_mode ) rv_nested . setup { addType < NestedModel >( R . layout . item_simple_nested ) } } onBind { val rv_nested = findView < RecyclerView >( R . id . rv_check_mode ) rv_nested . models = getModel < Model >(). listNested } }","title":"\u76d1\u542c\u4e8b\u4ef6"},{"location":"listener/#_1","text":"\u51fd\u6570 \u63cf\u8ff0 addClickable \u6dfb\u52a0\u9700\u8981\u76d1\u542c\u70b9\u51fb\u4e8b\u4ef6\u7684\u89c6\u56feId (500\u6beb\u79d2\u9632\u6296\u52a8) addFastClickable \u6dfb\u52a0\u9700\u8981\u76d1\u542c\u70b9\u51fb\u4e8b\u4ef6\u7684\u89c6\u56feId addLongClickable \u6dfb\u52a0\u9700\u8981\u76d1\u542c\u957f\u6309\u4e8b\u4ef6\u7684\u89c6\u56feId onClick \u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6\u76d1\u542c\u5668, \u540c\u65f6\u652f\u6301\u53c2\u6570\u6dfb\u52a0Id onLongClick \u6dfb\u52a0\u957f\u6309\u4e8b\u4ef6\u76d1\u542c\u5668, \u540c\u65f6\u652f\u6301\u53c2\u6570\u6dfb\u52a0Id onBind \u5bf9\u5e94Adapter\u7684 onBindViewHolder \u51fd\u6570\u56de\u8c03, \u6bcf\u6b21\u663e\u793aItem\u90fd\u4f1a\u89e6\u53d1\u56de\u8c03, \u7528\u4e8e\u5904\u7406\u6570\u636e\u7ed1\u5b9a onCreate \u5bf9\u5e94Adapter\u7684 onCreateViewHolder \u51fd\u6570\u56de\u8c03, \u7528\u4e8e\u521b\u5efaItem\u7684\u89c6\u56fe listBind \u4e00\u4e2a onBindViewHolder \u76d1\u542c\u5668\u7684\u96c6\u5408, \u4e00\u822c\u7528\u4e8e\u5176\u4ed6\u6846\u67b6\u6765\u76d1\u542c\u6269\u5c55, \u4f7f\u7528\u8005\u4e00\u822c\u4e0d\u9700\u8981\u4f7f\u7528","title":"\u51fd\u6570"},{"location":"listener/#_2","text":"\u901a\u8fc7\u4f7f\u7528Item\u7684\u5e03\u5c40\u6587\u4ef6\u4e2d\u7684\u63a7\u4ef6id\u53ef\u4ee5\u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6\u6216\u8005\u957f\u6309\u4e8b\u4ef6 rv_normal . linear (). setup { addType < NormalModel >( R . layout . item_multi_type_normal ) addClickable ( R . id . item ) onClick { // Item\u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6, \u5c31\u8981\u7ed9Item\u7684\u6839\u5e03\u5c40\u8bbe\u7f6e\u4e00\u4e2aid, \u8fd9\u91cc\u8bbe\u7f6e\u7684\u662fR.id.item } }. models = getData () \u5176\u5b9e\u4e0a\u9762\u4e24\u4e2a\u6b65\u9aa4\u53ef\u4ee5\u6574\u5408\u6210\u4e00\u4e2a, \u8fd9\u91cc\u6f14\u793a\u4e0b\u540c\u65f6\u8bbe\u7f6e\u591a\u4e2aId\u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6 rv_normal . linear (). setup { addType < NormalModel >( R . layout . item_multi_type_normal ) onClick ( R . id . item , R . id . btn_submit ) { // it\u5c31\u662f\u4f60\u8bbe\u7f6e\u7684id when ( it ){ R . id . item -> { // Item\u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6, \u5c31\u8981\u7ed9Item\u7684\u6839\u5e03\u5c40\u8bbe\u7f6e\u4e00\u4e2aid, \u8fd9\u91cc\u8bbe\u7f6e\u7684\u662fR.id.item } R . id . btn_submit -> { // \u505a\u4efb\u4f55\u4e8b } } } }. models = getData ()","title":"\u793a\u4f8b"},{"location":"listener/#_3","text":"\u5728\u4f7f\u7528rv\u5d4c\u5957rv\u65f6\u5e94\u5f53\u5728onCreate\u56de\u8c03\u4e2d\u4e3a\u5185\u5d4c\u7684rv\u8bbe\u7f6e\u89c6\u56fe\u4f7f\u7528 rv.setup , \u5728onBind\u4e2d\u7ed1\u5b9a\u6570\u636e\u4f7f\u7528 rv.models rv_simple . linear (). setup { addType < SimpleModel >( R . layout . item_simple ) onCreate { val rv_nested = findView < RecyclerView >( R . id . rv_check_mode ) rv_nested . setup { addType < NestedModel >( R . layout . item_simple_nested ) } } onBind { val rv_nested = findView < RecyclerView >( R . id . rv_check_mode ) rv_nested . models = getModel < Model >(). listNested } }","title":"\u5d4c\u5957"},{"location":"multi_type/","text":"\u4e0d\u540c\u6570\u636e\u7684\u591a\u7c7b\u578b \u00b6 rv . linear (). setup { addType < Model >( R . layout . item_1 ) addType < Store >( R . layout . item_2 ) }. models = data \u4e0d\u540c\u5b57\u6bb5\u7684\u591a\u7c7b\u578b \u00b6 rv . linear (). setup { addType < Model >{ // \u4f7f\u7528\u5e74\u9f84\u6765\u4f5c\u4e3a\u5224\u65ad\u8fd4\u56de\u4e0d\u540c\u7684\u5e03\u5c40 when ( age ) { 23 -> { R . layout . item_1 } else -> { R . layout . item_2 } } } }. models = data \u5f53\u524d addType \u7684\u5927\u62ec\u53f7\u5185\u7684 this \u5c31\u662f\u4f60\u6307\u5b9a\u7684\u6cdb\u578b, \u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u901a\u8fc7 Model.age \u6765\u5224\u65ad\u8fd4\u56de\u4e0d\u540c\u7684\u591a\u7c7b\u578b \u533a\u5206\u7c7b\u578b \u00b6 itemViewType \u5c5e\u4e8eonBind\u51fd\u6570\u63a5\u53d7\u8005 BindingViewHolder \u7684\u5b57\u6bb5 rv . linear (). setup { addType < Model >( R . layout . item_1 ) addType < Store >( R . layout . item_2 ) onBind { // when ( itemViewType ) { R . layout . item_1 -> { // \u7c7b\u578b 1 } R . layout . item_2 -> { // \u7c7b\u578b 1 } } } }. models = data","title":"\u591a\u7c7b\u578b"},{"location":"multi_type/#_1","text":"rv . linear (). setup { addType < Model >( R . layout . item_1 ) addType < Store >( R . layout . item_2 ) }. models = data","title":"\u4e0d\u540c\u6570\u636e\u7684\u591a\u7c7b\u578b"},{"location":"multi_type/#_2","text":"rv . linear (). setup { addType < Model >{ // \u4f7f\u7528\u5e74\u9f84\u6765\u4f5c\u4e3a\u5224\u65ad\u8fd4\u56de\u4e0d\u540c\u7684\u5e03\u5c40 when ( age ) { 23 -> { R . layout . item_1 } else -> { R . layout . item_2 } } } }. models = data \u5f53\u524d addType \u7684\u5927\u62ec\u53f7\u5185\u7684 this \u5c31\u662f\u4f60\u6307\u5b9a\u7684\u6cdb\u578b, \u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u901a\u8fc7 Model.age \u6765\u5224\u65ad\u8fd4\u56de\u4e0d\u540c\u7684\u591a\u7c7b\u578b","title":"\u4e0d\u540c\u5b57\u6bb5\u7684\u591a\u7c7b\u578b"},{"location":"multi_type/#_3","text":"itemViewType \u5c5e\u4e8eonBind\u51fd\u6570\u63a5\u53d7\u8005 BindingViewHolder \u7684\u5b57\u6bb5 rv . linear (). setup { addType < Model >( R . layout . item_1 ) addType < Store >( R . layout . item_2 ) onBind { // when ( itemViewType ) { R . layout . item_1 -> { // \u7c7b\u578b 1 } R . layout . item_2 -> { // \u7c7b\u578b 1 } } } }. models = data","title":"\u533a\u5206\u7c7b\u578b"},{"location":"net/","text":"Net\u662f\u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684\u5f3a\u5927\u7684\u7f51\u7edc\u8bf7\u6c42/\u5f02\u6b65\u4efb\u52a1\u6846\u67b6, \u975e\u5e38\u4f18\u79c0\u7684\u8bbe\u8ba1, BRV\u53ef\u4ee5\u548cNet\u8054\u52a8\u6269\u5c55\u529f\u80fd \u9996\u5148\u5f15\u7528 Net \u4f9d\u8d56\u5e93 dependencies { implementation 'com.github.liangjingkanji:Net:+' } \u63a8\u8350\u4f7f\u7528\u6307\u5b9a\u7684\u7248\u672c\u53f7\u66ff\u6362 + \u914d\u5408 Net \u6846\u67b6\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0b\u529f\u80fd \u81ea\u52a8\u4e0b\u62c9\u5237\u65b0 \u81ea\u52a8\u5206\u9875\u52a0\u8f7d \u81ea\u52a8\u7f3a\u7701\u9875","title":"\u7f51\u7edc\u8bf7\u6c42"},{"location":"refresh/","text":"SmartRefreshLayout \u5e94\u8be5\u662f\u76ee\u524dAndroid\u4e0a\u6269\u5c55\u6027\u6700\u5f3a\u7684\u5237\u65b0\u6846\u67b6, \u800cBRV\u7684\u4e0b\u62c9\u5237\u65b0\u548c\u4e0a\u62c9\u52a0\u8f7d\u6b63\u662f\u6269\u5c55\u7684SmartRefreshLayout , \u652f\u6301\u5176\u6240\u6709\u7279\u6027\u5e76\u4e14\u8fd8\u589e\u52a0\u4e86\u65b0\u7684\u529f\u80fd. \u5982\u679c\u9700\u8981\u66f4\u591a\u7684\u4e0b\u62c9\u5237\u65b0\u6216\u8005\u4e0a\u62c9\u52a0\u8f7d\u7684\u81ea\u5b9a\u4e49\u9700\u6c42\u8bf7\u67e5\u770b SmartRefreshLayout \u7684\u4f7f\u7528\u6587\u6863 \u672c\u6846\u67b6\u4e2d\u7684 PageRefreshLayout \u7ee7\u627f\u81ea SmartRefreshLayout , \u6545\u62e5\u6709\u5176\u6240\u6709\u7279\u6027 \u672c\u5e93\u5df2\u5f15\u5165SmartRefreshLayout, \u65e0\u9700\u518d\u6b21\u5f15\u5165 api 'com.scwang.smart:refresh-layout-kernel:2.0.0' api 'com.scwang.smart:refresh-footer-classics:2.0.0' api 'com.scwang.smart:refresh-header-material:2.0.0' SmartRefreshLayout\u7684\u6307\u5b9a\u7684\u5237\u65b0\u5934\u548c\u5237\u65b0\u811a\u5e03\u5c40\u8bf7\u5206\u522b\u4f9d\u8d56(\u5176\u5e93\u5982\u6b64\u8bbe\u8ba1) \u53ef\u9009\u914d\u7f6e\u7684\u5237\u65b0\u5934\u5e03\u5c40\u548c\u811a\u5e03\u5c40 implementation 'com.scwang.smart:refresh-header-classics:2.0.1' //\u7ecf\u5178\u5237\u65b0\u5934 implementation 'com.scwang.smart:refresh-header-radar:2.0.1' //\u96f7\u8fbe\u5237\u65b0\u5934 implementation 'com.scwang.smart:refresh-header-falsify:2.0.1' //\u865a\u62df\u5237\u65b0\u5934 implementation 'com.scwang.smart:refresh-header-material:2.0.1' //\u8c37\u6b4c\u5237\u65b0\u5934 (\u5185\u7f6e) implementation 'com.scwang.smart:refresh-header-two-level:2.0.1' //\u4e8c\u7ea7\u5237\u65b0\u5934 implementation 'com.scwang.smart:refresh-footer-ball:2.0.1' //\u7403\u8109\u51b2\u52a0\u8f7d implementation 'com.scwang.smart:refresh-footer-classics:2.0.1' //\u7ecf\u5178\u52a0\u8f7d (\u5185\u7f6e) \u521d\u59cb\u5316 \u00b6 \u5237\u65b0\u5e03\u5c40\u8981\u6c42\u5fc5\u987b\u5148\u521d\u59cb\u5316, \u63a8\u8350\u5728Application\u4e2d SmartRefreshLayout.setDefaultRefreshHeaderCreator { context, layout -> ClassicsHeader(this) } SmartRefreshLayout.setDefaultRefreshFooterCreator { context, layout -> ClassicsFooter(this) } PageRefreshLayout \u00b6 \u8be5\u63a7\u4ef6\u7ee7\u627f\u81ea SmartRefreshLayout , \u589e\u52a0\u4ee5\u4e0b\u7279\u6027 \u7b80\u5316\u51fd\u6570 \u7ec6\u8282\u4f18\u5316 \u7f3a\u7701\u9875 \u5206\u9875\u52a0\u8f7d \u62c9\u53d6\u52a0\u8f7d\u66f4\u591a \u9884\u52a0\u8f7d / \u9884\u62c9\u53d6 \u5305\u4f4fRecyclerView \u00b6 \u652f\u6301\u4e24\u79cd\u65b9\u5f0f\u521b\u5efa, \u63a8\u8350\u5e03\u5c40\u5305\u88f9, \u5e03\u5c40\u5305\u88f9 <com.drake.brv.PageRefreshLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" android:layout_width= \"match_parent\" android:id= \"@+id/page\" app:stateEnabled= \"true\" android:layout_height= \"match_parent\" tools:context= \"com.drake.brv.sample.fragment.RefreshFragment\" > <androidx.recyclerview.widget.RecyclerView android:id= \"@+id/rv\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </com.drake.brv.PageRefreshLayout> \u4ee3\u7801\u5305\u88f9 val page = rv.page() \u521b\u5efa\u5217\u8868 \u00b6 rv . linear (). setup { addType < Model >( R . layout . item_multi_type_simple ) addType < DoubleItemModel >( R . layout . item_multi_type_two ) } page . onRefresh { postDelayed ({ // \u6a21\u62df\u7f51\u7edc\u8bf7\u6c422\u79d2\u540e\u6210\u529f, \u521b\u5efa\u5047\u7684\u6570\u636e\u96c6 val data = getData () addData ( data ) { index < total // \u5224\u65ad\u662f\u5426\u6709\u66f4\u591a\u9875 } }, 2000 ) }. autoRefresh () onRefresh \u5373\u6bcf\u6b21\u5237\u65b0/\u4e0a\u62c9\u52a0\u8f7d\u90fd\u4f1a\u6267\u884c\u7684\u51fd\u6570 \u76d1\u542c\u72b6\u6001 \u00b6 // \u4e0b\u62c9\u5237\u65b0 page . onRefresh { // \u8fd9\u91cc\u53ef\u4ee5\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\u7b49\u5f02\u6b65\u64cd\u4f5c } // \u4e0a\u62c9\u52a0\u8f7d page . onLoadMore { // \u8fd9\u91cc\u53ef\u4ee5\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\u7b49\u5f02\u6b65\u64cd\u4f5c } \u5982\u679c\u4e0d\u8c03\u7528 onLoadMore \u5219\u4e0a\u62c9\u52a0\u8f7d\u540c\u6837\u4e5f\u4f1a\u6267\u884c onRefresh \u51fd\u6570, \u56e0\u4e3a\u4e0b\u62c9\u5237\u65b0\u548c\u4e0a\u62c9\u52a0\u8f7d\u5728\u9879\u76ee\u4e2d\u4e00\u822c\u662f\u540c\u4e00\u4e2a\u63a5\u53e3\u53ea\u662f\u5206\u9875\u5b57\u6bb5\u503c\u4e0d\u540c\u800c\u5df2 \u7f3a\u7701\u9875 \u00b6 PageRefreshLayout\u5185\u5d4c StateLayout \u540c\u65f6\u5177\u5907\u663e\u793a\u7f3a\u7701\u9875\u7684\u80fd\u529b \u62e5\u6709\u4e09\u4e2a\u51fd\u6570\u53ef\u4ee5\u89e6\u53d1\u5237\u65b0\u72b6\u6001(\u90fd\u4f1a\u56de\u8c03\u51fd\u6570onRefresh) \u51fd\u6570 \u63cf\u8ff0 autoRefresh \u663e\u793a\u4e0b\u62c9\u5237\u65b0\u52a8\u753b showLoading \u663e\u793a\u52a0\u8f7d\u4e2d\u7f3a\u7701\u9875, \u5f53\u7136\u5f97\u5148\u8bbe\u7f6e loadingLayout (\u6216\u8005\u8bfb\u53d6 StateConfig \u5168\u5c40\u7f3a\u7701\u9875\u914d\u7f6e) refresh \u9759\u9ed8\u5237\u65b0(\u65e0\u52a8\u753b) \u8fd93\u79cd\u89e6\u53d1\u5237\u65b0\u65b9\u5f0f\u90fd\u4f1a\u5bfc\u81f4\u91cd\u7f6e\u7d22\u5f15 index=startIndex , index\u5c31\u662f\u9ed8\u8ba4\u6839\u636e\u5206\u9875\u9ed8\u8ba4\u9012\u589e\u7684\u5b57\u6bb5, \u540e\u9762\u4f1a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u5b57\u6bb5 \u7f3a\u7701\u9875\u72b6\u6001\u63a7\u5236 \u51fd\u6570 \u63cf\u8ff0 showLoading \u663e\u793a\u52a0\u8f7d\u4e2d\u7f3a\u7701\u9875 showEmpty \u663e\u793a\u7a7a\u7f3a\u7701\u9875 showError \u663e\u793a\u9519\u8bef\u7f3a\u7701\u9875 showContent \u663e\u793a\u5185\u5bb9\u9875 \u914d\u7f6e\u5168\u5c40\u7f3a\u7701\u9875 \u8fd9\u5757\u4ee3\u7801\u548cStateLayout\u516c\u7528 /** * \u63a8\u8350\u5728Application\u4e2d\u8fdb\u884c\u5168\u5c40\u914d\u7f6e\u7f3a\u7701\u9875, \u5f53\u7136\u540c\u6837\u6bcf\u4e2a\u9875\u9762\u53ef\u4ee5\u5355\u72ec\u6307\u5b9a\u7f3a\u7701\u9875. * \u5177\u4f53\u67e5\u770b https://github.com/liangjingkanji/StateLayout */ StateConfig . apply { emptyLayout = R . layout . layout_empty errorLayout = R . layout . layout_error loadingLayout = R . layout . layout_loading onLoading { // \u6b64\u751f\u547d\u5468\u671f\u53ef\u4ee5\u62ff\u5230LoadingLayout\u521b\u5efa\u7684\u89c6\u56fe\u5bf9\u8c61, \u53ef\u4ee5\u8fdb\u884c\u52a8\u753b\u8bbe\u7f6e\u6216\u70b9\u51fb\u4e8b\u4ef6. } } \u5355\u4f8b\u7f3a\u7701\u9875\u914d\u7f6e\u652f\u6301\u4e24\u79cd\u65b9\u5f0f XML <com.drake.brv.PageRefreshLayout ..... app:error_layout= \"@layout/layout_error\" app:empty_layout= \"@layout/layout_empty\" app:loading_layout= \"@layout/layout_loading\" > \u4ee3\u7801 page . apply { loadingLayout = R . layout . layout_loading emptyLayout = R . layout . layout_empty errorLayout = R . layout . layout_error } \u9ed8\u8ba4\u4f1a\u4f7f\u7528\u7f3a\u7701\u9875, \u5982\u679c\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u5168\u5c40\u7f3a\u7701\u9875\u4f46\u662f\u6b64\u523b\u4e0d\u60f3\u4f7f\u7528. \u53ef\u4ee5\u4f7f\u7528\u5c5e\u6027|\u51fd\u6570: stateEnabled \u60f3\u8981\u4f7f\u7528\u7f3a\u7701\u9875\u53c8\u8981\u6c42\u7f3a\u7701\u9875\u4e0d\u906e\u76d6\u5934\u5e03\u5c40, \u5934\u5e03\u5c40\u8bf7\u4f7f\u7528 CoordinatorLayout \u5b9e\u73b0. \u6ce8\u610f\u4f7f\u7528 NestedScrollView \u4f1a\u5bfc\u81f4rv\u4e00\u6b21\u6027\u52a0\u8f7d\u5b8citem\u5185\u5b58\u6d88\u8017\u5927. \u5237\u65b0\u6570\u636e \u00b6 \u524d\u9762\u63d0\u5230 PageRefreshLayout \u652f\u6301\u81ea\u52a8\u5206\u9875\u52a0\u8f7d, \u81ea\u52a8\u5206\u9875\u4e0d\u9700\u8981\u4f60\u8c03\u7528 rv.models \u51fd\u6570\u53bb\u8bbe\u7f6e\u6570\u636e, \u4f7f\u7528 addData \u5373\u53ef // // // \u4e0b\u62c9\u5237\u65b0\u548c\u4e0a\u62c9\u52a0\u8f7d\u90fd\u4f1a\u6267\u884conRefresh, \u9664\u975e\u53e6\u5916\u8bbe\u7f6eonLoadMore pageLayout . onRefresh { scope { val data = Get < String >( \"/path\" ). await () addData ( data . list ){ // \u8be5\u56de\u8c03\u51fd\u6570\u53c2\u6570\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7528\u4e8e\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e0b\u4e00\u9875, \u51b3\u5b9a\u4e0a\u62c9\u52a0\u8f7d\u662f\u5426\u5173\u95ed adapter . itemCount < data . count // \u8fd9\u91cc\u662f\u5224\u65ad\u662f\u5426\u7531\u66f4\u591a\u9875, \u5177\u4f53\u903b\u8f91\u6839\u636e\u63a5\u53e3\u5b9a\u4e49 } } } \u5927\u90e8\u5206\u60c5\u51b5\u540e\u7aef\u5b9a\u4e49\u5206\u9875\u5b57\u6bb5\u7b2c\u4e00\u9875\u4e3a1, \u4f46\u662f\u53ef\u80fd\u5b58\u5728\u90e8\u5206\u540e\u7aef\u5b9a\u4e49\u4e3a0, \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5728Application\u4e2d\u8bbe\u7f6e index \u7684\u521d\u59cb\u503c\u5373\u7b2c\u4e00\u9875\u7684\u5b57\u6bb5 class App : Application () { override fun onCreate () { super . onCreate () PageRefreshLayout . startIndex = 1 // startIndex\u5373index\u53d8\u91cf\u7684\u521d\u59cb\u503c } \u8fd9\u91cc\u7684\u7f51\u7edc\u8bf7\u6c42\u4f7f\u7528\u7684\u662f\u6211\u5f00\u6e90\u7684\u53e6\u4e00\u4e2a\u9879\u76eeNet, \u652f\u6301\u6269\u5c55BRV. GitHub: Net . \u5047\u8bbe PageRefreshLayout \u6ca1\u6709\u76f4\u63a5\u5305\u88f9RecyclerView, \u8fd9\u4e2a\u65f6\u5019\u9700\u8981 addData \u51fd\u6570\u6307\u5b9a\u53c2\u6570adapter\u6765\u4f7f\u7528\u81ea\u52a8\u5206\u9875, \u5426\u5219\u5c06\u629b\u51fa\u5f02\u5e38","title":"\u4e0b\u62c9\u5237\u65b0/\u4e0a\u62c9\u52a0\u8f7d"},{"location":"refresh/#_1","text":"\u5237\u65b0\u5e03\u5c40\u8981\u6c42\u5fc5\u987b\u5148\u521d\u59cb\u5316, \u63a8\u8350\u5728Application\u4e2d SmartRefreshLayout.setDefaultRefreshHeaderCreator { context, layout -> ClassicsHeader(this) } SmartRefreshLayout.setDefaultRefreshFooterCreator { context, layout -> ClassicsFooter(this) }","title":"\u521d\u59cb\u5316"},{"location":"refresh/#pagerefreshlayout","text":"\u8be5\u63a7\u4ef6\u7ee7\u627f\u81ea SmartRefreshLayout , \u589e\u52a0\u4ee5\u4e0b\u7279\u6027 \u7b80\u5316\u51fd\u6570 \u7ec6\u8282\u4f18\u5316 \u7f3a\u7701\u9875 \u5206\u9875\u52a0\u8f7d \u62c9\u53d6\u52a0\u8f7d\u66f4\u591a \u9884\u52a0\u8f7d / \u9884\u62c9\u53d6","title":"PageRefreshLayout"},{"location":"refresh/#recyclerview","text":"\u652f\u6301\u4e24\u79cd\u65b9\u5f0f\u521b\u5efa, \u63a8\u8350\u5e03\u5c40\u5305\u88f9, \u5e03\u5c40\u5305\u88f9 <com.drake.brv.PageRefreshLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" android:layout_width= \"match_parent\" android:id= \"@+id/page\" app:stateEnabled= \"true\" android:layout_height= \"match_parent\" tools:context= \"com.drake.brv.sample.fragment.RefreshFragment\" > <androidx.recyclerview.widget.RecyclerView android:id= \"@+id/rv\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </com.drake.brv.PageRefreshLayout> \u4ee3\u7801\u5305\u88f9 val page = rv.page()","title":"\u5305\u4f4fRecyclerView"},{"location":"refresh/#_2","text":"rv . linear (). setup { addType < Model >( R . layout . item_multi_type_simple ) addType < DoubleItemModel >( R . layout . item_multi_type_two ) } page . onRefresh { postDelayed ({ // \u6a21\u62df\u7f51\u7edc\u8bf7\u6c422\u79d2\u540e\u6210\u529f, \u521b\u5efa\u5047\u7684\u6570\u636e\u96c6 val data = getData () addData ( data ) { index < total // \u5224\u65ad\u662f\u5426\u6709\u66f4\u591a\u9875 } }, 2000 ) }. autoRefresh () onRefresh \u5373\u6bcf\u6b21\u5237\u65b0/\u4e0a\u62c9\u52a0\u8f7d\u90fd\u4f1a\u6267\u884c\u7684\u51fd\u6570","title":"\u521b\u5efa\u5217\u8868"},{"location":"refresh/#_3","text":"// \u4e0b\u62c9\u5237\u65b0 page . onRefresh { // \u8fd9\u91cc\u53ef\u4ee5\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\u7b49\u5f02\u6b65\u64cd\u4f5c } // \u4e0a\u62c9\u52a0\u8f7d page . onLoadMore { // \u8fd9\u91cc\u53ef\u4ee5\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\u7b49\u5f02\u6b65\u64cd\u4f5c } \u5982\u679c\u4e0d\u8c03\u7528 onLoadMore \u5219\u4e0a\u62c9\u52a0\u8f7d\u540c\u6837\u4e5f\u4f1a\u6267\u884c onRefresh \u51fd\u6570, \u56e0\u4e3a\u4e0b\u62c9\u5237\u65b0\u548c\u4e0a\u62c9\u52a0\u8f7d\u5728\u9879\u76ee\u4e2d\u4e00\u822c\u662f\u540c\u4e00\u4e2a\u63a5\u53e3\u53ea\u662f\u5206\u9875\u5b57\u6bb5\u503c\u4e0d\u540c\u800c\u5df2","title":"\u76d1\u542c\u72b6\u6001"},{"location":"refresh/#_4","text":"PageRefreshLayout\u5185\u5d4c StateLayout \u540c\u65f6\u5177\u5907\u663e\u793a\u7f3a\u7701\u9875\u7684\u80fd\u529b \u62e5\u6709\u4e09\u4e2a\u51fd\u6570\u53ef\u4ee5\u89e6\u53d1\u5237\u65b0\u72b6\u6001(\u90fd\u4f1a\u56de\u8c03\u51fd\u6570onRefresh) \u51fd\u6570 \u63cf\u8ff0 autoRefresh \u663e\u793a\u4e0b\u62c9\u5237\u65b0\u52a8\u753b showLoading \u663e\u793a\u52a0\u8f7d\u4e2d\u7f3a\u7701\u9875, \u5f53\u7136\u5f97\u5148\u8bbe\u7f6e loadingLayout (\u6216\u8005\u8bfb\u53d6 StateConfig \u5168\u5c40\u7f3a\u7701\u9875\u914d\u7f6e) refresh \u9759\u9ed8\u5237\u65b0(\u65e0\u52a8\u753b) \u8fd93\u79cd\u89e6\u53d1\u5237\u65b0\u65b9\u5f0f\u90fd\u4f1a\u5bfc\u81f4\u91cd\u7f6e\u7d22\u5f15 index=startIndex , index\u5c31\u662f\u9ed8\u8ba4\u6839\u636e\u5206\u9875\u9ed8\u8ba4\u9012\u589e\u7684\u5b57\u6bb5, \u540e\u9762\u4f1a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u8be5\u5b57\u6bb5 \u7f3a\u7701\u9875\u72b6\u6001\u63a7\u5236 \u51fd\u6570 \u63cf\u8ff0 showLoading \u663e\u793a\u52a0\u8f7d\u4e2d\u7f3a\u7701\u9875 showEmpty \u663e\u793a\u7a7a\u7f3a\u7701\u9875 showError \u663e\u793a\u9519\u8bef\u7f3a\u7701\u9875 showContent \u663e\u793a\u5185\u5bb9\u9875 \u914d\u7f6e\u5168\u5c40\u7f3a\u7701\u9875 \u8fd9\u5757\u4ee3\u7801\u548cStateLayout\u516c\u7528 /** * \u63a8\u8350\u5728Application\u4e2d\u8fdb\u884c\u5168\u5c40\u914d\u7f6e\u7f3a\u7701\u9875, \u5f53\u7136\u540c\u6837\u6bcf\u4e2a\u9875\u9762\u53ef\u4ee5\u5355\u72ec\u6307\u5b9a\u7f3a\u7701\u9875. * \u5177\u4f53\u67e5\u770b https://github.com/liangjingkanji/StateLayout */ StateConfig . apply { emptyLayout = R . layout . layout_empty errorLayout = R . layout . layout_error loadingLayout = R . layout . layout_loading onLoading { // \u6b64\u751f\u547d\u5468\u671f\u53ef\u4ee5\u62ff\u5230LoadingLayout\u521b\u5efa\u7684\u89c6\u56fe\u5bf9\u8c61, \u53ef\u4ee5\u8fdb\u884c\u52a8\u753b\u8bbe\u7f6e\u6216\u70b9\u51fb\u4e8b\u4ef6. } } \u5355\u4f8b\u7f3a\u7701\u9875\u914d\u7f6e\u652f\u6301\u4e24\u79cd\u65b9\u5f0f XML <com.drake.brv.PageRefreshLayout ..... app:error_layout= \"@layout/layout_error\" app:empty_layout= \"@layout/layout_empty\" app:loading_layout= \"@layout/layout_loading\" > \u4ee3\u7801 page . apply { loadingLayout = R . layout . layout_loading emptyLayout = R . layout . layout_empty errorLayout = R . layout . layout_error } \u9ed8\u8ba4\u4f1a\u4f7f\u7528\u7f3a\u7701\u9875, \u5982\u679c\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u5168\u5c40\u7f3a\u7701\u9875\u4f46\u662f\u6b64\u523b\u4e0d\u60f3\u4f7f\u7528. \u53ef\u4ee5\u4f7f\u7528\u5c5e\u6027|\u51fd\u6570: stateEnabled \u60f3\u8981\u4f7f\u7528\u7f3a\u7701\u9875\u53c8\u8981\u6c42\u7f3a\u7701\u9875\u4e0d\u906e\u76d6\u5934\u5e03\u5c40, \u5934\u5e03\u5c40\u8bf7\u4f7f\u7528 CoordinatorLayout \u5b9e\u73b0. \u6ce8\u610f\u4f7f\u7528 NestedScrollView \u4f1a\u5bfc\u81f4rv\u4e00\u6b21\u6027\u52a0\u8f7d\u5b8citem\u5185\u5b58\u6d88\u8017\u5927.","title":"\u7f3a\u7701\u9875"},{"location":"refresh/#_5","text":"\u524d\u9762\u63d0\u5230 PageRefreshLayout \u652f\u6301\u81ea\u52a8\u5206\u9875\u52a0\u8f7d, \u81ea\u52a8\u5206\u9875\u4e0d\u9700\u8981\u4f60\u8c03\u7528 rv.models \u51fd\u6570\u53bb\u8bbe\u7f6e\u6570\u636e, \u4f7f\u7528 addData \u5373\u53ef // // // \u4e0b\u62c9\u5237\u65b0\u548c\u4e0a\u62c9\u52a0\u8f7d\u90fd\u4f1a\u6267\u884conRefresh, \u9664\u975e\u53e6\u5916\u8bbe\u7f6eonLoadMore pageLayout . onRefresh { scope { val data = Get < String >( \"/path\" ). await () addData ( data . list ){ // \u8be5\u56de\u8c03\u51fd\u6570\u53c2\u6570\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7528\u4e8e\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e0b\u4e00\u9875, \u51b3\u5b9a\u4e0a\u62c9\u52a0\u8f7d\u662f\u5426\u5173\u95ed adapter . itemCount < data . count // \u8fd9\u91cc\u662f\u5224\u65ad\u662f\u5426\u7531\u66f4\u591a\u9875, \u5177\u4f53\u903b\u8f91\u6839\u636e\u63a5\u53e3\u5b9a\u4e49 } } } \u5927\u90e8\u5206\u60c5\u51b5\u540e\u7aef\u5b9a\u4e49\u5206\u9875\u5b57\u6bb5\u7b2c\u4e00\u9875\u4e3a1, \u4f46\u662f\u53ef\u80fd\u5b58\u5728\u90e8\u5206\u540e\u7aef\u5b9a\u4e49\u4e3a0, \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5728Application\u4e2d\u8bbe\u7f6e index \u7684\u521d\u59cb\u503c\u5373\u7b2c\u4e00\u9875\u7684\u5b57\u6bb5 class App : Application () { override fun onCreate () { super . onCreate () PageRefreshLayout . startIndex = 1 // startIndex\u5373index\u53d8\u91cf\u7684\u521d\u59cb\u503c } \u8fd9\u91cc\u7684\u7f51\u7edc\u8bf7\u6c42\u4f7f\u7528\u7684\u662f\u6211\u5f00\u6e90\u7684\u53e6\u4e00\u4e2a\u9879\u76eeNet, \u652f\u6301\u6269\u5c55BRV. GitHub: Net . \u5047\u8bbe PageRefreshLayout \u6ca1\u6709\u76f4\u63a5\u5305\u88f9RecyclerView, \u8fd9\u4e2a\u65f6\u5019\u9700\u8981 addData \u51fd\u6570\u6307\u5b9a\u53c2\u6570adapter\u6765\u4f7f\u7528\u81ea\u52a8\u5206\u9875, \u5426\u5219\u5c06\u629b\u51fa\u5f02\u5e38","title":"\u5237\u65b0\u6570\u636e"},{"location":"state/","text":"\u7f3a\u7701\u9875\u5bf9\u4e8e\u4e00\u4e2a\u7528\u6237\u4f53\u9a8c\u826f\u597d\u7684\u5e94\u7528\u975e\u5e38\u91cd\u8981 BRV\u91c7\u7528\u96c6\u6210\u4e00\u4e2a\u975e\u5e38\u4f18\u79c0\u7f3a\u7701\u9875\u5e93 StateLayout \u6765\u5b9e\u73b0\u5217\u8868\u7f3a\u7701\u9875 \u4e3b\u8981\u7279\u70b9 \u5168\u5c40\u914d\u7f6e/\u5355\u4f8b\u914d\u7f6e \u751f\u547d\u5468\u671f \u4ee3\u7801/\u5e03\u5c40\u521b\u5efa\u7f3a\u7701\u9875 \u70b9\u51fb\u91cd\u8bd5 \u4f7f\u7528 \u00b6 \u7b2c\u4e00\u6b65, \u521b\u5efa\u7f3a\u7701\u9875 \u5e03\u5c40\u521b\u5efa <com.drake.statelayout.StateLayout android:id= \"@+id/state\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" > <androidx.recyclerview.widget.RecyclerView android:id= \"@+id/rv\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </com.drake.statelayout.StateLayout> \u4ee3\u7801\u521b\u5efa val state = state () // \u5728Activity/Fragment\u76f4\u63a5\u51fd\u6570\u521b\u5efa\u7f3a\u7701\u9875, `rv.state()`\u4e5f\u53ef\u4ee5, \u63a8\u8350\u4f7f\u7528\u7b2c\u4e00\u79cd\u65b9\u5f0f \u7b2c\u4e8c\u6b65, \u521b\u5efa\u5217\u8868 rv . linear (). setup { addType < Model >( R . layout . item_multi_type_simple ) addType < DoubleItemModel >( R . layout . item_multi_type_two ) }. models = getData () \u7b2c\u4e09\u6b65, \u663e\u793a\u7f3a\u7701\u9875 state . showLoading () // \u52a0\u8f7d\u4e2d state . showContent () // \u52a0\u8f7d\u6210\u529f state . showError () // \u52a0\u8f7d\u9519\u8bef state . showEmpty () // \u52a0\u8f7d\u5931\u8d25 StateLayout\u7f3a\u7701\u9875\u5e93\u975e\u5e38\u63a8\u8350\u4f7f\u7528, BRV\u4e5f\u66b4\u9732\u96c6\u6210\u7684\u7f3a\u7701\u9875\u5e93\u7ed9\u5f00\u53d1\u8005\u4f7f\u7528, \u4f7f\u7528\u6587\u6863","title":"\u7f3a\u7701\u9875"},{"location":"state/#_1","text":"\u7b2c\u4e00\u6b65, \u521b\u5efa\u7f3a\u7701\u9875 \u5e03\u5c40\u521b\u5efa <com.drake.statelayout.StateLayout android:id= \"@+id/state\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" > <androidx.recyclerview.widget.RecyclerView android:id= \"@+id/rv\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </com.drake.statelayout.StateLayout> \u4ee3\u7801\u521b\u5efa val state = state () // \u5728Activity/Fragment\u76f4\u63a5\u51fd\u6570\u521b\u5efa\u7f3a\u7701\u9875, `rv.state()`\u4e5f\u53ef\u4ee5, \u63a8\u8350\u4f7f\u7528\u7b2c\u4e00\u79cd\u65b9\u5f0f \u7b2c\u4e8c\u6b65, \u521b\u5efa\u5217\u8868 rv . linear (). setup { addType < Model >( R . layout . item_multi_type_simple ) addType < DoubleItemModel >( R . layout . item_multi_type_two ) }. models = getData () \u7b2c\u4e09\u6b65, \u663e\u793a\u7f3a\u7701\u9875 state . showLoading () // \u52a0\u8f7d\u4e2d state . showContent () // \u52a0\u8f7d\u6210\u529f state . showError () // \u52a0\u8f7d\u9519\u8bef state . showEmpty () // \u52a0\u8f7d\u5931\u8d25 StateLayout\u7f3a\u7701\u9875\u5e93\u975e\u5e38\u63a8\u8350\u4f7f\u7528, BRV\u4e5f\u66b4\u9732\u96c6\u6210\u7684\u7f3a\u7701\u9875\u5e93\u7ed9\u5f00\u53d1\u8005\u4f7f\u7528, \u4f7f\u7528\u6587\u6863","title":"\u4f7f\u7528"},{"location":"swipe/","text":"\u4e3a\u6570\u636e\u6a21\u578b\u5b9e\u73b0\u63a5\u53e3 ItemSwipe \u5373\u53ef\u5f00\u542f\u62d6\u62fd\u529f\u80fd data class SwipeModel ( override var itemOrientationSwipe : Int = ItemOrientation . ALL ) : ItemSwipe \u6ce8\u610f\u5982\u679c\u4f60\u7684\u6570\u636e\u6a21\u578b\u88abGson\u53cd\u5e8f\u5217\u5316\u540e, \u4f1a\u5220\u9664\u6240\u6709\u7684\u5b57\u6bb5\u521d\u59cb\u5316\u503c \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u91cd\u5199\u8bbf\u95ee\u51fd\u6570\u6765\u89e3\u51b3\u95ee\u9898, \u8ba9\u8be5\u503c\u56fa\u5b9a\u8fd4\u56de class SwipeModel () : ItemDrag { override var itemOrientationSwipe : Int = 0 get () = ItemOrientation . ALL // \u53ea\u4f1a\u8fd4\u56de\u8be5\u503c } ItemOrientation \u00b6 \u8be5\u7c7b\u5305\u542b\u62d6\u62fd\u53ef\u914d\u7f6e\u7684\u65b9\u5411 \u5b57\u6bb5 \u63cf\u8ff0 ALL \u5168\u90e8\u65b9\u5411 VERTICAL \u5782\u76f4\u65b9\u5411 HORIZONTAL \u6c34\u5e73\u65b9\u5411 LEFT \u5411\u5de6 RIGHT \u5411\u53f3 UP \u5411\u4e0a DOWN \u5411\u4e0b NONE \u7981\u7528 \u81ea\u5b9a\u4e49 \u00b6 \u5982\u679c\u60f3\u8981\u6269\u5c55ItemTouchHelper\u53ef\u4ee5\u7ed9BindingAdapter\u7684\u53d8\u91cf itemTouchHelper \u8d4b\u503c rv . linear (). setup { addType < Model >( R . layout . item ) itemTouchHelper = ItemTouchHelper ( object : DefaultItemTouchCallback ( this ) { // \u8fd9\u91cc\u53ef\u4ee5\u91cd\u5199\u51fd\u6570 override fun onSwiped ( viewHolder : RecyclerView . ViewHolder , direction : Int ) { super . onSwiped ( viewHolder , direction ) // \u8fd9\u662f\u4fa7\u6ed1\u5220\u9664\u540e\u56de\u8c03, \u8fd9\u91cc\u53ef\u4ee5\u540c\u6b65\u670d\u52a1\u5668 } }) }. models = data \u901a\u8fc7\u7ed9view\u6253\u4e0atag\u6807\u7b7e swipe \u53ef\u4ee5\u81ea\u5b9a\u4e49\u4fa7\u6ed1\u5c06\u4f1a\u79fb\u52a8\u7684\u89c6\u56fe. <RelativeLayout android:layout_width= \"wrap_content\" android:layout_height= \"80dp\" android:orientation= \"horizontal\" android:tag= \"swipe\" />","title":"\u4fa7\u6ed1"},{"location":"swipe/#itemorientation","text":"\u8be5\u7c7b\u5305\u542b\u62d6\u62fd\u53ef\u914d\u7f6e\u7684\u65b9\u5411 \u5b57\u6bb5 \u63cf\u8ff0 ALL \u5168\u90e8\u65b9\u5411 VERTICAL \u5782\u76f4\u65b9\u5411 HORIZONTAL \u6c34\u5e73\u65b9\u5411 LEFT \u5411\u5de6 RIGHT \u5411\u53f3 UP \u5411\u4e0a DOWN \u5411\u4e0b NONE \u7981\u7528","title":"ItemOrientation"},{"location":"swipe/#_1","text":"\u5982\u679c\u60f3\u8981\u6269\u5c55ItemTouchHelper\u53ef\u4ee5\u7ed9BindingAdapter\u7684\u53d8\u91cf itemTouchHelper \u8d4b\u503c rv . linear (). setup { addType < Model >( R . layout . item ) itemTouchHelper = ItemTouchHelper ( object : DefaultItemTouchCallback ( this ) { // \u8fd9\u91cc\u53ef\u4ee5\u91cd\u5199\u51fd\u6570 override fun onSwiped ( viewHolder : RecyclerView . ViewHolder , direction : Int ) { super . onSwiped ( viewHolder , direction ) // \u8fd9\u662f\u4fa7\u6ed1\u5220\u9664\u540e\u56de\u8c03, \u8fd9\u91cc\u53ef\u4ee5\u540c\u6b65\u670d\u52a1\u5668 } }) }. models = data \u901a\u8fc7\u7ed9view\u6253\u4e0atag\u6807\u7b7e swipe \u53ef\u4ee5\u81ea\u5b9a\u4e49\u4fa7\u6ed1\u5c06\u4f1a\u79fb\u52a8\u7684\u89c6\u56fe. <RelativeLayout android:layout_width= \"wrap_content\" android:layout_height= \"80dp\" android:orientation= \"horizontal\" android:tag= \"swipe\" />","title":"\u81ea\u5b9a\u4e49"},{"location":"toggle/","text":"BRV\u63d0\u4f9b\u4e00\u4e2a\u5207\u6362\u4e8b\u4ef6\u7684\u89e6\u53d1\u548c\u76d1\u542c, \u76f8\u5f53\u4e8e\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u904d\u5386\u6240\u6709\u7684\u5217\u8868\u6761\u76ee, \u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u56de\u8c03\u91cc\u9762\u4f9d\u6b21\u66f4\u65b0\u6570\u636e\u6216\u8005\u89c6\u56fe. \u8fd9\u4e2a \u5207\u6362 \u53ef\u4ee5\u7406\u89e3\u4e3a \u904d\u5386 \u5217\u8868\u6761\u76ee \u4e00\u822c\u7528\u4e8e\u5207\u6362\u5217\u8868\u7684\u7f16\u8f91\u6a21\u5f0f \u793a\u4f8b \u00b6 override fun onActivityCreated ( savedInstanceState : Bundle ?) { super . onActivityCreated ( savedInstanceState ) rv_check_mode . linear (). setup { addType < CheckModel >( R . layout . item_check_mode ) // \u76d1\u542c\u5207\u6362\u4e8b\u4ef6 onToggle { position , toggleMode , end -> if ( end ) { // \u663e\u793a\u548c\u9690\u85cf\u7f16\u8f91\u83dc\u5355 ll_menu . visibility = if ( toggleMode ) View . VISIBLE else View . GONE } } }. models = getData () } fun onClick ( v : View ){ rv_check_mode . bindingAdapter . toggle () // \u70b9\u51fb\u4e8b\u4ef6\u89e6\u53d1\u5207\u6362\u4e8b\u4ef6 } \u51fd\u6570 \u00b6 fun toggle () // \u89e6\u53d1\u5207\u6362\u6a21\u5f0f(\u6839\u636e\u5f53\u524d\u72b6\u6001\u53d6\u53cd) fun getToggleMode (): Boolean // \u8303\u56f4\u5f53\u524d\u51fa\u4f55\u79cd\u5207\u6362\u6a21\u5f0f fun setToggleMode ( toggleMode : Boolean ) // \u8bbe\u7f6e\u5207\u6362\u6a21\u5f0f, \u5982\u679c\u8bbe\u7f6e\u7684\u662f\u5f53\u524d\u6b63\u5904\u4e8e\u7684\u6a21\u5f0f\u4e0d\u4f1a\u89e6\u53d1\u56de\u8c03 fun onToggle ( block : ( position : Int , toggleModel : Boolean , end : Boolean ) -> Unit ) // \u76d1\u542c\u5207\u6362\u4e8b\u4ef6, \u5728\u4e8b\u4ef6\u4e2d\u4f60\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u89c6\u56fe\u7684\u6570\u636e\u6216\u8005\u89c6\u56fe\u4fee\u6539 // position: \u904d\u5386\u8fc7\u7a0b\u4e2d\u7684\u5217\u8868\u6761\u76ee\u7d22\u5f15 // toggleModel: \u5207\u6362\u6a21\u5f0f(\u5e03\u5c14\u503c) // end: \u662f\u5426\u5168\u90e8\u904d\u5386\u5b8c\u6210","title":"\u5207\u6362\u6a21\u5f0f"},{"location":"toggle/#_1","text":"override fun onActivityCreated ( savedInstanceState : Bundle ?) { super . onActivityCreated ( savedInstanceState ) rv_check_mode . linear (). setup { addType < CheckModel >( R . layout . item_check_mode ) // \u76d1\u542c\u5207\u6362\u4e8b\u4ef6 onToggle { position , toggleMode , end -> if ( end ) { // \u663e\u793a\u548c\u9690\u85cf\u7f16\u8f91\u83dc\u5355 ll_menu . visibility = if ( toggleMode ) View . VISIBLE else View . GONE } } }. models = getData () } fun onClick ( v : View ){ rv_check_mode . bindingAdapter . toggle () // \u70b9\u51fb\u4e8b\u4ef6\u89e6\u53d1\u5207\u6362\u4e8b\u4ef6 }","title":"\u793a\u4f8b"},{"location":"toggle/#_2","text":"fun toggle () // \u89e6\u53d1\u5207\u6362\u6a21\u5f0f(\u6839\u636e\u5f53\u524d\u72b6\u6001\u53d6\u53cd) fun getToggleMode (): Boolean // \u8303\u56f4\u5f53\u524d\u51fa\u4f55\u79cd\u5207\u6362\u6a21\u5f0f fun setToggleMode ( toggleMode : Boolean ) // \u8bbe\u7f6e\u5207\u6362\u6a21\u5f0f, \u5982\u679c\u8bbe\u7f6e\u7684\u662f\u5f53\u524d\u6b63\u5904\u4e8e\u7684\u6a21\u5f0f\u4e0d\u4f1a\u89e6\u53d1\u56de\u8c03 fun onToggle ( block : ( position : Int , toggleModel : Boolean , end : Boolean ) -> Unit ) // \u76d1\u542c\u5207\u6362\u4e8b\u4ef6, \u5728\u4e8b\u4ef6\u4e2d\u4f60\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u89c6\u56fe\u7684\u6570\u636e\u6216\u8005\u89c6\u56fe\u4fee\u6539 // position: \u904d\u5386\u8fc7\u7a0b\u4e2d\u7684\u5217\u8868\u6761\u76ee\u7d22\u5f15 // toggleModel: \u5207\u6362\u6a21\u5f0f(\u5e03\u5c14\u503c) // end: \u662f\u5426\u5168\u90e8\u904d\u5386\u5b8c\u6210","title":"\u51fd\u6570"},{"location":"upfetch/","text":"\u672c\u7ae0\u8282\u8bf4\u7684\u62c9\u53d6\u66f4\u591a\u4e0d\u662f\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a, \u800c\u662f\u4e0b\u62c9\u52a0\u8f7d\u66f4\u591a. \u5e38\u89c1\u7684\u5e94\u7528\u573a\u666f\u5c31\u662f\u804a\u5929\u754c\u9762\u4e0b\u62c9\u53d6\u52a0\u8f7d\u5386\u53f2\u8bb0\u5f55 \u4f8b\u5982\u804a\u5929\u8bb0\u5f55\u754c\u9762, \u6700\u65b0\u7684\u6d88\u606f\u5728\u5e95\u90e8, \u4e0b\u62c9\u5217\u8868\u4f1a\u89e6\u53d1\u52a0\u8f7d\u4e0b\u4e00\u9875. \u8fd9\u79cd\u9700\u6c42\u5728BRV\u4e2d\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801(\u6269\u5c55\u81ea SmartRefreshLayout ) override fun onActivityCreated ( savedInstanceState : Bundle ?) { super . onActivityCreated ( savedInstanceState ) rv_up_fetch . setup { addType < Model >( R . layout . item_multi_type_simple ) } page . upFetchEnabled = true page . onRefresh { // \u6a21\u62df\u7f51\u7edc\u8bf7\u6c422\u79d2\u540e\u6210\u529f postDelayed ({ val data = getData () addData ( data ) { index <= 2 } }, 1000 ) }. showLoading () // \u52a0\u8f7d\u4e2d(\u7f3a\u7701\u9875) } \u9664\u4e86\u9ad8\u4eae\u7684\u4e00\u4e2a\u5c5e\u6027\u8bbe\u7f6e, \u5176\u4ed6\u4ee3\u7801\u548c\u6b63\u5e38\u4e00\u6837","title":"\u62c9\u53d6\u66f4\u591a"},{"location":"api/brv/","text":"brv Packages \u00b6 Name Summary com.drake.brv com.drake.brv.animation com.drake.brv.annotaion com.drake.brv.binding com.drake.brv.item com.drake.brv.layoutmanager com.drake.brv.listener com.drake.brv.utils Index \u00b6 All Types","title":"1.x\u6587\u6863"},{"location":"api/brv/#packages","text":"Name Summary com.drake.brv com.drake.brv.animation com.drake.brv.annotaion com.drake.brv.binding com.drake.brv.item com.drake.brv.layoutmanager com.drake.brv.listener com.drake.brv.utils","title":"Packages"},{"location":"api/brv/#index","text":"All Types","title":"Index"},{"location":"api/brv/alltypes/","text":"All Types \u00b6 Name Summary com.drake.brv.animation.AlphaItemAnimation \u00b6 | com.drake.brv.annotaion.AnimationType \u00b6 | com.drake.brv.BindingAdapter \u00b6 < Android\u4e0a\u6700\u5f3a\u5927\u7684RecyclerView\u6846\u67b6 > | com.drake.brv.utils.BRV \u00b6 | com.drake.brv.DefaultDecoration \u00b6 \u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 | com.drake.brv.listener.DefaultItemTouchCallback \u00b6 \u9ed8\u8ba4\u5b9e\u73b0\u62d6\u62fd\u66ff\u6362\u548c\u4fa7\u6ed1\u5220\u9664 | (extensions in package com.drake.brv.utils) android.app.Dialog \u00b6 | com.drake.brv.annotaion.DividerOrientation \u00b6 | com.drake.brv.layoutmanager.HoverGridLayoutManager \u00b6 Created by jay on 2017/12/4 \u4e0a\u534810:57 | com.drake.brv.layoutmanager.HoverLinearLayoutManager \u00b6 Created by jay on 2017/12/4 \u4e0a\u534810:57 | com.drake.brv.layoutmanager.HoverStaggeredGridLayoutManager \u00b6 Created by jay on 2017/12/4 \u4e0a\u534810:57 | com.drake.brv.animation.ItemAnimation \u00b6 | com.drake.brv.item.ItemBind \u00b6 \u63a8\u8350\u4f7f\u7528DataBinding\u6765\u8fdb\u884c\u6570\u636e\u7ed1\u5b9a com.drake.brv.BindingAdapter.modelId , \u6216\u8005\u51fd\u6570 com.drake.brv.BindingAdapter.onBind \u8be5\u63a5\u53e3\u8fdb\u884cUI\u64cd\u4f5c\u4e0d\u7b26\u5408MVVM\u67b6\u6784, \u56e0\u4e3aModel\u4e2d\u4e0d\u5141\u8bb8\u51fa\u73b0View\u5f15\u7528 | com.drake.brv.item.ItemDrag \u00b6 \u53ef\u62d6\u62fd | com.drake.brv.item.ItemExpand \u00b6 \u53ef\u5c55\u5f00/\u6298\u53e0\u7684\u6761\u76ee | com.drake.brv.item.ItemHover \u00b6 \u53ef\u7c98\u6027\u5934\u90e8\u7684\u6761\u76ee | com.drake.brv.annotaion.ItemOrientation \u00b6 | com.drake.brv.item.ItemPosition \u00b6 | com.drake.brv.item.ItemSwipe \u00b6 \u53ef\u4fa7\u6ed1\u7684\u6761\u76ee | com.drake.brv.binding.ObservableIml \u00b6 A convenience class that implements android.databinding.Observable interface and provides .notifyPropertyChanged and .notifyChange methods. | com.drake.brv.listener.OnBindViewHolderListener \u00b6 | com.drake.brv.listener.OnHoverAttachListener \u00b6 \u7531RecyclerView.Adapter\u5b9e\u73b0\u8be5\u63a5\u53e3 | com.drake.brv.listener.OnMultiStateListener \u00b6 | com.drake.brv.PageRefreshLayout \u00b6 \u6269\u5c55SmartRefreshLayout\u7684\u529f\u80fd | (extensions in package com.drake.brv.utils) androidx.recyclerview.widget.RecyclerView \u00b6 | com.drake.brv.animation.ScaleItemAnimation \u00b6 | com.drake.brv.animation.SlideBottomItemAnimation \u00b6 | com.drake.brv.animation.SlideLeftItemAnimation \u00b6 | com.drake.brv.animation.SlideRightItemAnimation \u00b6 | com.drake.brv.listener.SnapLinearSmoothScroller \u00b6 | (extensions in package com.drake.brv.listener) android.view.View \u00b6 | (extensions in package com.drake.brv.utils) android.view.View \u00b6","title":"Index"},{"location":"api/brv/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"api/brv/alltypes/#comdrakebrvanimationalphaitemanimation","text":"|","title":"com.drake.brv.animation.AlphaItemAnimation"},{"location":"api/brv/alltypes/#comdrakebrvannotaionanimationtype","text":"|","title":"com.drake.brv.annotaion.AnimationType"},{"location":"api/brv/alltypes/#comdrakebrvbindingadapter","text":"< Android\u4e0a\u6700\u5f3a\u5927\u7684RecyclerView\u6846\u67b6 > |","title":"com.drake.brv.BindingAdapter"},{"location":"api/brv/alltypes/#comdrakebrvutilsbrv","text":"|","title":"com.drake.brv.utils.BRV"},{"location":"api/brv/alltypes/#comdrakebrvdefaultdecoration","text":"\u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 |","title":"com.drake.brv.DefaultDecoration"},{"location":"api/brv/alltypes/#comdrakebrvlistenerdefaultitemtouchcallback","text":"\u9ed8\u8ba4\u5b9e\u73b0\u62d6\u62fd\u66ff\u6362\u548c\u4fa7\u6ed1\u5220\u9664 | (extensions in package com.drake.brv.utils)","title":"com.drake.brv.listener.DefaultItemTouchCallback"},{"location":"api/brv/alltypes/#androidappdialog","text":"|","title":"android.app.Dialog"},{"location":"api/brv/alltypes/#comdrakebrvannotaiondividerorientation","text":"|","title":"com.drake.brv.annotaion.DividerOrientation"},{"location":"api/brv/alltypes/#comdrakebrvlayoutmanagerhovergridlayoutmanager","text":"Created by jay on 2017/12/4 \u4e0a\u534810:57 |","title":"com.drake.brv.layoutmanager.HoverGridLayoutManager"},{"location":"api/brv/alltypes/#comdrakebrvlayoutmanagerhoverlinearlayoutmanager","text":"Created by jay on 2017/12/4 \u4e0a\u534810:57 |","title":"com.drake.brv.layoutmanager.HoverLinearLayoutManager"},{"location":"api/brv/alltypes/#comdrakebrvlayoutmanagerhoverstaggeredgridlayoutmanager","text":"Created by jay on 2017/12/4 \u4e0a\u534810:57 |","title":"com.drake.brv.layoutmanager.HoverStaggeredGridLayoutManager"},{"location":"api/brv/alltypes/#comdrakebrvanimationitemanimation","text":"|","title":"com.drake.brv.animation.ItemAnimation"},{"location":"api/brv/alltypes/#comdrakebrvitemitembind","text":"\u63a8\u8350\u4f7f\u7528DataBinding\u6765\u8fdb\u884c\u6570\u636e\u7ed1\u5b9a com.drake.brv.BindingAdapter.modelId , \u6216\u8005\u51fd\u6570 com.drake.brv.BindingAdapter.onBind \u8be5\u63a5\u53e3\u8fdb\u884cUI\u64cd\u4f5c\u4e0d\u7b26\u5408MVVM\u67b6\u6784, \u56e0\u4e3aModel\u4e2d\u4e0d\u5141\u8bb8\u51fa\u73b0View\u5f15\u7528 |","title":"com.drake.brv.item.ItemBind"},{"location":"api/brv/alltypes/#comdrakebrvitemitemdrag","text":"\u53ef\u62d6\u62fd |","title":"com.drake.brv.item.ItemDrag"},{"location":"api/brv/alltypes/#comdrakebrvitemitemexpand","text":"\u53ef\u5c55\u5f00/\u6298\u53e0\u7684\u6761\u76ee |","title":"com.drake.brv.item.ItemExpand"},{"location":"api/brv/alltypes/#comdrakebrvitemitemhover","text":"\u53ef\u7c98\u6027\u5934\u90e8\u7684\u6761\u76ee |","title":"com.drake.brv.item.ItemHover"},{"location":"api/brv/alltypes/#comdrakebrvannotaionitemorientation","text":"|","title":"com.drake.brv.annotaion.ItemOrientation"},{"location":"api/brv/alltypes/#comdrakebrvitemitemposition","text":"|","title":"com.drake.brv.item.ItemPosition"},{"location":"api/brv/alltypes/#comdrakebrvitemitemswipe","text":"\u53ef\u4fa7\u6ed1\u7684\u6761\u76ee |","title":"com.drake.brv.item.ItemSwipe"},{"location":"api/brv/alltypes/#comdrakebrvbindingobservableiml","text":"A convenience class that implements android.databinding.Observable interface and provides .notifyPropertyChanged and .notifyChange methods. |","title":"com.drake.brv.binding.ObservableIml"},{"location":"api/brv/alltypes/#comdrakebrvlisteneronbindviewholderlistener","text":"|","title":"com.drake.brv.listener.OnBindViewHolderListener"},{"location":"api/brv/alltypes/#comdrakebrvlisteneronhoverattachlistener","text":"\u7531RecyclerView.Adapter\u5b9e\u73b0\u8be5\u63a5\u53e3 |","title":"com.drake.brv.listener.OnHoverAttachListener"},{"location":"api/brv/alltypes/#comdrakebrvlisteneronmultistatelistener","text":"|","title":"com.drake.brv.listener.OnMultiStateListener"},{"location":"api/brv/alltypes/#comdrakebrvpagerefreshlayout","text":"\u6269\u5c55SmartRefreshLayout\u7684\u529f\u80fd | (extensions in package com.drake.brv.utils)","title":"com.drake.brv.PageRefreshLayout"},{"location":"api/brv/alltypes/#androidxrecyclerviewwidgetrecyclerview","text":"|","title":"androidx.recyclerview.widget.RecyclerView"},{"location":"api/brv/alltypes/#comdrakebrvanimationscaleitemanimation","text":"|","title":"com.drake.brv.animation.ScaleItemAnimation"},{"location":"api/brv/alltypes/#comdrakebrvanimationslidebottomitemanimation","text":"|","title":"com.drake.brv.animation.SlideBottomItemAnimation"},{"location":"api/brv/alltypes/#comdrakebrvanimationslideleftitemanimation","text":"|","title":"com.drake.brv.animation.SlideLeftItemAnimation"},{"location":"api/brv/alltypes/#comdrakebrvanimationsliderightitemanimation","text":"|","title":"com.drake.brv.animation.SlideRightItemAnimation"},{"location":"api/brv/alltypes/#comdrakebrvlistenersnaplinearsmoothscroller","text":"| (extensions in package com.drake.brv.listener)","title":"com.drake.brv.listener.SnapLinearSmoothScroller"},{"location":"api/brv/alltypes/#androidviewview","text":"| (extensions in package com.drake.brv.utils)","title":"android.view.View"},{"location":"api/brv/alltypes/#androidviewview_1","text":"","title":"android.view.View"},{"location":"api/brv/com.drake.brv/","text":"brv / com.drake.brv Package com.drake.brv \u00b6 Types \u00b6 Name Summary BindingAdapter < Android\u4e0a\u6700\u5f3a\u5927\u7684RecyclerView\u6846\u67b6 > class BindingAdapter : Adapter<BindingViewHolder> DefaultDecoration \u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 class DefaultDecoration : ItemDecoration PageRefreshLayout \u6269\u5c55SmartRefreshLayout\u7684\u529f\u80fd open class PageRefreshLayout : SmartRefreshLayout, OnRefreshLoadMoreListener","title":"Index"},{"location":"api/brv/com.drake.brv/#package-comdrakebrv","text":"","title":"Package com.drake.brv"},{"location":"api/brv/com.drake.brv/#types","text":"Name Summary BindingAdapter < Android\u4e0a\u6700\u5f3a\u5927\u7684RecyclerView\u6846\u67b6 > class BindingAdapter : Adapter<BindingViewHolder> DefaultDecoration \u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 class DefaultDecoration : ItemDecoration PageRefreshLayout \u6269\u5c55SmartRefreshLayout\u7684\u529f\u80fd open class PageRefreshLayout : SmartRefreshLayout, OnRefreshLoadMoreListener","title":"Types"},{"location":"api/brv/com.drake.brv/-binding-adapter/","text":"brv / com.drake.brv / BindingAdapter BindingAdapter \u00b6 class BindingAdapter : Adapter<BindingViewHolder> < Android\u4e0a\u6700\u5f3a\u5927\u7684RecyclerView\u6846\u67b6 > \u4e00\u884c\u4ee3\u7801\u6dfb\u52a0\u591a\u7c7b\u578b addType \u6570\u636e\u6a21\u578b\u53ef\u4ee5\u4e3a\u4efb\u4f55\u5bf9\u8c61 models \u901a\u8fc7\u63a5\u53e3\u5b9e\u73b0\u6765\u6269\u5c55\u529f\u80fd com.drake.brv.item \u5feb\u901f\u6dfb\u52a0\u89e6\u6478\u4e8b\u4ef6(\u9632\u6296\u70b9\u51fb/\u5feb\u901f\u70b9\u51fb/\u957f\u6309/\u9009\u62e9/\u4fa7\u6ed1/\u62d6\u62fd) \u5f3a\u5927\u7684\u5206\u7ec4/\u5c55\u5f00/\u6298\u53e0/\u7c98\u6027\u5934\u90e8/\u9012\u5f52\u6df1\u5ea6/\u52a8\u753b/\u7ec4position expandOrCollapse \u81ea\u5b9a\u4e49\u5217\u8868\u52a8\u753b setAnimation \u9ed8\u8ba4\u52a8\u753b com.drake.brv.animation \u5934\u5e03\u5c40/\u811a\u5e03\u5c40 addHeader \u5feb\u901f\u8bbe\u7f6e\u5206\u9694\u7269 \u7f3a\u7701\u9875 PageRefreshLayout \u4e0b\u62c9\u5237\u65b0/\u4e0a\u62c9\u52a0\u8f7d/\u81ea\u52a8\u5206\u9875\u52a0\u8f7d PageRefreshLayout \u5f3a\u5927\u7684\u9009\u62e9\u72b6\u6001 setChecked (\u5207\u6362\u6a21\u5f0f/\u591a\u9009/\u5355\u9009/\u5168\u9009/\u53d6\u6d88\u5168\u9009/\u53cd\u9009/\u9009\u4e2d\u6570\u636e\u96c6/\u9009\u4e2d\u6570\u91cf/\u5355\u9009\u548c\u591a\u9009\u6a21\u5f0f\u5207\u6362) \u9075\u5b88\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u539f\u5219, \u652f\u6301\u529f\u80fd\u914d\u5408\u4f7f\u7528, \u4ee3\u7801\u7b80\u6d01\u51fd\u6570\u5206\u7ec4 Types \u00b6 Name Summary BindingViewHolder inner class BindingViewHolder : ViewHolder Constructors \u00b6 Name Summary <init> < Android\u4e0a\u6700\u5f3a\u5927\u7684RecyclerView\u6846\u67b6 > BindingAdapter() Properties \u00b6 Name Summary animationEnabled var animationEnabled: Boolean checkedCount val checkedCount: Int checkedPosition val checkedPosition: MutableList < Int > clickPeriod var clickPeriod: Long expandAnimationEnabled var expandAnimationEnabled: Boolean footerCount val footerCount: Int footers var footers: List < Any ?> headerCount val headerCount: Int headers var headers: List < Any ?> hoverEnabled var hoverEnabled: Boolean itemTouchHelper \u7b49\u6548\u4e8e RecyclerView.addItemDecoration \u8bbe\u7f6e var itemTouchHelper: ItemTouchHelper? listBind var listBind: MutableSet < OnBindViewHolderListener > modelCount val modelCount: Int models var models: List < Any ?>? onHoverAttachListener var onHoverAttachListener: OnHoverAttachListener ? rv var rv: RecyclerView? singleExpandMode var singleExpandMode: Boolean singleMode var singleMode: Boolean toggleMode var toggleMode: Boolean typePool val typePool: MutableMap < Class <*>, Any .( Int ) -> Int > Functions \u00b6 Name Summary addClickable \u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6 \u9ed8\u8ba4500ms\u9632\u6296, \u4fee\u6539 clickPeriod \u5c5e\u6027\u53ef\u4ee5\u5168\u5c40\u8bbe\u7f6e\u95f4\u9694\u65f6\u95f4, \u5355\u4f4d\u6beb\u79d2 fun addClickable(vararg id: Int ): Unit addFastClickable \u6307\u5b9aId\u7684\u89c6\u56fe\u5c06\u88ab\u76d1\u542c\u70b9\u51fb\u4e8b\u4ef6(\u672a\u4f7f\u7528\u9632\u6296) fun addFastClickable(vararg id: Int ): Unit addFooter fun addFooter(model: Any ?, index: Int = -1, animation: Boolean = false): Unit addHeader fun addHeader(model: Any ?, index: Int = -1, animation: Boolean = false): Unit addLongClickable \u6307\u5b9aId\u7684\u89c6\u56fe\u5c06\u88ab\u76d1\u542c\u957f\u6309\u4e8b\u4ef6 fun addLongClickable(vararg id: Int ): Unit addModels \u6dfb\u52a0\u65b0\u7684\u6570\u636e fun addModels(models: List < Any ?>?, animation: Boolean = true): Unit addType \u6dfb\u52a0\u591a\u7c7b\u578b fun <M> addType(layout: Int ): Unit \u901a\u8fc7\u56de\u8c03\u51fd\u6570\u6dfb\u52a0\u591a\u7c7b\u578b, \u4e00\u5bf9\u591a\u591a\u7c7b\u578b fun <M> addType(block: M.( Int ) -> Int ): Unit checkedAll \u5355\u9009\u6a21\u5f0f\u4e0b\u4e0d\u652f\u6301\u5168\u9009, \u4f46\u652f\u6301\u53d6\u6d88\u5168\u90e8\u9009\u62e9 fun checkedAll(checked: Boolean = true): Unit checkedReverse \u53cd\u9009 fun checkedReverse(): Unit checkedSwitch \u5207\u6362\u9009\u4e2d fun checkedSwitch(position: Int ): Unit clearFooter fun clearFooter(animation: Boolean = false): Unit clearHeader fun clearHeader(animation: Boolean = false): Unit collapse \u6298\u53e0 fun collapse(position: Int , depth: Int = 0): Int expand \u5c55\u5f00 fun expand(position: Int , scrollTop: Boolean = false, depth: Int = 0): Int expandOrCollapse \u5c55\u5f00\u6216\u6298\u53e0 fun expandOrCollapse(position: Int , scrollTop: Boolean = false, depth: Int = 0): Int getCheckedModels \u8fd4\u56de\u88ab\u9009\u4e2d\u7684\u6761\u76ee\u5bf9\u5e94\u7684\u6570\u636e\u6a21\u578b\u96c6\u5408 fun <M> getCheckedModels(): List <M> getItemCount fun getItemCount(): Int getItemViewType fun getItemViewType(position: Int ): Int getModel \u6839\u636e\u7d22\u5f15\u8fd4\u56de\u6570\u636e\u6a21\u578b, \u4e0d\u5b58\u5728\u8be5\u6a21\u578b\u5219\u629b\u51fa\u5f02\u5e38 fun <M> getModel(position: Int ): M getModelOrNull \u6839\u636e\u7d22\u5f15\u8fd4\u56de\u6570\u636e\u6a21\u578b, \u5982\u679c\u4e0d\u5b58\u5728\u8be5\u6a21\u578b\u5219\u8fd4\u56deNull fun <M> getModelOrNull(position: Int ): M? getView fun ViewGroup .getView(layout: Int ): View isCheckedAll \u662f\u5426\u5168\u9009 fun isCheckedAll(): Boolean isFooter fun isFooter(position: Int ): Boolean isHeader fun isHeader(position: Int ): Boolean isHover fun isHover(position: Int ): Boolean isModel fun isModel(position: Int ): Boolean onAttachedToRecyclerView fun onAttachedToRecyclerView(recyclerView: RecyclerView): Unit onBind onBindViewHolder \u6267\u884c\u65f6\u56de\u8c03 fun onBind(block: BindingViewHolder.() -> Unit ): Unit onBindViewHolder fun onBindViewHolder(holder: BindingViewHolder, position: Int ): Unit fun onBindViewHolder(holder: BindingViewHolder, position: Int , payloads: MutableList < Any >): Unit onChecked \u6761\u76ee\u9009\u4e2d\u4e8b\u4ef6\u56de\u8c03 fun onChecked(block: (position: Int , checked: Boolean , allChecked: Boolean ) -> Unit ): Unit onClick \u70b9\u51fb\u4e8b\u4ef6\u56de\u8c03 fun onClick(vararg id: Int , block: BindingViewHolder.(id: Int ) -> Unit ): Unit onCreate onCreateViewHolder \u6267\u884c\u65f6\u56de\u8c03 fun onCreate(block: BindingViewHolder.() -> Unit ): Unit onCreateViewHolder fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): BindingViewHolder onExpand fun onExpand(block: BindingViewHolder.( Boolean ) -> Unit ): Unit onLongClick \u957f\u6309\u70b9\u51fb\u4e8b\u4ef6\u56de\u8c03 fun onLongClick(vararg id: Int , block: BindingViewHolder.(id: Int ) -> Unit ): Unit onPayload \u589e\u91cf\u66f4\u65b0\u56de\u8c03 fun onPayload(block: BindingViewHolder.(model: Any ) -> Unit ): Unit onToggle \u5207\u6362\u6a21\u5f0f\u4e8b\u4ef6\u56de\u8c03 fun onToggle(block: (position: Int , toggleModel: Boolean , end: Boolean ) -> Unit ): Unit onViewAttachedToWindow fun onViewAttachedToWindow(holder: BindingViewHolder): Unit removeFooter fun removeFooter(model: Any ?, animation: Boolean = false): Unit removeFooterAt fun removeFooterAt(index: Int = -1, animation: Boolean = false): Unit removeHeader fun removeHeader(model: Any ?, animation: Boolean = false): Unit removeHeaderAt fun removeHeaderAt(index: Int = 0, animation: Boolean = false): Unit setAnimation \u81ea\u5b9a\u4e49\u6761\u76ee\u7684\u52a8\u753b\u6837\u5f0f fun setAnimation(itemAnimation: ItemAnimation ): Unit \u8bbe\u7f6e\u5f53\u524d\u5e93\u81ea\u5e26\u7684\u6761\u76ee\u7684\u52a8\u753b\u6837\u5f0f fun setAnimation(animationType: AnimationType ): Unit setCheckableType \u8bbe\u7f6e\u53ef\u4ee5\u88ab\u9009\u62e9\u7684item\u7c7b\u578b fun setCheckableType(vararg checkableItemType: Int ): Unit setChecked \u8bbe\u7f6e\u9009\u4e2d fun setChecked(position: Int , checked: Boolean ): Unit toggle \u5207\u6362\u6a21\u5f0f, \u5207\u6362\u6a21\u5f0f\u4e3a\u904d\u5386\u6bcf\u4e2aitem fun toggle(): Unit \u8bbe\u7f6e\u5207\u6362\u6a21\u5f0f, \u5207\u6362\u6a21\u5f0f\u4e3a\u904d\u5386\u6bcf\u4e2aitem fun toggle(toggleMode: Boolean ): Unit toModelPosition adapter position convert to model position fun Int .toModelPosition(): Int Companion Object Properties \u00b6 Name Summary modelId var modelId: Int","title":"Index"},{"location":"api/brv/com.drake.brv/-binding-adapter/#bindingadapter","text":"class BindingAdapter : Adapter<BindingViewHolder> < Android\u4e0a\u6700\u5f3a\u5927\u7684RecyclerView\u6846\u67b6 > \u4e00\u884c\u4ee3\u7801\u6dfb\u52a0\u591a\u7c7b\u578b addType \u6570\u636e\u6a21\u578b\u53ef\u4ee5\u4e3a\u4efb\u4f55\u5bf9\u8c61 models \u901a\u8fc7\u63a5\u53e3\u5b9e\u73b0\u6765\u6269\u5c55\u529f\u80fd com.drake.brv.item \u5feb\u901f\u6dfb\u52a0\u89e6\u6478\u4e8b\u4ef6(\u9632\u6296\u70b9\u51fb/\u5feb\u901f\u70b9\u51fb/\u957f\u6309/\u9009\u62e9/\u4fa7\u6ed1/\u62d6\u62fd) \u5f3a\u5927\u7684\u5206\u7ec4/\u5c55\u5f00/\u6298\u53e0/\u7c98\u6027\u5934\u90e8/\u9012\u5f52\u6df1\u5ea6/\u52a8\u753b/\u7ec4position expandOrCollapse \u81ea\u5b9a\u4e49\u5217\u8868\u52a8\u753b setAnimation \u9ed8\u8ba4\u52a8\u753b com.drake.brv.animation \u5934\u5e03\u5c40/\u811a\u5e03\u5c40 addHeader \u5feb\u901f\u8bbe\u7f6e\u5206\u9694\u7269 \u7f3a\u7701\u9875 PageRefreshLayout \u4e0b\u62c9\u5237\u65b0/\u4e0a\u62c9\u52a0\u8f7d/\u81ea\u52a8\u5206\u9875\u52a0\u8f7d PageRefreshLayout \u5f3a\u5927\u7684\u9009\u62e9\u72b6\u6001 setChecked (\u5207\u6362\u6a21\u5f0f/\u591a\u9009/\u5355\u9009/\u5168\u9009/\u53d6\u6d88\u5168\u9009/\u53cd\u9009/\u9009\u4e2d\u6570\u636e\u96c6/\u9009\u4e2d\u6570\u91cf/\u5355\u9009\u548c\u591a\u9009\u6a21\u5f0f\u5207\u6362) \u9075\u5b88\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u539f\u5219, \u652f\u6301\u529f\u80fd\u914d\u5408\u4f7f\u7528, \u4ee3\u7801\u7b80\u6d01\u51fd\u6570\u5206\u7ec4","title":"BindingAdapter"},{"location":"api/brv/com.drake.brv/-binding-adapter/#types","text":"Name Summary BindingViewHolder inner class BindingViewHolder : ViewHolder","title":"Types"},{"location":"api/brv/com.drake.brv/-binding-adapter/#constructors","text":"Name Summary <init> < Android\u4e0a\u6700\u5f3a\u5927\u7684RecyclerView\u6846\u67b6 > BindingAdapter()","title":"Constructors"},{"location":"api/brv/com.drake.brv/-binding-adapter/#properties","text":"Name Summary animationEnabled var animationEnabled: Boolean checkedCount val checkedCount: Int checkedPosition val checkedPosition: MutableList < Int > clickPeriod var clickPeriod: Long expandAnimationEnabled var expandAnimationEnabled: Boolean footerCount val footerCount: Int footers var footers: List < Any ?> headerCount val headerCount: Int headers var headers: List < Any ?> hoverEnabled var hoverEnabled: Boolean itemTouchHelper \u7b49\u6548\u4e8e RecyclerView.addItemDecoration \u8bbe\u7f6e var itemTouchHelper: ItemTouchHelper? listBind var listBind: MutableSet < OnBindViewHolderListener > modelCount val modelCount: Int models var models: List < Any ?>? onHoverAttachListener var onHoverAttachListener: OnHoverAttachListener ? rv var rv: RecyclerView? singleExpandMode var singleExpandMode: Boolean singleMode var singleMode: Boolean toggleMode var toggleMode: Boolean typePool val typePool: MutableMap < Class <*>, Any .( Int ) -> Int >","title":"Properties"},{"location":"api/brv/com.drake.brv/-binding-adapter/#functions","text":"Name Summary addClickable \u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6 \u9ed8\u8ba4500ms\u9632\u6296, \u4fee\u6539 clickPeriod \u5c5e\u6027\u53ef\u4ee5\u5168\u5c40\u8bbe\u7f6e\u95f4\u9694\u65f6\u95f4, \u5355\u4f4d\u6beb\u79d2 fun addClickable(vararg id: Int ): Unit addFastClickable \u6307\u5b9aId\u7684\u89c6\u56fe\u5c06\u88ab\u76d1\u542c\u70b9\u51fb\u4e8b\u4ef6(\u672a\u4f7f\u7528\u9632\u6296) fun addFastClickable(vararg id: Int ): Unit addFooter fun addFooter(model: Any ?, index: Int = -1, animation: Boolean = false): Unit addHeader fun addHeader(model: Any ?, index: Int = -1, animation: Boolean = false): Unit addLongClickable \u6307\u5b9aId\u7684\u89c6\u56fe\u5c06\u88ab\u76d1\u542c\u957f\u6309\u4e8b\u4ef6 fun addLongClickable(vararg id: Int ): Unit addModels \u6dfb\u52a0\u65b0\u7684\u6570\u636e fun addModels(models: List < Any ?>?, animation: Boolean = true): Unit addType \u6dfb\u52a0\u591a\u7c7b\u578b fun <M> addType(layout: Int ): Unit \u901a\u8fc7\u56de\u8c03\u51fd\u6570\u6dfb\u52a0\u591a\u7c7b\u578b, \u4e00\u5bf9\u591a\u591a\u7c7b\u578b fun <M> addType(block: M.( Int ) -> Int ): Unit checkedAll \u5355\u9009\u6a21\u5f0f\u4e0b\u4e0d\u652f\u6301\u5168\u9009, \u4f46\u652f\u6301\u53d6\u6d88\u5168\u90e8\u9009\u62e9 fun checkedAll(checked: Boolean = true): Unit checkedReverse \u53cd\u9009 fun checkedReverse(): Unit checkedSwitch \u5207\u6362\u9009\u4e2d fun checkedSwitch(position: Int ): Unit clearFooter fun clearFooter(animation: Boolean = false): Unit clearHeader fun clearHeader(animation: Boolean = false): Unit collapse \u6298\u53e0 fun collapse(position: Int , depth: Int = 0): Int expand \u5c55\u5f00 fun expand(position: Int , scrollTop: Boolean = false, depth: Int = 0): Int expandOrCollapse \u5c55\u5f00\u6216\u6298\u53e0 fun expandOrCollapse(position: Int , scrollTop: Boolean = false, depth: Int = 0): Int getCheckedModels \u8fd4\u56de\u88ab\u9009\u4e2d\u7684\u6761\u76ee\u5bf9\u5e94\u7684\u6570\u636e\u6a21\u578b\u96c6\u5408 fun <M> getCheckedModels(): List <M> getItemCount fun getItemCount(): Int getItemViewType fun getItemViewType(position: Int ): Int getModel \u6839\u636e\u7d22\u5f15\u8fd4\u56de\u6570\u636e\u6a21\u578b, \u4e0d\u5b58\u5728\u8be5\u6a21\u578b\u5219\u629b\u51fa\u5f02\u5e38 fun <M> getModel(position: Int ): M getModelOrNull \u6839\u636e\u7d22\u5f15\u8fd4\u56de\u6570\u636e\u6a21\u578b, \u5982\u679c\u4e0d\u5b58\u5728\u8be5\u6a21\u578b\u5219\u8fd4\u56deNull fun <M> getModelOrNull(position: Int ): M? getView fun ViewGroup .getView(layout: Int ): View isCheckedAll \u662f\u5426\u5168\u9009 fun isCheckedAll(): Boolean isFooter fun isFooter(position: Int ): Boolean isHeader fun isHeader(position: Int ): Boolean isHover fun isHover(position: Int ): Boolean isModel fun isModel(position: Int ): Boolean onAttachedToRecyclerView fun onAttachedToRecyclerView(recyclerView: RecyclerView): Unit onBind onBindViewHolder \u6267\u884c\u65f6\u56de\u8c03 fun onBind(block: BindingViewHolder.() -> Unit ): Unit onBindViewHolder fun onBindViewHolder(holder: BindingViewHolder, position: Int ): Unit fun onBindViewHolder(holder: BindingViewHolder, position: Int , payloads: MutableList < Any >): Unit onChecked \u6761\u76ee\u9009\u4e2d\u4e8b\u4ef6\u56de\u8c03 fun onChecked(block: (position: Int , checked: Boolean , allChecked: Boolean ) -> Unit ): Unit onClick \u70b9\u51fb\u4e8b\u4ef6\u56de\u8c03 fun onClick(vararg id: Int , block: BindingViewHolder.(id: Int ) -> Unit ): Unit onCreate onCreateViewHolder \u6267\u884c\u65f6\u56de\u8c03 fun onCreate(block: BindingViewHolder.() -> Unit ): Unit onCreateViewHolder fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): BindingViewHolder onExpand fun onExpand(block: BindingViewHolder.( Boolean ) -> Unit ): Unit onLongClick \u957f\u6309\u70b9\u51fb\u4e8b\u4ef6\u56de\u8c03 fun onLongClick(vararg id: Int , block: BindingViewHolder.(id: Int ) -> Unit ): Unit onPayload \u589e\u91cf\u66f4\u65b0\u56de\u8c03 fun onPayload(block: BindingViewHolder.(model: Any ) -> Unit ): Unit onToggle \u5207\u6362\u6a21\u5f0f\u4e8b\u4ef6\u56de\u8c03 fun onToggle(block: (position: Int , toggleModel: Boolean , end: Boolean ) -> Unit ): Unit onViewAttachedToWindow fun onViewAttachedToWindow(holder: BindingViewHolder): Unit removeFooter fun removeFooter(model: Any ?, animation: Boolean = false): Unit removeFooterAt fun removeFooterAt(index: Int = -1, animation: Boolean = false): Unit removeHeader fun removeHeader(model: Any ?, animation: Boolean = false): Unit removeHeaderAt fun removeHeaderAt(index: Int = 0, animation: Boolean = false): Unit setAnimation \u81ea\u5b9a\u4e49\u6761\u76ee\u7684\u52a8\u753b\u6837\u5f0f fun setAnimation(itemAnimation: ItemAnimation ): Unit \u8bbe\u7f6e\u5f53\u524d\u5e93\u81ea\u5e26\u7684\u6761\u76ee\u7684\u52a8\u753b\u6837\u5f0f fun setAnimation(animationType: AnimationType ): Unit setCheckableType \u8bbe\u7f6e\u53ef\u4ee5\u88ab\u9009\u62e9\u7684item\u7c7b\u578b fun setCheckableType(vararg checkableItemType: Int ): Unit setChecked \u8bbe\u7f6e\u9009\u4e2d fun setChecked(position: Int , checked: Boolean ): Unit toggle \u5207\u6362\u6a21\u5f0f, \u5207\u6362\u6a21\u5f0f\u4e3a\u904d\u5386\u6bcf\u4e2aitem fun toggle(): Unit \u8bbe\u7f6e\u5207\u6362\u6a21\u5f0f, \u5207\u6362\u6a21\u5f0f\u4e3a\u904d\u5386\u6bcf\u4e2aitem fun toggle(toggleMode: Boolean ): Unit toModelPosition adapter position convert to model position fun Int .toModelPosition(): Int","title":"Functions"},{"location":"api/brv/com.drake.brv/-binding-adapter/#companion-object-properties","text":"Name Summary modelId var modelId: Int","title":"Companion Object Properties"},{"location":"api/brv/com.drake.brv/-binding-adapter/-init-/","text":"brv / com.drake.brv / BindingAdapter / <init> <init> \u00b6 BindingAdapter() < Android\u4e0a\u6700\u5f3a\u5927\u7684RecyclerView\u6846\u67b6 > \u4e00\u884c\u4ee3\u7801\u6dfb\u52a0\u591a\u7c7b\u578b addType \u6570\u636e\u6a21\u578b\u53ef\u4ee5\u4e3a\u4efb\u4f55\u5bf9\u8c61 models \u901a\u8fc7\u63a5\u53e3\u5b9e\u73b0\u6765\u6269\u5c55\u529f\u80fd com.drake.brv.item \u5feb\u901f\u6dfb\u52a0\u89e6\u6478\u4e8b\u4ef6(\u9632\u6296\u70b9\u51fb/\u5feb\u901f\u70b9\u51fb/\u957f\u6309/\u9009\u62e9/\u4fa7\u6ed1/\u62d6\u62fd) \u5f3a\u5927\u7684\u5206\u7ec4/\u5c55\u5f00/\u6298\u53e0/\u7c98\u6027\u5934\u90e8/\u9012\u5f52\u6df1\u5ea6/\u52a8\u753b/\u7ec4position expandOrCollapse \u81ea\u5b9a\u4e49\u5217\u8868\u52a8\u753b setAnimation \u9ed8\u8ba4\u52a8\u753b com.drake.brv.animation \u5934\u5e03\u5c40/\u811a\u5e03\u5c40 addHeader \u5feb\u901f\u8bbe\u7f6e\u5206\u9694\u7269 \u7f3a\u7701\u9875 PageRefreshLayout \u4e0b\u62c9\u5237\u65b0/\u4e0a\u62c9\u52a0\u8f7d/\u81ea\u52a8\u5206\u9875\u52a0\u8f7d PageRefreshLayout \u5f3a\u5927\u7684\u9009\u62e9\u72b6\u6001 setChecked (\u5207\u6362\u6a21\u5f0f/\u591a\u9009/\u5355\u9009/\u5168\u9009/\u53d6\u6d88\u5168\u9009/\u53cd\u9009/\u9009\u4e2d\u6570\u636e\u96c6/\u9009\u4e2d\u6570\u91cf/\u5355\u9009\u548c\u591a\u9009\u6a21\u5f0f\u5207\u6362) \u9075\u5b88\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u539f\u5219, \u652f\u6301\u529f\u80fd\u914d\u5408\u4f7f\u7528, \u4ee3\u7801\u7b80\u6d01\u51fd\u6570\u5206\u7ec4","title":" init "},{"location":"api/brv/com.drake.brv/-binding-adapter/-init-/#init","text":"BindingAdapter() < Android\u4e0a\u6700\u5f3a\u5927\u7684RecyclerView\u6846\u67b6 > \u4e00\u884c\u4ee3\u7801\u6dfb\u52a0\u591a\u7c7b\u578b addType \u6570\u636e\u6a21\u578b\u53ef\u4ee5\u4e3a\u4efb\u4f55\u5bf9\u8c61 models \u901a\u8fc7\u63a5\u53e3\u5b9e\u73b0\u6765\u6269\u5c55\u529f\u80fd com.drake.brv.item \u5feb\u901f\u6dfb\u52a0\u89e6\u6478\u4e8b\u4ef6(\u9632\u6296\u70b9\u51fb/\u5feb\u901f\u70b9\u51fb/\u957f\u6309/\u9009\u62e9/\u4fa7\u6ed1/\u62d6\u62fd) \u5f3a\u5927\u7684\u5206\u7ec4/\u5c55\u5f00/\u6298\u53e0/\u7c98\u6027\u5934\u90e8/\u9012\u5f52\u6df1\u5ea6/\u52a8\u753b/\u7ec4position expandOrCollapse \u81ea\u5b9a\u4e49\u5217\u8868\u52a8\u753b setAnimation \u9ed8\u8ba4\u52a8\u753b com.drake.brv.animation \u5934\u5e03\u5c40/\u811a\u5e03\u5c40 addHeader \u5feb\u901f\u8bbe\u7f6e\u5206\u9694\u7269 \u7f3a\u7701\u9875 PageRefreshLayout \u4e0b\u62c9\u5237\u65b0/\u4e0a\u62c9\u52a0\u8f7d/\u81ea\u52a8\u5206\u9875\u52a0\u8f7d PageRefreshLayout \u5f3a\u5927\u7684\u9009\u62e9\u72b6\u6001 setChecked (\u5207\u6362\u6a21\u5f0f/\u591a\u9009/\u5355\u9009/\u5168\u9009/\u53d6\u6d88\u5168\u9009/\u53cd\u9009/\u9009\u4e2d\u6570\u636e\u96c6/\u9009\u4e2d\u6570\u91cf/\u5355\u9009\u548c\u591a\u9009\u6a21\u5f0f\u5207\u6362) \u9075\u5b88\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u539f\u5219, \u652f\u6301\u529f\u80fd\u914d\u5408\u4f7f\u7528, \u4ee3\u7801\u7b80\u6d01\u51fd\u6570\u5206\u7ec4","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-clickable/","text":"brv / com.drake.brv / BindingAdapter / addClickable addClickable \u00b6 fun addClickable(@IdRes vararg id: Int ): Unit \u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6 \u9ed8\u8ba4500ms\u9632\u6296, \u4fee\u6539 clickPeriod \u5c5e\u6027\u53ef\u4ee5\u5168\u5c40\u8bbe\u7f6e\u95f4\u9694\u65f6\u95f4, \u5355\u4f4d\u6beb\u79d2","title":"Add clickable"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-clickable/#addclickable","text":"fun addClickable(@IdRes vararg id: Int ): Unit \u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6 \u9ed8\u8ba4500ms\u9632\u6296, \u4fee\u6539 clickPeriod \u5c5e\u6027\u53ef\u4ee5\u5168\u5c40\u8bbe\u7f6e\u95f4\u9694\u65f6\u95f4, \u5355\u4f4d\u6beb\u79d2","title":"addClickable"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-fast-clickable/","text":"brv / com.drake.brv / BindingAdapter / addFastClickable addFastClickable \u00b6 fun addFastClickable(@IdRes vararg id: Int ): Unit \u6307\u5b9aId\u7684\u89c6\u56fe\u5c06\u88ab\u76d1\u542c\u70b9\u51fb\u4e8b\u4ef6(\u672a\u4f7f\u7528\u9632\u6296)","title":"Add fast clickable"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-fast-clickable/#addfastclickable","text":"fun addFastClickable(@IdRes vararg id: Int ): Unit \u6307\u5b9aId\u7684\u89c6\u56fe\u5c06\u88ab\u76d1\u542c\u70b9\u51fb\u4e8b\u4ef6(\u672a\u4f7f\u7528\u9632\u6296)","title":"addFastClickable"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-footer/","text":"brv / com.drake.brv / BindingAdapter / addFooter addFooter \u00b6 fun addFooter(model: Any ?, index: Int = -1, animation: Boolean = false): Unit","title":"Add footer"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-footer/#addfooter","text":"fun addFooter(model: Any ?, index: Int = -1, animation: Boolean = false): Unit","title":"addFooter"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-header/","text":"brv / com.drake.brv / BindingAdapter / addHeader addHeader \u00b6 fun addHeader(model: Any ?, index: Int = -1, animation: Boolean = false): Unit","title":"Add header"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-header/#addheader","text":"fun addHeader(model: Any ?, index: Int = -1, animation: Boolean = false): Unit","title":"addHeader"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-long-clickable/","text":"brv / com.drake.brv / BindingAdapter / addLongClickable addLongClickable \u00b6 fun addLongClickable(@IdRes vararg id: Int ): Unit \u6307\u5b9aId\u7684\u89c6\u56fe\u5c06\u88ab\u76d1\u542c\u957f\u6309\u4e8b\u4ef6","title":"Add long clickable"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-long-clickable/#addlongclickable","text":"fun addLongClickable(@IdRes vararg id: Int ): Unit \u6307\u5b9aId\u7684\u89c6\u56fe\u5c06\u88ab\u76d1\u542c\u957f\u6309\u4e8b\u4ef6","title":"addLongClickable"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-models/","text":"brv / com.drake.brv / BindingAdapter / addModels addModels \u00b6 fun addModels(models: List < Any ?>?, animation: Boolean = true): Unit \u6dfb\u52a0\u65b0\u7684\u6570\u636e","title":"Add models"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-models/#addmodels","text":"fun addModels(models: List < Any ?>?, animation: Boolean = true): Unit \u6dfb\u52a0\u65b0\u7684\u6570\u636e","title":"addModels"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-type/","text":"brv / com.drake.brv / BindingAdapter / addType addType \u00b6 fun <reified M> addType(@LayoutRes layout: Int ): Unit \u6dfb\u52a0\u591a\u7c7b\u578b inline fun <reified M> addType(noinline block: M.( Int ) -> Int ): Unit \u901a\u8fc7\u56de\u8c03\u51fd\u6570\u6dfb\u52a0\u591a\u7c7b\u578b, \u4e00\u5bf9\u591a\u591a\u7c7b\u578b","title":"Add type"},{"location":"api/brv/com.drake.brv/-binding-adapter/add-type/#addtype","text":"fun <reified M> addType(@LayoutRes layout: Int ): Unit \u6dfb\u52a0\u591a\u7c7b\u578b inline fun <reified M> addType(noinline block: M.( Int ) -> Int ): Unit \u901a\u8fc7\u56de\u8c03\u51fd\u6570\u6dfb\u52a0\u591a\u7c7b\u578b, \u4e00\u5bf9\u591a\u591a\u7c7b\u578b","title":"addType"},{"location":"api/brv/com.drake.brv/-binding-adapter/animation-enabled/","text":"brv / com.drake.brv / BindingAdapter / animationEnabled animationEnabled \u00b6 var animationEnabled: Boolean","title":"Animation enabled"},{"location":"api/brv/com.drake.brv/-binding-adapter/animation-enabled/#animationenabled","text":"var animationEnabled: Boolean","title":"animationEnabled"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-all/","text":"brv / com.drake.brv / BindingAdapter / checkedAll checkedAll \u00b6 fun checkedAll(checked: Boolean = true): Unit \u5355\u9009\u6a21\u5f0f\u4e0b\u4e0d\u652f\u6301\u5168\u9009, \u4f46\u652f\u6301\u53d6\u6d88\u5168\u90e8\u9009\u62e9 Parameters \u00b6 checked - true\u4e3a\u5168\u9009, false \u53d6\u6d88\u5168\u90e8\u9009\u62e9","title":"Checked all"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-all/#checkedall","text":"fun checkedAll(checked: Boolean = true): Unit \u5355\u9009\u6a21\u5f0f\u4e0b\u4e0d\u652f\u6301\u5168\u9009, \u4f46\u652f\u6301\u53d6\u6d88\u5168\u90e8\u9009\u62e9","title":"checkedAll"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-all/#parameters","text":"checked - true\u4e3a\u5168\u9009, false \u53d6\u6d88\u5168\u90e8\u9009\u62e9","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-count/","text":"brv / com.drake.brv / BindingAdapter / checkedCount checkedCount \u00b6 val checkedCount: Int","title":"Checked count"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-count/#checkedcount","text":"val checkedCount: Int","title":"checkedCount"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-position/","text":"brv / com.drake.brv / BindingAdapter / checkedPosition checkedPosition \u00b6 val checkedPosition: MutableList < Int >","title":"Checked position"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-position/#checkedposition","text":"val checkedPosition: MutableList < Int >","title":"checkedPosition"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-reverse/","text":"brv / com.drake.brv / BindingAdapter / checkedReverse checkedReverse \u00b6 fun checkedReverse(): Unit \u53cd\u9009","title":"Checked reverse"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-reverse/#checkedreverse","text":"fun checkedReverse(): Unit \u53cd\u9009","title":"checkedReverse"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-switch/","text":"brv / com.drake.brv / BindingAdapter / checkedSwitch checkedSwitch \u00b6 fun checkedSwitch(position: Int ): Unit \u5207\u6362\u9009\u4e2d","title":"Checked switch"},{"location":"api/brv/com.drake.brv/-binding-adapter/checked-switch/#checkedswitch","text":"fun checkedSwitch(position: Int ): Unit \u5207\u6362\u9009\u4e2d","title":"checkedSwitch"},{"location":"api/brv/com.drake.brv/-binding-adapter/clear-footer/","text":"brv / com.drake.brv / BindingAdapter / clearFooter clearFooter \u00b6 fun clearFooter(animation: Boolean = false): Unit","title":"Clear footer"},{"location":"api/brv/com.drake.brv/-binding-adapter/clear-footer/#clearfooter","text":"fun clearFooter(animation: Boolean = false): Unit","title":"clearFooter"},{"location":"api/brv/com.drake.brv/-binding-adapter/clear-header/","text":"brv / com.drake.brv / BindingAdapter / clearHeader clearHeader \u00b6 fun clearHeader(animation: Boolean = false): Unit","title":"Clear header"},{"location":"api/brv/com.drake.brv/-binding-adapter/clear-header/#clearheader","text":"fun clearHeader(animation: Boolean = false): Unit","title":"clearHeader"},{"location":"api/brv/com.drake.brv/-binding-adapter/click-period/","text":"brv / com.drake.brv / BindingAdapter / clickPeriod clickPeriod \u00b6 var clickPeriod: Long","title":"Click period"},{"location":"api/brv/com.drake.brv/-binding-adapter/click-period/#clickperiod","text":"var clickPeriod: Long","title":"clickPeriod"},{"location":"api/brv/com.drake.brv/-binding-adapter/collapse/","text":"brv / com.drake.brv / BindingAdapter / collapse collapse \u00b6 fun collapse(position: Int , depth: Int = 0): Int \u6298\u53e0 Parameters \u00b6 position - \u6307\u5b9aposition\u7684\u6761\u76ee\u6298\u53e0 depth - \u9012\u5f52\u5c55\u5f00\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u6298\u53e0\u540e\u6d88\u5931\u7684\u6761\u76ee\u6570\u91cf","title":"Collapse"},{"location":"api/brv/com.drake.brv/-binding-adapter/collapse/#collapse","text":"fun collapse(position: Int , depth: Int = 0): Int \u6298\u53e0","title":"collapse"},{"location":"api/brv/com.drake.brv/-binding-adapter/collapse/#parameters","text":"position - \u6307\u5b9aposition\u7684\u6761\u76ee\u6298\u53e0 depth - \u9012\u5f52\u5c55\u5f00\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u6298\u53e0\u540e\u6d88\u5931\u7684\u6761\u76ee\u6570\u91cf","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/expand-animation-enabled/","text":"brv / com.drake.brv / BindingAdapter / expandAnimationEnabled expandAnimationEnabled \u00b6 var expandAnimationEnabled: Boolean","title":"Expand animation enabled"},{"location":"api/brv/com.drake.brv/-binding-adapter/expand-animation-enabled/#expandanimationenabled","text":"var expandAnimationEnabled: Boolean","title":"expandAnimationEnabled"},{"location":"api/brv/com.drake.brv/-binding-adapter/expand-or-collapse/","text":"brv / com.drake.brv / BindingAdapter / expandOrCollapse expandOrCollapse \u00b6 fun expandOrCollapse(position: Int , scrollTop: Boolean = false, depth: Int = 0): Int \u5c55\u5f00\u6216\u6298\u53e0 Parameters \u00b6 scrollTop - \u5c55\u5f00\u540c\u65f6\u5f53\u524d\u6761\u76ee\u6ed1\u52a8\u5230\u9876\u90e8 depth - \u9012\u5f52\u5c55\u5f00\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u5c55\u5f00\u6216\u6298\u53e0\u540e\u53d8\u52a8\u7684\u6761\u76ee\u6570\u91cf","title":"Expand or collapse"},{"location":"api/brv/com.drake.brv/-binding-adapter/expand-or-collapse/#expandorcollapse","text":"fun expandOrCollapse(position: Int , scrollTop: Boolean = false, depth: Int = 0): Int \u5c55\u5f00\u6216\u6298\u53e0","title":"expandOrCollapse"},{"location":"api/brv/com.drake.brv/-binding-adapter/expand-or-collapse/#parameters","text":"scrollTop - \u5c55\u5f00\u540c\u65f6\u5f53\u524d\u6761\u76ee\u6ed1\u52a8\u5230\u9876\u90e8 depth - \u9012\u5f52\u5c55\u5f00\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u5c55\u5f00\u6216\u6298\u53e0\u540e\u53d8\u52a8\u7684\u6761\u76ee\u6570\u91cf","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/expand/","text":"brv / com.drake.brv / BindingAdapter / expand expand \u00b6 fun expand(position: Int , scrollTop: Boolean = false, depth: Int = 0): Int \u5c55\u5f00 Parameters \u00b6 position - \u6307\u5b9aposition\u7684\u6761\u76ee\u6298\u53e0 scrollTop - \u5c55\u5f00\u540c\u65f6\u5f53\u524d\u6761\u76ee\u6ed1\u52a8\u5230\u9876\u90e8 depth - \u9012\u5f52\u5c55\u5f00\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u5c55\u5f00\u540e\u589e\u52a0\u7684\u6761\u76ee\u6570\u91cf","title":"Expand"},{"location":"api/brv/com.drake.brv/-binding-adapter/expand/#expand","text":"fun expand(position: Int , scrollTop: Boolean = false, depth: Int = 0): Int \u5c55\u5f00","title":"expand"},{"location":"api/brv/com.drake.brv/-binding-adapter/expand/#parameters","text":"position - \u6307\u5b9aposition\u7684\u6761\u76ee\u6298\u53e0 scrollTop - \u5c55\u5f00\u540c\u65f6\u5f53\u524d\u6761\u76ee\u6ed1\u52a8\u5230\u9876\u90e8 depth - \u9012\u5f52\u5c55\u5f00\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u5c55\u5f00\u540e\u589e\u52a0\u7684\u6761\u76ee\u6570\u91cf","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/footer-count/","text":"brv / com.drake.brv / BindingAdapter / footerCount footerCount \u00b6 val footerCount: Int","title":"Footer count"},{"location":"api/brv/com.drake.brv/-binding-adapter/footer-count/#footercount","text":"val footerCount: Int","title":"footerCount"},{"location":"api/brv/com.drake.brv/-binding-adapter/footers/","text":"brv / com.drake.brv / BindingAdapter / footers footers \u00b6 var footers: List < Any ?>","title":"Footers"},{"location":"api/brv/com.drake.brv/-binding-adapter/footers/#footers","text":"var footers: List < Any ?>","title":"footers"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-checked-models/","text":"brv / com.drake.brv / BindingAdapter / getCheckedModels getCheckedModels \u00b6 fun <M> getCheckedModels(): List <M> \u8fd4\u56de\u88ab\u9009\u4e2d\u7684\u6761\u76ee\u5bf9\u5e94\u7684\u6570\u636e\u6a21\u578b\u96c6\u5408","title":"Get checked models"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-checked-models/#getcheckedmodels","text":"fun <M> getCheckedModels(): List <M> \u8fd4\u56de\u88ab\u9009\u4e2d\u7684\u6761\u76ee\u5bf9\u5e94\u7684\u6570\u636e\u6a21\u578b\u96c6\u5408","title":"getCheckedModels"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-item-count/","text":"brv / com.drake.brv / BindingAdapter / getItemCount getItemCount \u00b6 fun getItemCount(): Int","title":"Get item count"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-item-count/#getitemcount","text":"fun getItemCount(): Int","title":"getItemCount"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-item-view-type/","text":"brv / com.drake.brv / BindingAdapter / getItemViewType getItemViewType \u00b6 fun getItemViewType(position: Int ): Int","title":"Get item view type"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-item-view-type/#getitemviewtype","text":"fun getItemViewType(position: Int ): Int","title":"getItemViewType"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-model-or-null/","text":"brv / com.drake.brv / BindingAdapter / getModelOrNull getModelOrNull \u00b6 fun <reified M> getModelOrNull(position: Int ): M? \u6839\u636e\u7d22\u5f15\u8fd4\u56de\u6570\u636e\u6a21\u578b, \u5982\u679c\u4e0d\u5b58\u5728\u8be5\u6a21\u578b\u5219\u8fd4\u56deNull","title":"Get model or null"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-model-or-null/#getmodelornull","text":"fun <reified M> getModelOrNull(position: Int ): M? \u6839\u636e\u7d22\u5f15\u8fd4\u56de\u6570\u636e\u6a21\u578b, \u5982\u679c\u4e0d\u5b58\u5728\u8be5\u6a21\u578b\u5219\u8fd4\u56deNull","title":"getModelOrNull"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-model/","text":"brv / com.drake.brv / BindingAdapter / getModel getModel \u00b6 fun <M> getModel(position: Int ): M \u6839\u636e\u7d22\u5f15\u8fd4\u56de\u6570\u636e\u6a21\u578b, \u4e0d\u5b58\u5728\u8be5\u6a21\u578b\u5219\u629b\u51fa\u5f02\u5e38","title":"Get model"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-model/#getmodel","text":"fun <M> getModel(position: Int ): M \u6839\u636e\u7d22\u5f15\u8fd4\u56de\u6570\u636e\u6a21\u578b, \u4e0d\u5b58\u5728\u8be5\u6a21\u578b\u5219\u629b\u51fa\u5f02\u5e38","title":"getModel"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-view/","text":"brv / com.drake.brv / BindingAdapter / getView getView \u00b6 fun ViewGroup .getView(@LayoutRes layout: Int ): View","title":"Get view"},{"location":"api/brv/com.drake.brv/-binding-adapter/get-view/#getview","text":"fun ViewGroup .getView(@LayoutRes layout: Int ): View","title":"getView"},{"location":"api/brv/com.drake.brv/-binding-adapter/header-count/","text":"brv / com.drake.brv / BindingAdapter / headerCount headerCount \u00b6 val headerCount: Int","title":"Header count"},{"location":"api/brv/com.drake.brv/-binding-adapter/header-count/#headercount","text":"val headerCount: Int","title":"headerCount"},{"location":"api/brv/com.drake.brv/-binding-adapter/headers/","text":"brv / com.drake.brv / BindingAdapter / headers headers \u00b6 var headers: List < Any ?>","title":"Headers"},{"location":"api/brv/com.drake.brv/-binding-adapter/headers/#headers","text":"var headers: List < Any ?>","title":"headers"},{"location":"api/brv/com.drake.brv/-binding-adapter/hover-enabled/","text":"brv / com.drake.brv / BindingAdapter / hoverEnabled hoverEnabled \u00b6 var hoverEnabled: Boolean","title":"Hover enabled"},{"location":"api/brv/com.drake.brv/-binding-adapter/hover-enabled/#hoverenabled","text":"var hoverEnabled: Boolean","title":"hoverEnabled"},{"location":"api/brv/com.drake.brv/-binding-adapter/is-checked-all/","text":"brv / com.drake.brv / BindingAdapter / isCheckedAll isCheckedAll \u00b6 fun isCheckedAll(): Boolean \u662f\u5426\u5168\u9009","title":"Is checked all"},{"location":"api/brv/com.drake.brv/-binding-adapter/is-checked-all/#ischeckedall","text":"fun isCheckedAll(): Boolean \u662f\u5426\u5168\u9009","title":"isCheckedAll"},{"location":"api/brv/com.drake.brv/-binding-adapter/is-footer/","text":"brv / com.drake.brv / BindingAdapter / isFooter isFooter \u00b6 fun isFooter(position: Int ): Boolean","title":"Is footer"},{"location":"api/brv/com.drake.brv/-binding-adapter/is-footer/#isfooter","text":"fun isFooter(position: Int ): Boolean","title":"isFooter"},{"location":"api/brv/com.drake.brv/-binding-adapter/is-header/","text":"brv / com.drake.brv / BindingAdapter / isHeader isHeader \u00b6 fun isHeader(position: Int ): Boolean","title":"Is header"},{"location":"api/brv/com.drake.brv/-binding-adapter/is-header/#isheader","text":"fun isHeader(position: Int ): Boolean","title":"isHeader"},{"location":"api/brv/com.drake.brv/-binding-adapter/is-hover/","text":"brv / com.drake.brv / BindingAdapter / isHover isHover \u00b6 fun isHover(position: Int ): Boolean","title":"Is hover"},{"location":"api/brv/com.drake.brv/-binding-adapter/is-hover/#ishover","text":"fun isHover(position: Int ): Boolean","title":"isHover"},{"location":"api/brv/com.drake.brv/-binding-adapter/is-model/","text":"brv / com.drake.brv / BindingAdapter / isModel isModel \u00b6 fun isModel(position: Int ): Boolean","title":"Is model"},{"location":"api/brv/com.drake.brv/-binding-adapter/is-model/#ismodel","text":"fun isModel(position: Int ): Boolean","title":"isModel"},{"location":"api/brv/com.drake.brv/-binding-adapter/item-touch-helper/","text":"brv / com.drake.brv / BindingAdapter / itemTouchHelper itemTouchHelper \u00b6 var itemTouchHelper: ItemTouchHelper? \u7b49\u6548\u4e8e RecyclerView.addItemDecoration \u8bbe\u7f6e Property \u00b6 itemTouchHelper - \u7b49\u6548\u4e8e RecyclerView.addItemDecoration \u8bbe\u7f6e","title":"Item touch helper"},{"location":"api/brv/com.drake.brv/-binding-adapter/item-touch-helper/#itemtouchhelper","text":"var itemTouchHelper: ItemTouchHelper? \u7b49\u6548\u4e8e RecyclerView.addItemDecoration \u8bbe\u7f6e","title":"itemTouchHelper"},{"location":"api/brv/com.drake.brv/-binding-adapter/item-touch-helper/#property","text":"itemTouchHelper - \u7b49\u6548\u4e8e RecyclerView.addItemDecoration \u8bbe\u7f6e","title":"Property"},{"location":"api/brv/com.drake.brv/-binding-adapter/list-bind/","text":"brv / com.drake.brv / BindingAdapter / listBind listBind \u00b6 var listBind: MutableSet < OnBindViewHolderListener >","title":"List bind"},{"location":"api/brv/com.drake.brv/-binding-adapter/list-bind/#listbind","text":"var listBind: MutableSet < OnBindViewHolderListener >","title":"listBind"},{"location":"api/brv/com.drake.brv/-binding-adapter/model-count/","text":"brv / com.drake.brv / BindingAdapter / modelCount modelCount \u00b6 val modelCount: Int","title":"Model count"},{"location":"api/brv/com.drake.brv/-binding-adapter/model-count/#modelcount","text":"val modelCount: Int","title":"modelCount"},{"location":"api/brv/com.drake.brv/-binding-adapter/model-id/","text":"brv / com.drake.brv / BindingAdapter / modelId modelId \u00b6 var modelId: Int","title":"Model id"},{"location":"api/brv/com.drake.brv/-binding-adapter/model-id/#modelid","text":"var modelId: Int","title":"modelId"},{"location":"api/brv/com.drake.brv/-binding-adapter/models/","text":"brv / com.drake.brv / BindingAdapter / models models \u00b6 var models: List < Any ?>?","title":"Models"},{"location":"api/brv/com.drake.brv/-binding-adapter/models/#models","text":"var models: List < Any ?>?","title":"models"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-attached-to-recycler-view/","text":"brv / com.drake.brv / BindingAdapter / onAttachedToRecyclerView onAttachedToRecyclerView \u00b6 fun onAttachedToRecyclerView(recyclerView: RecyclerView): Unit","title":"On attached to recycler view"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-attached-to-recycler-view/#onattachedtorecyclerview","text":"fun onAttachedToRecyclerView(recyclerView: RecyclerView): Unit","title":"onAttachedToRecyclerView"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-bind-view-holder/","text":"brv / com.drake.brv / BindingAdapter / onBindViewHolder onBindViewHolder \u00b6 fun onBindViewHolder(holder: BindingViewHolder, position: Int ): Unit fun onBindViewHolder(holder: BindingViewHolder, position: Int , payloads: MutableList < Any >): Unit","title":"On bind view holder"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-bind-view-holder/#onbindviewholder","text":"fun onBindViewHolder(holder: BindingViewHolder, position: Int ): Unit fun onBindViewHolder(holder: BindingViewHolder, position: Int , payloads: MutableList < Any >): Unit","title":"onBindViewHolder"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-bind/","text":"brv / com.drake.brv / BindingAdapter / onBind onBind \u00b6 fun onBind(block: BindingViewHolder.() -> Unit ): Unit onBindViewHolder \u6267\u884c\u65f6\u56de\u8c03","title":"On bind"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-bind/#onbind","text":"fun onBind(block: BindingViewHolder.() -> Unit ): Unit onBindViewHolder \u6267\u884c\u65f6\u56de\u8c03","title":"onBind"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-checked/","text":"brv / com.drake.brv / BindingAdapter / onChecked onChecked \u00b6 fun onChecked(block: (position: Int , checked: Boolean , allChecked: Boolean ) -> Unit ): Unit \u6761\u76ee\u9009\u4e2d\u4e8b\u4ef6\u56de\u8c03","title":"On checked"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-checked/#onchecked","text":"fun onChecked(block: (position: Int , checked: Boolean , allChecked: Boolean ) -> Unit ): Unit \u6761\u76ee\u9009\u4e2d\u4e8b\u4ef6\u56de\u8c03","title":"onChecked"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-click/","text":"brv / com.drake.brv / BindingAdapter / onClick onClick \u00b6 fun onClick(@IdRes vararg id: Int , block: BindingViewHolder.(id: Int ) -> Unit ): Unit \u70b9\u51fb\u4e8b\u4ef6\u56de\u8c03 Parameters \u00b6 id - \u6dfb\u52a0\u76d1\u542c\u70b9\u51fb\u4e8b\u4ef6\u89c6\u56fe\u7684Id, \u7b49\u6548\u4e8e addClickable","title":"On click"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-click/#onclick","text":"fun onClick(@IdRes vararg id: Int , block: BindingViewHolder.(id: Int ) -> Unit ): Unit \u70b9\u51fb\u4e8b\u4ef6\u56de\u8c03","title":"onClick"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-click/#parameters","text":"id - \u6dfb\u52a0\u76d1\u542c\u70b9\u51fb\u4e8b\u4ef6\u89c6\u56fe\u7684Id, \u7b49\u6548\u4e8e addClickable","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-create-view-holder/","text":"brv / com.drake.brv / BindingAdapter / onCreateViewHolder onCreateViewHolder \u00b6 fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): BindingViewHolder","title":"On create view holder"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-create-view-holder/#oncreateviewholder","text":"fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): BindingViewHolder","title":"onCreateViewHolder"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-create/","text":"brv / com.drake.brv / BindingAdapter / onCreate onCreate \u00b6 fun onCreate(block: BindingViewHolder.() -> Unit ): Unit onCreateViewHolder \u6267\u884c\u65f6\u56de\u8c03","title":"On create"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-create/#oncreate","text":"fun onCreate(block: BindingViewHolder.() -> Unit ): Unit onCreateViewHolder \u6267\u884c\u65f6\u56de\u8c03","title":"onCreate"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-expand/","text":"brv / com.drake.brv / BindingAdapter / onExpand onExpand \u00b6 fun onExpand(block: BindingViewHolder.( Boolean ) -> Unit ): Unit","title":"On expand"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-expand/#onexpand","text":"fun onExpand(block: BindingViewHolder.( Boolean ) -> Unit ): Unit","title":"onExpand"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-hover-attach-listener/","text":"brv / com.drake.brv / BindingAdapter / onHoverAttachListener onHoverAttachListener \u00b6 var onHoverAttachListener: OnHoverAttachListener ?","title":"On hover attach listener"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-hover-attach-listener/#onhoverattachlistener","text":"var onHoverAttachListener: OnHoverAttachListener ?","title":"onHoverAttachListener"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-long-click/","text":"brv / com.drake.brv / BindingAdapter / onLongClick onLongClick \u00b6 fun onLongClick(@IdRes vararg id: Int , block: BindingViewHolder.(id: Int ) -> Unit ): Unit \u957f\u6309\u70b9\u51fb\u4e8b\u4ef6\u56de\u8c03 Parameters \u00b6 id - \u6dfb\u52a0\u76d1\u542c\u957f\u6309\u4e8b\u4ef6\u89c6\u56fe\u7684Id, \u7b49\u6548\u4e8e addLongClickable","title":"On long click"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-long-click/#onlongclick","text":"fun onLongClick(@IdRes vararg id: Int , block: BindingViewHolder.(id: Int ) -> Unit ): Unit \u957f\u6309\u70b9\u51fb\u4e8b\u4ef6\u56de\u8c03","title":"onLongClick"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-long-click/#parameters","text":"id - \u6dfb\u52a0\u76d1\u542c\u957f\u6309\u4e8b\u4ef6\u89c6\u56fe\u7684Id, \u7b49\u6548\u4e8e addLongClickable","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-payload/","text":"brv / com.drake.brv / BindingAdapter / onPayload onPayload \u00b6 fun onPayload(block: BindingViewHolder.(model: Any ) -> Unit ): Unit \u589e\u91cf\u66f4\u65b0\u56de\u8c03","title":"On payload"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-payload/#onpayload","text":"fun onPayload(block: BindingViewHolder.(model: Any ) -> Unit ): Unit \u589e\u91cf\u66f4\u65b0\u56de\u8c03","title":"onPayload"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-toggle/","text":"brv / com.drake.brv / BindingAdapter / onToggle onToggle \u00b6 fun onToggle(block: (position: Int , toggleModel: Boolean , end: Boolean ) -> Unit ): Unit \u5207\u6362\u6a21\u5f0f\u4e8b\u4ef6\u56de\u8c03 Parameters \u00b6 position - \u6761\u76ee\u4f4d\u7f6e toggleMode - \u5207\u6362\u6a21\u5f0f end - \u5168\u90e8\u6761\u76ee\u5df2\u7ecf\u5207\u6362\u5b8c\u6210","title":"On toggle"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-toggle/#ontoggle","text":"fun onToggle(block: (position: Int , toggleModel: Boolean , end: Boolean ) -> Unit ): Unit \u5207\u6362\u6a21\u5f0f\u4e8b\u4ef6\u56de\u8c03","title":"onToggle"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-toggle/#parameters","text":"position - \u6761\u76ee\u4f4d\u7f6e toggleMode - \u5207\u6362\u6a21\u5f0f end - \u5168\u90e8\u6761\u76ee\u5df2\u7ecf\u5207\u6362\u5b8c\u6210","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-view-attached-to-window/","text":"brv / com.drake.brv / BindingAdapter / onViewAttachedToWindow onViewAttachedToWindow \u00b6 fun onViewAttachedToWindow(holder: BindingViewHolder): Unit","title":"On view attached to window"},{"location":"api/brv/com.drake.brv/-binding-adapter/on-view-attached-to-window/#onviewattachedtowindow","text":"fun onViewAttachedToWindow(holder: BindingViewHolder): Unit","title":"onViewAttachedToWindow"},{"location":"api/brv/com.drake.brv/-binding-adapter/remove-footer-at/","text":"brv / com.drake.brv / BindingAdapter / removeFooterAt removeFooterAt \u00b6 fun removeFooterAt(index: Int = -1, animation: Boolean = false): Unit","title":"Remove footer at"},{"location":"api/brv/com.drake.brv/-binding-adapter/remove-footer-at/#removefooterat","text":"fun removeFooterAt(index: Int = -1, animation: Boolean = false): Unit","title":"removeFooterAt"},{"location":"api/brv/com.drake.brv/-binding-adapter/remove-footer/","text":"brv / com.drake.brv / BindingAdapter / removeFooter removeFooter \u00b6 fun removeFooter(model: Any ?, animation: Boolean = false): Unit","title":"Remove footer"},{"location":"api/brv/com.drake.brv/-binding-adapter/remove-footer/#removefooter","text":"fun removeFooter(model: Any ?, animation: Boolean = false): Unit","title":"removeFooter"},{"location":"api/brv/com.drake.brv/-binding-adapter/remove-header-at/","text":"brv / com.drake.brv / BindingAdapter / removeHeaderAt removeHeaderAt \u00b6 fun removeHeaderAt(index: Int = 0, animation: Boolean = false): Unit","title":"Remove header at"},{"location":"api/brv/com.drake.brv/-binding-adapter/remove-header-at/#removeheaderat","text":"fun removeHeaderAt(index: Int = 0, animation: Boolean = false): Unit","title":"removeHeaderAt"},{"location":"api/brv/com.drake.brv/-binding-adapter/remove-header/","text":"brv / com.drake.brv / BindingAdapter / removeHeader removeHeader \u00b6 fun removeHeader(model: Any ?, animation: Boolean = false): Unit","title":"Remove header"},{"location":"api/brv/com.drake.brv/-binding-adapter/remove-header/#removeheader","text":"fun removeHeader(model: Any ?, animation: Boolean = false): Unit","title":"removeHeader"},{"location":"api/brv/com.drake.brv/-binding-adapter/rv/","text":"brv / com.drake.brv / BindingAdapter / rv rv \u00b6 var rv: RecyclerView?","title":"Rv"},{"location":"api/brv/com.drake.brv/-binding-adapter/rv/#rv","text":"var rv: RecyclerView?","title":"rv"},{"location":"api/brv/com.drake.brv/-binding-adapter/set-animation/","text":"brv / com.drake.brv / BindingAdapter / setAnimation setAnimation \u00b6 fun setAnimation(itemAnimation: ItemAnimation ): Unit \u81ea\u5b9a\u4e49\u6761\u76ee\u7684\u52a8\u753b\u6837\u5f0f fun setAnimation(animationType: AnimationType ): Unit \u8bbe\u7f6e\u5f53\u524d\u5e93\u81ea\u5e26\u7684\u6761\u76ee\u7684\u52a8\u753b\u6837\u5f0f","title":"Set animation"},{"location":"api/brv/com.drake.brv/-binding-adapter/set-animation/#setanimation","text":"fun setAnimation(itemAnimation: ItemAnimation ): Unit \u81ea\u5b9a\u4e49\u6761\u76ee\u7684\u52a8\u753b\u6837\u5f0f fun setAnimation(animationType: AnimationType ): Unit \u8bbe\u7f6e\u5f53\u524d\u5e93\u81ea\u5e26\u7684\u6761\u76ee\u7684\u52a8\u753b\u6837\u5f0f","title":"setAnimation"},{"location":"api/brv/com.drake.brv/-binding-adapter/set-checkable-type/","text":"brv / com.drake.brv / BindingAdapter / setCheckableType setCheckableType \u00b6 fun setCheckableType(@LayoutRes vararg checkableItemType: Int ): Unit \u8bbe\u7f6e\u53ef\u4ee5\u88ab\u9009\u62e9\u7684item\u7c7b\u578b See Also setChecked","title":"Set checkable type"},{"location":"api/brv/com.drake.brv/-binding-adapter/set-checkable-type/#setcheckabletype","text":"fun setCheckableType(@LayoutRes vararg checkableItemType: Int ): Unit \u8bbe\u7f6e\u53ef\u4ee5\u88ab\u9009\u62e9\u7684item\u7c7b\u578b See Also setChecked","title":"setCheckableType"},{"location":"api/brv/com.drake.brv/-binding-adapter/set-checked/","text":"brv / com.drake.brv / BindingAdapter / setChecked setChecked \u00b6 fun setChecked(position: Int , checked: Boolean ): Unit \u8bbe\u7f6e\u9009\u4e2d","title":"Set checked"},{"location":"api/brv/com.drake.brv/-binding-adapter/set-checked/#setchecked","text":"fun setChecked(position: Int , checked: Boolean ): Unit \u8bbe\u7f6e\u9009\u4e2d","title":"setChecked"},{"location":"api/brv/com.drake.brv/-binding-adapter/single-expand-mode/","text":"brv / com.drake.brv / BindingAdapter / singleExpandMode singleExpandMode \u00b6 var singleExpandMode: Boolean","title":"Single expand mode"},{"location":"api/brv/com.drake.brv/-binding-adapter/single-expand-mode/#singleexpandmode","text":"var singleExpandMode: Boolean","title":"singleExpandMode"},{"location":"api/brv/com.drake.brv/-binding-adapter/single-mode/","text":"brv / com.drake.brv / BindingAdapter / singleMode singleMode \u00b6 var singleMode: Boolean","title":"Single mode"},{"location":"api/brv/com.drake.brv/-binding-adapter/single-mode/#singlemode","text":"var singleMode: Boolean","title":"singleMode"},{"location":"api/brv/com.drake.brv/-binding-adapter/to-model-position/","text":"brv / com.drake.brv / BindingAdapter / toModelPosition toModelPosition \u00b6 fun Int .toModelPosition(): Int adapter position convert to model position Receiver Int model of position Return Int","title":"To model position"},{"location":"api/brv/com.drake.brv/-binding-adapter/to-model-position/#tomodelposition","text":"fun Int .toModelPosition(): Int adapter position convert to model position Receiver Int model of position Return Int","title":"toModelPosition"},{"location":"api/brv/com.drake.brv/-binding-adapter/toggle-mode/","text":"brv / com.drake.brv / BindingAdapter / toggleMode toggleMode \u00b6 var toggleMode: Boolean","title":"Toggle mode"},{"location":"api/brv/com.drake.brv/-binding-adapter/toggle-mode/#togglemode","text":"var toggleMode: Boolean","title":"toggleMode"},{"location":"api/brv/com.drake.brv/-binding-adapter/toggle/","text":"brv / com.drake.brv / BindingAdapter / toggle toggle \u00b6 fun toggle(): Unit \u5207\u6362\u6a21\u5f0f, \u5207\u6362\u6a21\u5f0f\u4e3a\u904d\u5386\u6bcf\u4e2aitem See Also onToggle fun toggle(toggleMode: Boolean ): Unit \u8bbe\u7f6e\u5207\u6362\u6a21\u5f0f, \u5207\u6362\u6a21\u5f0f\u4e3a\u904d\u5386\u6bcf\u4e2aitem Parameters \u00b6 toggleMode - Boolean See Also onToggle","title":"Toggle"},{"location":"api/brv/com.drake.brv/-binding-adapter/toggle/#toggle","text":"fun toggle(): Unit \u5207\u6362\u6a21\u5f0f, \u5207\u6362\u6a21\u5f0f\u4e3a\u904d\u5386\u6bcf\u4e2aitem See Also onToggle fun toggle(toggleMode: Boolean ): Unit \u8bbe\u7f6e\u5207\u6362\u6a21\u5f0f, \u5207\u6362\u6a21\u5f0f\u4e3a\u904d\u5386\u6bcf\u4e2aitem","title":"toggle"},{"location":"api/brv/com.drake.brv/-binding-adapter/toggle/#parameters","text":"toggleMode - Boolean See Also onToggle","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/type-pool/","text":"brv / com.drake.brv / BindingAdapter / typePool typePool \u00b6 val typePool: MutableMap < Class <*>, Any .( Int ) -> Int >","title":"Type pool"},{"location":"api/brv/com.drake.brv/-binding-adapter/type-pool/#typepool","text":"val typePool: MutableMap < Class <*>, Any .( Int ) -> Int >","title":"typePool"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder BindingViewHolder \u00b6 inner class BindingViewHolder : ViewHolder Constructors \u00b6 Name Summary <init> BindingViewHolder(itemView: View ) BindingViewHolder(viewDataBinding: ViewDataBinding) Properties \u00b6 Name Summary _data lateinit var _data: Any adapter val adapter: BindingAdapter context var context: Context modelPosition val modelPosition: Int Functions \u00b6 Name Summary collapse \u6298\u53e0\u5b50\u9879 fun collapse(depth: Int = 0): Int expand \u5c55\u5f00\u5b50\u9879 fun expand(scrollTop: Boolean = true, depth: Int = 0): Int expandOrCollapse \u5c55\u5f00\u6216\u6298\u53e0\u5b50\u9879 fun expandOrCollapse(scrollTop: Boolean = false, depth: Int = 0): Int findParentPosition \u67e5\u627e\u5206\u7ec4\u4e2d\u7684\u7236\u9879\u4f4d\u7f6e fun findParentPosition(): Int findParentViewHolder \u67e5\u627e\u5206\u7ec4\u4e2d\u7684\u7236\u9879ViewHolder fun findParentViewHolder(): BindingViewHolder? findView \u67e5\u627eItemView\u4e0a\u7684\u89c6\u56fe fun <V : View > findView(id: Int ): V getBinding \u8fd4\u56de\u5339\u914d\u6cdb\u578b\u7684\u6570\u636e\u7ed1\u5b9a\u5bf9\u8c61ViewDataBinding fun <B : ViewDataBinding> getBinding(): B getModel \u8fd4\u56de\u6570\u636e\u6a21\u578b fun <M> getModel(): M getModelOrNull \u8fd4\u56de\u6570\u636e\u6a21\u578b, \u5982\u679c\u4e0d\u5339\u914d\u6cdb\u578b\u5219\u8fd4\u56deNull fun <M> getModelOrNull(): M?","title":"Index"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/#bindingviewholder","text":"inner class BindingViewHolder : ViewHolder","title":"BindingViewHolder"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/#constructors","text":"Name Summary <init> BindingViewHolder(itemView: View ) BindingViewHolder(viewDataBinding: ViewDataBinding)","title":"Constructors"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/#properties","text":"Name Summary _data lateinit var _data: Any adapter val adapter: BindingAdapter context var context: Context modelPosition val modelPosition: Int","title":"Properties"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/#functions","text":"Name Summary collapse \u6298\u53e0\u5b50\u9879 fun collapse(depth: Int = 0): Int expand \u5c55\u5f00\u5b50\u9879 fun expand(scrollTop: Boolean = true, depth: Int = 0): Int expandOrCollapse \u5c55\u5f00\u6216\u6298\u53e0\u5b50\u9879 fun expandOrCollapse(scrollTop: Boolean = false, depth: Int = 0): Int findParentPosition \u67e5\u627e\u5206\u7ec4\u4e2d\u7684\u7236\u9879\u4f4d\u7f6e fun findParentPosition(): Int findParentViewHolder \u67e5\u627e\u5206\u7ec4\u4e2d\u7684\u7236\u9879ViewHolder fun findParentViewHolder(): BindingViewHolder? findView \u67e5\u627eItemView\u4e0a\u7684\u89c6\u56fe fun <V : View > findView(id: Int ): V getBinding \u8fd4\u56de\u5339\u914d\u6cdb\u578b\u7684\u6570\u636e\u7ed1\u5b9a\u5bf9\u8c61ViewDataBinding fun <B : ViewDataBinding> getBinding(): B getModel \u8fd4\u56de\u6570\u636e\u6a21\u578b fun <M> getModel(): M getModelOrNull \u8fd4\u56de\u6570\u636e\u6a21\u578b, \u5982\u679c\u4e0d\u5339\u914d\u6cdb\u578b\u5219\u8fd4\u56deNull fun <M> getModelOrNull(): M?","title":"Functions"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/-init-/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / <init> <init> \u00b6 BindingViewHolder(itemView: View ) BindingViewHolder(viewDataBinding: ViewDataBinding)","title":" init "},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/-init-/#init","text":"BindingViewHolder(itemView: View ) BindingViewHolder(viewDataBinding: ViewDataBinding)","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/_data/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / _data _data \u00b6 lateinit var _data: Any","title":" data"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/_data/#_data","text":"lateinit var _data: Any","title":"_data"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/adapter/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / adapter adapter \u00b6 val adapter: BindingAdapter","title":"Adapter"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/adapter/#adapter","text":"val adapter: BindingAdapter","title":"adapter"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/collapse/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / collapse collapse \u00b6 fun collapse(depth: Int = 0): Int \u6298\u53e0\u5b50\u9879 Parameters \u00b6 depth - \u9012\u5f52\u6298\u53e0\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u6298\u53e0\u540e\u51cf\u5c11\u7684\u6761\u76ee\u6570\u91cf","title":"Collapse"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/collapse/#collapse","text":"fun collapse(depth: Int = 0): Int \u6298\u53e0\u5b50\u9879","title":"collapse"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/collapse/#parameters","text":"depth - \u9012\u5f52\u6298\u53e0\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u6298\u53e0\u540e\u51cf\u5c11\u7684\u6761\u76ee\u6570\u91cf","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/context/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / context context \u00b6 var context: Context","title":"Context"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/context/#context","text":"var context: Context","title":"context"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/expand-or-collapse/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / expandOrCollapse expandOrCollapse \u00b6 fun expandOrCollapse(scrollTop: Boolean = false, depth: Int = 0): Int \u5c55\u5f00\u6216\u6298\u53e0\u5b50\u9879 Parameters \u00b6 scrollTop - \u5c55\u5f00\u540c\u65f6\u5f53\u524d\u6761\u76ee\u6ed1\u52a8\u5230\u9876\u90e8 depth - \u9012\u5f52\u5c55\u5f00\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u5c55\u5f00|\u6298\u53e0\u540e\u53d8\u52a8\u7684\u6761\u76ee\u6570\u91cf","title":"Expand or collapse"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/expand-or-collapse/#expandorcollapse","text":"fun expandOrCollapse(scrollTop: Boolean = false, depth: Int = 0): Int \u5c55\u5f00\u6216\u6298\u53e0\u5b50\u9879","title":"expandOrCollapse"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/expand-or-collapse/#parameters","text":"scrollTop - \u5c55\u5f00\u540c\u65f6\u5f53\u524d\u6761\u76ee\u6ed1\u52a8\u5230\u9876\u90e8 depth - \u9012\u5f52\u5c55\u5f00\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u5c55\u5f00|\u6298\u53e0\u540e\u53d8\u52a8\u7684\u6761\u76ee\u6570\u91cf","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/expand/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / expand expand \u00b6 fun expand(scrollTop: Boolean = true, depth: Int = 0): Int \u5c55\u5f00\u5b50\u9879 Parameters \u00b6 scrollTop - \u5c55\u5f00\u540c\u65f6\u5f53\u524d\u6761\u76ee\u6ed1\u52a8\u5230\u9876\u90e8 depth - \u9012\u5f52\u5c55\u5f00\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u5c55\u5f00\u540e\u65b0\u589e\u7684\u6761\u76ee\u6570\u91cf","title":"Expand"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/expand/#expand","text":"fun expand(scrollTop: Boolean = true, depth: Int = 0): Int \u5c55\u5f00\u5b50\u9879","title":"expand"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/expand/#parameters","text":"scrollTop - \u5c55\u5f00\u540c\u65f6\u5f53\u524d\u6761\u76ee\u6ed1\u52a8\u5230\u9876\u90e8 depth - \u9012\u5f52\u5c55\u5f00\u5b50\u9879\u7684\u6df1\u5ea6, \u5982\u7b49\u4e8e-1\u5219\u4ee3\u8868\u5c55\u5f00\u6240\u6709\u5b50\u9879, 0\u8868\u793a\u4ec5\u5c55\u5f00\u5f53\u524d Return \u5c55\u5f00\u540e\u65b0\u589e\u7684\u6761\u76ee\u6570\u91cf","title":"Parameters"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/find-parent-position/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / findParentPosition findParentPosition \u00b6 fun findParentPosition(): Int \u67e5\u627e\u5206\u7ec4\u4e2d\u7684\u7236\u9879\u4f4d\u7f6e Return -1 \u8868\u793a\u4e0d\u5b58\u5728\u7236\u9879","title":"Find parent position"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/find-parent-position/#findparentposition","text":"fun findParentPosition(): Int \u67e5\u627e\u5206\u7ec4\u4e2d\u7684\u7236\u9879\u4f4d\u7f6e Return -1 \u8868\u793a\u4e0d\u5b58\u5728\u7236\u9879","title":"findParentPosition"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/find-parent-view-holder/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / findParentViewHolder findParentViewHolder \u00b6 fun findParentViewHolder(): BindingViewHolder? \u67e5\u627e\u5206\u7ec4\u4e2d\u7684\u7236\u9879ViewHolder Return null\u8868\u793a\u4e0d\u5b58\u5728\u7236\u9879","title":"Find parent view holder"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/find-parent-view-holder/#findparentviewholder","text":"fun findParentViewHolder(): BindingViewHolder? \u67e5\u627e\u5206\u7ec4\u4e2d\u7684\u7236\u9879ViewHolder Return null\u8868\u793a\u4e0d\u5b58\u5728\u7236\u9879","title":"findParentViewHolder"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/find-view/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / findView findView \u00b6 fun <V : View > findView(@IdRes id: Int ): V \u67e5\u627eItemView\u4e0a\u7684\u89c6\u56fe","title":"Find view"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/find-view/#findview","text":"fun <V : View > findView(@IdRes id: Int ): V \u67e5\u627eItemView\u4e0a\u7684\u89c6\u56fe","title":"findView"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/get-binding/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / getBinding getBinding \u00b6 fun <B : ViewDataBinding> getBinding(): B \u8fd4\u56de\u5339\u914d\u6cdb\u578b\u7684\u6570\u636e\u7ed1\u5b9a\u5bf9\u8c61ViewDataBinding","title":"Get binding"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/get-binding/#getbinding","text":"fun <B : ViewDataBinding> getBinding(): B \u8fd4\u56de\u5339\u914d\u6cdb\u578b\u7684\u6570\u636e\u7ed1\u5b9a\u5bf9\u8c61ViewDataBinding","title":"getBinding"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/get-model-or-null/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / getModelOrNull getModelOrNull \u00b6 fun <reified M> getModelOrNull(): M? \u8fd4\u56de\u6570\u636e\u6a21\u578b, \u5982\u679c\u4e0d\u5339\u914d\u6cdb\u578b\u5219\u8fd4\u56deNull","title":"Get model or null"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/get-model-or-null/#getmodelornull","text":"fun <reified M> getModelOrNull(): M? \u8fd4\u56de\u6570\u636e\u6a21\u578b, \u5982\u679c\u4e0d\u5339\u914d\u6cdb\u578b\u5219\u8fd4\u56deNull","title":"getModelOrNull"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/get-model/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / getModel getModel \u00b6 fun <M> getModel(): M \u8fd4\u56de\u6570\u636e\u6a21\u578b","title":"Get model"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/get-model/#getmodel","text":"fun <M> getModel(): M \u8fd4\u56de\u6570\u636e\u6a21\u578b","title":"getModel"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/model-position/","text":"brv / com.drake.brv / BindingAdapter / BindingViewHolder / modelPosition modelPosition \u00b6 val modelPosition: Int","title":"Model position"},{"location":"api/brv/com.drake.brv/-binding-adapter/-binding-view-holder/model-position/#modelposition","text":"val modelPosition: Int","title":"modelPosition"},{"location":"api/brv/com.drake.brv/-default-decoration/","text":"brv / com.drake.brv / DefaultDecoration DefaultDecoration \u00b6 class DefaultDecoration : ItemDecoration \u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 \u5206\u9694\u56fe\u7247 \u5206\u9694\u989c\u8272 \u5206\u9694\u95f4\u8ddd \u56de\u8c03\u51fd\u6570\u5224\u65ad\u95f4\u9694 \u9996\u5c3e\u662f\u5426\u663e\u793a\u5206\u9694\u7ebf, \u53ef\u4ee5\u5c55 \u793a\u8868\u683c\u6548\u679c \u7c7b\u578b\u6c60\u6765\u6307\u5b9a\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf \u652f\u6301\u5168\u90e8\u7684LayoutManager, \u7ad6\u5411/\u6a2a\u5411/\u7f51\u683c\u5206\u5272\u7ebf \u4f18\u4e8e\u5176\u4ed6\u6846\u67b6, \u5b8c\u7f8e\u652f\u6301\u5747\u5e03\u7f51\u683c\u5206\u9694\u7269 \u652f\u6301\u5206\u7ec4\u6761\u76ee\u7684\u5206\u5272\u7ebf Types \u00b6 Name Summary Edge \u5217\u8868\u6761\u76ee\u662f\u5426\u9760\u8fd1\u8fb9\u7f18\u7684\u7ed3\u7b97\u7ed3\u679c data class Edge Constructors \u00b6 Name Summary <init> \u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 DefaultDecoration(context: Context ) Properties \u00b6 Name Summary endVisible \u6700\u540e\u4e00\u4e2a\u6761\u76ee\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf, \u5f53\u5904\u4e8e DividerOrientation.GRID \u65f6\u5782\u76f4\u65b9\u5411\u9876\u7aef\u548c\u672b\u7aef\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf var endVisible: Boolean expandVisible \u5c55\u5f00\u5206\u7ec4\u6761\u76ee\u540e\u8be5\u6761\u76ee\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf var expandVisible: Boolean includeVisible var includeVisible: Boolean orientation \u5206\u5272\u7ebf\u7684\u65b9\u5411, \u4ec5\u652f\u6301 GridLayoutManager , \u5176\u4ed6LayoutManager\u90fd\u662f\u6839\u636e\u5176\u65b9\u5411\u81ea\u52a8\u9002\u5e94 var orientation: DividerOrientation startVisible \u7b2c\u4e00\u4e2a\u6761\u76ee\u4e4b\u524d\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf, \u5f53\u5904\u4e8e DividerOrientation.GRID \u65f6\u6c34\u5e73\u65b9\u5411\u9876\u7aef\u548c\u672b\u7aef\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf var startVisible: Boolean typePool \u96c6\u5408\u5185\u5305\u542b\u7684\u7c7b\u578b\u624d\u663e\u793a\u5206\u5272\u7ebf var typePool: MutableList < Int >? Functions \u00b6 Name Summary addType \u6dfb\u52a0\u7c7b\u578b\u540e\u53ea\u5141\u8bb8\u8be5\u7c7b\u578b\u7684\u6761\u76ee\u663e\u793a\u5206\u5272\u7ebf \u4ece\u672a\u6dfb\u52a0\u7c7b\u578b\u5219\u9ed8\u8ba4\u4e3a\u5141\u8bb8\u5168\u90e8\u6761\u76ee\u663e\u793a\u5206\u5272\u7ebf fun addType(vararg typeArray: Int ): Unit getItemOffsets fun getItemOffsets(outRect: Rect , view: View , parent: RecyclerView, state: State): Unit onDraw fun onDraw(canvas: Canvas , parent: RecyclerView, state: State): Unit onEnabled \u6839\u636e\u56de\u8c03\u51fd\u6570\u6765\u51b3\u5b9a\u662f\u5426\u542f\u7528\u5206\u5272\u7ebf fun onEnabled(block: BindingViewHolder.() -> Boolean ): Unit setBackground \u5206\u5272\u7ebf\u80cc\u666f\u8272 \u5206\u5272\u7ebf\u6709\u65f6\u5019\u4f1a\u5b58\u5728\u95f4\u8ddd(\u4f8b\u5982\u914d\u7f6e setMargin )\u6216\u5c5e\u4e8e\u865a\u7ebf, \u8fd9\u4e2a\u65f6\u5019\u66b4\u9732\u51fa\u6765\u7684\u662fRecyclerView\u7684\u80cc\u666f\u8272, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\u8272\u6765\u8c03\u6574 \u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u89e3\u51b3\u4e0d\u7edf\u4e00\u7684\u95ee\u9898, \u9ed8\u8ba4\u4e3a\u900f\u660e Color.TRANSPARENT fun setBackground(color: Int ): Unit fun setBackground(colorString: String ): Unit setBackgroundRes \u5206\u5272\u7ebf\u80cc\u666f\u8272 \u5206\u5272\u7ebf\u6709\u65f6\u5019\u4f1a\u5b58\u5728\u95f4\u8ddd(\u4f8b\u5982\u914d\u7f6e setMargin )\u6216\u5c5e\u4e8e\u865a\u7ebf, \u8fd9\u4e2a\u65f6\u5019\u66b4\u9732\u51fa\u6765\u7684\u662fRecyclerView\u7684\u80cc\u666f\u8272, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\u8272\u6765\u8c03\u6574 \u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u89e3\u51b3\u4e0d\u7edf\u4e00\u7684\u95ee\u9898, \u9ed8\u8ba4\u4e3a\u900f\u660e Color.TRANSPARENT fun setBackgroundRes(color: Int ): Unit setColor \u8bbe\u7f6e\u5206\u5272\u7ebf\u989c\u8272, \u5982\u679c\u4e0d\u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 setDivider \u5219\u5206\u5272\u7ebf\u5bbd\u5ea6\u9ed8\u8ba4\u4e3a1px \u6240\u8c13\u5206\u5272\u7ebf\u5bbd\u5ea6\u6307\u7684\u662f\u5206\u5272\u7ebf\u7684\u7c97\u7ec6, \u800c\u975e\u6c34\u5e73\u5bbd\u5ea6 fun setColor(color: Int ): Unit fun setColor(color: String ): Unit setColorRes \u8bbe\u7f6e\u5206\u5272\u7ebf\u989c\u8272, \u5982\u679c\u4e0d\u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 setDivider \u5219\u5206\u5272\u7ebf\u5bbd\u5ea6\u9ed8\u8ba4\u4e3a1px \u6240\u8c13\u5206\u5272\u7ebf\u5bbd\u5ea6\u6307\u7684\u662f\u5206\u5272\u7ebf\u7684\u7c97\u7ec6, \u800c\u975e\u6c34\u5e73\u5bbd\u5ea6 fun setColorRes(color: Int ): Unit setDivider \u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 \u5982\u679c\u4f7f\u7528 setDrawable \u5219\u65e0\u6548 fun setDivider(width: Int = 1, dp: Boolean = false): Unit setDrawable \u5c06\u56fe\u7247\u4f5c\u4e3a\u5206\u5272\u7ebf, \u56fe\u7247\u5bbd\u9ad8\u5373\u5206\u5272\u7ebf\u5bbd\u9ad8 fun setDrawable(drawable: Drawable ): Unit fun setDrawable(drawableRes: Int ): Unit setMargin \u8bbe\u7f6e\u5206\u9694\u5de6\u53f3\u6216\u4e0a\u4e0b\u95f4\u8ddd, \u4f9d\u636e\u5206\u5272\u7ebf\u4e3a\u5782\u76f4\u6216\u8005\u6c34\u5e73\u51b3\u5b9a\u5177\u4f53\u65b9\u5411\u95f4\u8ddd fun setMargin(start: Int = 0, end: Int = 0, dp: Boolean = true): Unit","title":"Index"},{"location":"api/brv/com.drake.brv/-default-decoration/#defaultdecoration","text":"class DefaultDecoration : ItemDecoration \u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 \u5206\u9694\u56fe\u7247 \u5206\u9694\u989c\u8272 \u5206\u9694\u95f4\u8ddd \u56de\u8c03\u51fd\u6570\u5224\u65ad\u95f4\u9694 \u9996\u5c3e\u662f\u5426\u663e\u793a\u5206\u9694\u7ebf, \u53ef\u4ee5\u5c55 \u793a\u8868\u683c\u6548\u679c \u7c7b\u578b\u6c60\u6765\u6307\u5b9a\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf \u652f\u6301\u5168\u90e8\u7684LayoutManager, \u7ad6\u5411/\u6a2a\u5411/\u7f51\u683c\u5206\u5272\u7ebf \u4f18\u4e8e\u5176\u4ed6\u6846\u67b6, \u5b8c\u7f8e\u652f\u6301\u5747\u5e03\u7f51\u683c\u5206\u9694\u7269 \u652f\u6301\u5206\u7ec4\u6761\u76ee\u7684\u5206\u5272\u7ebf","title":"DefaultDecoration"},{"location":"api/brv/com.drake.brv/-default-decoration/#types","text":"Name Summary Edge \u5217\u8868\u6761\u76ee\u662f\u5426\u9760\u8fd1\u8fb9\u7f18\u7684\u7ed3\u7b97\u7ed3\u679c data class Edge","title":"Types"},{"location":"api/brv/com.drake.brv/-default-decoration/#constructors","text":"Name Summary <init> \u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 DefaultDecoration(context: Context )","title":"Constructors"},{"location":"api/brv/com.drake.brv/-default-decoration/#properties","text":"Name Summary endVisible \u6700\u540e\u4e00\u4e2a\u6761\u76ee\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf, \u5f53\u5904\u4e8e DividerOrientation.GRID \u65f6\u5782\u76f4\u65b9\u5411\u9876\u7aef\u548c\u672b\u7aef\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf var endVisible: Boolean expandVisible \u5c55\u5f00\u5206\u7ec4\u6761\u76ee\u540e\u8be5\u6761\u76ee\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf var expandVisible: Boolean includeVisible var includeVisible: Boolean orientation \u5206\u5272\u7ebf\u7684\u65b9\u5411, \u4ec5\u652f\u6301 GridLayoutManager , \u5176\u4ed6LayoutManager\u90fd\u662f\u6839\u636e\u5176\u65b9\u5411\u81ea\u52a8\u9002\u5e94 var orientation: DividerOrientation startVisible \u7b2c\u4e00\u4e2a\u6761\u76ee\u4e4b\u524d\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf, \u5f53\u5904\u4e8e DividerOrientation.GRID \u65f6\u6c34\u5e73\u65b9\u5411\u9876\u7aef\u548c\u672b\u7aef\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf var startVisible: Boolean typePool \u96c6\u5408\u5185\u5305\u542b\u7684\u7c7b\u578b\u624d\u663e\u793a\u5206\u5272\u7ebf var typePool: MutableList < Int >?","title":"Properties"},{"location":"api/brv/com.drake.brv/-default-decoration/#functions","text":"Name Summary addType \u6dfb\u52a0\u7c7b\u578b\u540e\u53ea\u5141\u8bb8\u8be5\u7c7b\u578b\u7684\u6761\u76ee\u663e\u793a\u5206\u5272\u7ebf \u4ece\u672a\u6dfb\u52a0\u7c7b\u578b\u5219\u9ed8\u8ba4\u4e3a\u5141\u8bb8\u5168\u90e8\u6761\u76ee\u663e\u793a\u5206\u5272\u7ebf fun addType(vararg typeArray: Int ): Unit getItemOffsets fun getItemOffsets(outRect: Rect , view: View , parent: RecyclerView, state: State): Unit onDraw fun onDraw(canvas: Canvas , parent: RecyclerView, state: State): Unit onEnabled \u6839\u636e\u56de\u8c03\u51fd\u6570\u6765\u51b3\u5b9a\u662f\u5426\u542f\u7528\u5206\u5272\u7ebf fun onEnabled(block: BindingViewHolder.() -> Boolean ): Unit setBackground \u5206\u5272\u7ebf\u80cc\u666f\u8272 \u5206\u5272\u7ebf\u6709\u65f6\u5019\u4f1a\u5b58\u5728\u95f4\u8ddd(\u4f8b\u5982\u914d\u7f6e setMargin )\u6216\u5c5e\u4e8e\u865a\u7ebf, \u8fd9\u4e2a\u65f6\u5019\u66b4\u9732\u51fa\u6765\u7684\u662fRecyclerView\u7684\u80cc\u666f\u8272, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\u8272\u6765\u8c03\u6574 \u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u89e3\u51b3\u4e0d\u7edf\u4e00\u7684\u95ee\u9898, \u9ed8\u8ba4\u4e3a\u900f\u660e Color.TRANSPARENT fun setBackground(color: Int ): Unit fun setBackground(colorString: String ): Unit setBackgroundRes \u5206\u5272\u7ebf\u80cc\u666f\u8272 \u5206\u5272\u7ebf\u6709\u65f6\u5019\u4f1a\u5b58\u5728\u95f4\u8ddd(\u4f8b\u5982\u914d\u7f6e setMargin )\u6216\u5c5e\u4e8e\u865a\u7ebf, \u8fd9\u4e2a\u65f6\u5019\u66b4\u9732\u51fa\u6765\u7684\u662fRecyclerView\u7684\u80cc\u666f\u8272, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\u8272\u6765\u8c03\u6574 \u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u89e3\u51b3\u4e0d\u7edf\u4e00\u7684\u95ee\u9898, \u9ed8\u8ba4\u4e3a\u900f\u660e Color.TRANSPARENT fun setBackgroundRes(color: Int ): Unit setColor \u8bbe\u7f6e\u5206\u5272\u7ebf\u989c\u8272, \u5982\u679c\u4e0d\u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 setDivider \u5219\u5206\u5272\u7ebf\u5bbd\u5ea6\u9ed8\u8ba4\u4e3a1px \u6240\u8c13\u5206\u5272\u7ebf\u5bbd\u5ea6\u6307\u7684\u662f\u5206\u5272\u7ebf\u7684\u7c97\u7ec6, \u800c\u975e\u6c34\u5e73\u5bbd\u5ea6 fun setColor(color: Int ): Unit fun setColor(color: String ): Unit setColorRes \u8bbe\u7f6e\u5206\u5272\u7ebf\u989c\u8272, \u5982\u679c\u4e0d\u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 setDivider \u5219\u5206\u5272\u7ebf\u5bbd\u5ea6\u9ed8\u8ba4\u4e3a1px \u6240\u8c13\u5206\u5272\u7ebf\u5bbd\u5ea6\u6307\u7684\u662f\u5206\u5272\u7ebf\u7684\u7c97\u7ec6, \u800c\u975e\u6c34\u5e73\u5bbd\u5ea6 fun setColorRes(color: Int ): Unit setDivider \u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 \u5982\u679c\u4f7f\u7528 setDrawable \u5219\u65e0\u6548 fun setDivider(width: Int = 1, dp: Boolean = false): Unit setDrawable \u5c06\u56fe\u7247\u4f5c\u4e3a\u5206\u5272\u7ebf, \u56fe\u7247\u5bbd\u9ad8\u5373\u5206\u5272\u7ebf\u5bbd\u9ad8 fun setDrawable(drawable: Drawable ): Unit fun setDrawable(drawableRes: Int ): Unit setMargin \u8bbe\u7f6e\u5206\u9694\u5de6\u53f3\u6216\u4e0a\u4e0b\u95f4\u8ddd, \u4f9d\u636e\u5206\u5272\u7ebf\u4e3a\u5782\u76f4\u6216\u8005\u6c34\u5e73\u51b3\u5b9a\u5177\u4f53\u65b9\u5411\u95f4\u8ddd fun setMargin(start: Int = 0, end: Int = 0, dp: Boolean = true): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv/-default-decoration/-init-/","text":"brv / com.drake.brv / DefaultDecoration / <init> <init> \u00b6 DefaultDecoration(context: Context ) \u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 \u5206\u9694\u56fe\u7247 \u5206\u9694\u989c\u8272 \u5206\u9694\u95f4\u8ddd \u56de\u8c03\u51fd\u6570\u5224\u65ad\u95f4\u9694 \u9996\u5c3e\u662f\u5426\u663e\u793a\u5206\u9694\u7ebf, \u53ef\u4ee5\u5c55 \u793a\u8868\u683c\u6548\u679c \u7c7b\u578b\u6c60\u6765\u6307\u5b9a\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf \u652f\u6301\u5168\u90e8\u7684LayoutManager, \u7ad6\u5411/\u6a2a\u5411/\u7f51\u683c\u5206\u5272\u7ebf \u4f18\u4e8e\u5176\u4ed6\u6846\u67b6, \u5b8c\u7f8e\u652f\u6301\u5747\u5e03\u7f51\u683c\u5206\u9694\u7269 \u652f\u6301\u5206\u7ec4\u6761\u76ee\u7684\u5206\u5272\u7ebf","title":" init "},{"location":"api/brv/com.drake.brv/-default-decoration/-init-/#init","text":"DefaultDecoration(context: Context ) \u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 \u5206\u9694\u56fe\u7247 \u5206\u9694\u989c\u8272 \u5206\u9694\u95f4\u8ddd \u56de\u8c03\u51fd\u6570\u5224\u65ad\u95f4\u9694 \u9996\u5c3e\u662f\u5426\u663e\u793a\u5206\u9694\u7ebf, \u53ef\u4ee5\u5c55 \u793a\u8868\u683c\u6548\u679c \u7c7b\u578b\u6c60\u6765\u6307\u5b9a\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf \u652f\u6301\u5168\u90e8\u7684LayoutManager, \u7ad6\u5411/\u6a2a\u5411/\u7f51\u683c\u5206\u5272\u7ebf \u4f18\u4e8e\u5176\u4ed6\u6846\u67b6, \u5b8c\u7f8e\u652f\u6301\u5747\u5e03\u7f51\u683c\u5206\u9694\u7269 \u652f\u6301\u5206\u7ec4\u6761\u76ee\u7684\u5206\u5272\u7ebf","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv/-default-decoration/add-type/","text":"brv / com.drake.brv / DefaultDecoration / addType addType \u00b6 fun addType(@LayoutRes vararg typeArray: Int ): Unit \u6dfb\u52a0\u7c7b\u578b\u540e\u53ea\u5141\u8bb8\u8be5\u7c7b\u578b\u7684\u6761\u76ee\u663e\u793a\u5206\u5272\u7ebf \u4ece\u672a\u6dfb\u52a0\u7c7b\u578b\u5219\u9ed8\u8ba4\u4e3a\u5141\u8bb8\u5168\u90e8\u6761\u76ee\u663e\u793a\u5206\u5272\u7ebf Parameters \u00b6 typeArray - \u5e03\u5c40Id, \u5bf9\u5e94 BindingAdapter.addType \u4e2d\u7684\u53c2\u6570","title":"Add type"},{"location":"api/brv/com.drake.brv/-default-decoration/add-type/#addtype","text":"fun addType(@LayoutRes vararg typeArray: Int ): Unit \u6dfb\u52a0\u7c7b\u578b\u540e\u53ea\u5141\u8bb8\u8be5\u7c7b\u578b\u7684\u6761\u76ee\u663e\u793a\u5206\u5272\u7ebf \u4ece\u672a\u6dfb\u52a0\u7c7b\u578b\u5219\u9ed8\u8ba4\u4e3a\u5141\u8bb8\u5168\u90e8\u6761\u76ee\u663e\u793a\u5206\u5272\u7ebf","title":"addType"},{"location":"api/brv/com.drake.brv/-default-decoration/add-type/#parameters","text":"typeArray - \u5e03\u5c40Id, \u5bf9\u5e94 BindingAdapter.addType \u4e2d\u7684\u53c2\u6570","title":"Parameters"},{"location":"api/brv/com.drake.brv/-default-decoration/end-visible/","text":"brv / com.drake.brv / DefaultDecoration / endVisible endVisible \u00b6 var endVisible: Boolean \u6700\u540e\u4e00\u4e2a\u6761\u76ee\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf, \u5f53\u5904\u4e8e DividerOrientation.GRID \u65f6\u5782\u76f4\u65b9\u5411\u9876\u7aef\u548c\u672b\u7aef\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf","title":"End visible"},{"location":"api/brv/com.drake.brv/-default-decoration/end-visible/#endvisible","text":"var endVisible: Boolean \u6700\u540e\u4e00\u4e2a\u6761\u76ee\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf, \u5f53\u5904\u4e8e DividerOrientation.GRID \u65f6\u5782\u76f4\u65b9\u5411\u9876\u7aef\u548c\u672b\u7aef\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf","title":"endVisible"},{"location":"api/brv/com.drake.brv/-default-decoration/expand-visible/","text":"brv / com.drake.brv / DefaultDecoration / expandVisible expandVisible \u00b6 var expandVisible: Boolean \u5c55\u5f00\u5206\u7ec4\u6761\u76ee\u540e\u8be5\u6761\u76ee\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf","title":"Expand visible"},{"location":"api/brv/com.drake.brv/-default-decoration/expand-visible/#expandvisible","text":"var expandVisible: Boolean \u5c55\u5f00\u5206\u7ec4\u6761\u76ee\u540e\u8be5\u6761\u76ee\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf","title":"expandVisible"},{"location":"api/brv/com.drake.brv/-default-decoration/get-item-offsets/","text":"brv / com.drake.brv / DefaultDecoration / getItemOffsets getItemOffsets \u00b6 fun getItemOffsets(outRect: Rect , view: View , parent: RecyclerView, state: State): Unit","title":"Get item offsets"},{"location":"api/brv/com.drake.brv/-default-decoration/get-item-offsets/#getitemoffsets","text":"fun getItemOffsets(outRect: Rect , view: View , parent: RecyclerView, state: State): Unit","title":"getItemOffsets"},{"location":"api/brv/com.drake.brv/-default-decoration/include-visible/","text":"brv / com.drake.brv / DefaultDecoration / includeVisible includeVisible \u00b6 var includeVisible: Boolean","title":"Include visible"},{"location":"api/brv/com.drake.brv/-default-decoration/include-visible/#includevisible","text":"var includeVisible: Boolean","title":"includeVisible"},{"location":"api/brv/com.drake.brv/-default-decoration/on-draw/","text":"brv / com.drake.brv / DefaultDecoration / onDraw onDraw \u00b6 fun onDraw(canvas: Canvas , parent: RecyclerView, state: State): Unit","title":"On draw"},{"location":"api/brv/com.drake.brv/-default-decoration/on-draw/#ondraw","text":"fun onDraw(canvas: Canvas , parent: RecyclerView, state: State): Unit","title":"onDraw"},{"location":"api/brv/com.drake.brv/-default-decoration/on-enabled/","text":"brv / com.drake.brv / DefaultDecoration / onEnabled onEnabled \u00b6 fun onEnabled(block: BindingViewHolder.() -> Boolean ): Unit \u6839\u636e\u56de\u8c03\u51fd\u6570\u6765\u51b3\u5b9a\u662f\u5426\u542f\u7528\u5206\u5272\u7ebf Parameters \u00b6 block - \u51fd\u6570\u8fd4\u56de\u503c\u51b3\u5b9a\u53c2\u6570 BindingAdapter.BindingViewHolder \u5bf9\u5e94\u7684Item\u662f\u5426\u542f\u7528\u5206\u5272\u7ebf","title":"On enabled"},{"location":"api/brv/com.drake.brv/-default-decoration/on-enabled/#onenabled","text":"fun onEnabled(block: BindingViewHolder.() -> Boolean ): Unit \u6839\u636e\u56de\u8c03\u51fd\u6570\u6765\u51b3\u5b9a\u662f\u5426\u542f\u7528\u5206\u5272\u7ebf","title":"onEnabled"},{"location":"api/brv/com.drake.brv/-default-decoration/on-enabled/#parameters","text":"block - \u51fd\u6570\u8fd4\u56de\u503c\u51b3\u5b9a\u53c2\u6570 BindingAdapter.BindingViewHolder \u5bf9\u5e94\u7684Item\u662f\u5426\u542f\u7528\u5206\u5272\u7ebf","title":"Parameters"},{"location":"api/brv/com.drake.brv/-default-decoration/orientation/","text":"brv / com.drake.brv / DefaultDecoration / orientation orientation \u00b6 var orientation: DividerOrientation \u5206\u5272\u7ebf\u7684\u65b9\u5411, \u4ec5\u652f\u6301 GridLayoutManager , \u5176\u4ed6LayoutManager\u90fd\u662f\u6839\u636e\u5176\u65b9\u5411\u81ea\u52a8\u9002\u5e94 Property \u00b6 orientation - \u5206\u5272\u7ebf\u7684\u65b9\u5411, \u4ec5\u652f\u6301 GridLayoutManager , \u5176\u4ed6LayoutManager\u90fd\u662f\u6839\u636e\u5176\u65b9\u5411\u81ea\u52a8\u9002\u5e94","title":"Orientation"},{"location":"api/brv/com.drake.brv/-default-decoration/orientation/#orientation","text":"var orientation: DividerOrientation \u5206\u5272\u7ebf\u7684\u65b9\u5411, \u4ec5\u652f\u6301 GridLayoutManager , \u5176\u4ed6LayoutManager\u90fd\u662f\u6839\u636e\u5176\u65b9\u5411\u81ea\u52a8\u9002\u5e94","title":"orientation"},{"location":"api/brv/com.drake.brv/-default-decoration/orientation/#property","text":"orientation - \u5206\u5272\u7ebf\u7684\u65b9\u5411, \u4ec5\u652f\u6301 GridLayoutManager , \u5176\u4ed6LayoutManager\u90fd\u662f\u6839\u636e\u5176\u65b9\u5411\u81ea\u52a8\u9002\u5e94","title":"Property"},{"location":"api/brv/com.drake.brv/-default-decoration/set-background-res/","text":"brv / com.drake.brv / DefaultDecoration / setBackgroundRes setBackgroundRes \u00b6 fun setBackgroundRes(@ColorRes color: Int ): Unit \u5206\u5272\u7ebf\u80cc\u666f\u8272 \u5206\u5272\u7ebf\u6709\u65f6\u5019\u4f1a\u5b58\u5728\u95f4\u8ddd(\u4f8b\u5982\u914d\u7f6e setMargin )\u6216\u5c5e\u4e8e\u865a\u7ebf, \u8fd9\u4e2a\u65f6\u5019\u66b4\u9732\u51fa\u6765\u7684\u662fRecyclerView\u7684\u80cc\u666f\u8272, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\u8272\u6765\u8c03\u6574 \u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u89e3\u51b3\u4e0d\u7edf\u4e00\u7684\u95ee\u9898, \u9ed8\u8ba4\u4e3a\u900f\u660e Color.TRANSPARENT","title":"Set background res"},{"location":"api/brv/com.drake.brv/-default-decoration/set-background-res/#setbackgroundres","text":"fun setBackgroundRes(@ColorRes color: Int ): Unit \u5206\u5272\u7ebf\u80cc\u666f\u8272 \u5206\u5272\u7ebf\u6709\u65f6\u5019\u4f1a\u5b58\u5728\u95f4\u8ddd(\u4f8b\u5982\u914d\u7f6e setMargin )\u6216\u5c5e\u4e8e\u865a\u7ebf, \u8fd9\u4e2a\u65f6\u5019\u66b4\u9732\u51fa\u6765\u7684\u662fRecyclerView\u7684\u80cc\u666f\u8272, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\u8272\u6765\u8c03\u6574 \u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u89e3\u51b3\u4e0d\u7edf\u4e00\u7684\u95ee\u9898, \u9ed8\u8ba4\u4e3a\u900f\u660e Color.TRANSPARENT","title":"setBackgroundRes"},{"location":"api/brv/com.drake.brv/-default-decoration/set-background/","text":"brv / com.drake.brv / DefaultDecoration / setBackground setBackground \u00b6 fun setBackground(color: Int ): Unit \u5206\u5272\u7ebf\u80cc\u666f\u8272 \u5206\u5272\u7ebf\u6709\u65f6\u5019\u4f1a\u5b58\u5728\u95f4\u8ddd(\u4f8b\u5982\u914d\u7f6e setMargin )\u6216\u5c5e\u4e8e\u865a\u7ebf, \u8fd9\u4e2a\u65f6\u5019\u66b4\u9732\u51fa\u6765\u7684\u662fRecyclerView\u7684\u80cc\u666f\u8272, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\u8272\u6765\u8c03\u6574 \u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u89e3\u51b3\u4e0d\u7edf\u4e00\u7684\u95ee\u9898, \u9ed8\u8ba4\u4e3a\u900f\u660e Color.TRANSPARENT fun setBackground(colorString: String ): Unit \u5206\u5272\u7ebf\u80cc\u666f\u8272 \u5206\u5272\u7ebf\u6709\u65f6\u5019\u4f1a\u5b58\u5728\u95f4\u8ddd(\u4f8b\u5982\u914d\u7f6e setMargin )\u6216\u5c5e\u4e8e\u865a\u7ebf, \u8fd9\u4e2a\u65f6\u5019\u66b4\u9732\u51fa\u6765\u7684\u662fRecyclerView\u7684\u80cc\u666f\u8272, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\u8272\u6765\u8c03\u6574 \u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u89e3\u51b3\u4e0d\u7edf\u4e00\u7684\u95ee\u9898, \u9ed8\u8ba4\u4e3a\u900f\u660e Color.TRANSPARENT Parameters \u00b6 colorString - \u989c\u8272\u768416\u8fdb\u5236\u5b57\u7b26\u4e32","title":"Set background"},{"location":"api/brv/com.drake.brv/-default-decoration/set-background/#setbackground","text":"fun setBackground(color: Int ): Unit \u5206\u5272\u7ebf\u80cc\u666f\u8272 \u5206\u5272\u7ebf\u6709\u65f6\u5019\u4f1a\u5b58\u5728\u95f4\u8ddd(\u4f8b\u5982\u914d\u7f6e setMargin )\u6216\u5c5e\u4e8e\u865a\u7ebf, \u8fd9\u4e2a\u65f6\u5019\u66b4\u9732\u51fa\u6765\u7684\u662fRecyclerView\u7684\u80cc\u666f\u8272, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\u8272\u6765\u8c03\u6574 \u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u89e3\u51b3\u4e0d\u7edf\u4e00\u7684\u95ee\u9898, \u9ed8\u8ba4\u4e3a\u900f\u660e Color.TRANSPARENT fun setBackground(colorString: String ): Unit \u5206\u5272\u7ebf\u80cc\u666f\u8272 \u5206\u5272\u7ebf\u6709\u65f6\u5019\u4f1a\u5b58\u5728\u95f4\u8ddd(\u4f8b\u5982\u914d\u7f6e setMargin )\u6216\u5c5e\u4e8e\u865a\u7ebf, \u8fd9\u4e2a\u65f6\u5019\u66b4\u9732\u51fa\u6765\u7684\u662fRecyclerView\u7684\u80cc\u666f\u8272, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\u8272\u6765\u8c03\u6574 \u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u89e3\u51b3\u4e0d\u7edf\u4e00\u7684\u95ee\u9898, \u9ed8\u8ba4\u4e3a\u900f\u660e Color.TRANSPARENT","title":"setBackground"},{"location":"api/brv/com.drake.brv/-default-decoration/set-background/#parameters","text":"colorString - \u989c\u8272\u768416\u8fdb\u5236\u5b57\u7b26\u4e32","title":"Parameters"},{"location":"api/brv/com.drake.brv/-default-decoration/set-color-res/","text":"brv / com.drake.brv / DefaultDecoration / setColorRes setColorRes \u00b6 fun setColorRes(@ColorRes color: Int ): Unit \u8bbe\u7f6e\u5206\u5272\u7ebf\u989c\u8272, \u5982\u679c\u4e0d\u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 setDivider \u5219\u5206\u5272\u7ebf\u5bbd\u5ea6\u9ed8\u8ba4\u4e3a1px \u6240\u8c13\u5206\u5272\u7ebf\u5bbd\u5ea6\u6307\u7684\u662f\u5206\u5272\u7ebf\u7684\u7c97\u7ec6, \u800c\u975e\u6c34\u5e73\u5bbd\u5ea6 Parameters \u00b6 color - \u989c\u8272\u8d44\u6e90Id","title":"Set color res"},{"location":"api/brv/com.drake.brv/-default-decoration/set-color-res/#setcolorres","text":"fun setColorRes(@ColorRes color: Int ): Unit \u8bbe\u7f6e\u5206\u5272\u7ebf\u989c\u8272, \u5982\u679c\u4e0d\u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 setDivider \u5219\u5206\u5272\u7ebf\u5bbd\u5ea6\u9ed8\u8ba4\u4e3a1px \u6240\u8c13\u5206\u5272\u7ebf\u5bbd\u5ea6\u6307\u7684\u662f\u5206\u5272\u7ebf\u7684\u7c97\u7ec6, \u800c\u975e\u6c34\u5e73\u5bbd\u5ea6","title":"setColorRes"},{"location":"api/brv/com.drake.brv/-default-decoration/set-color-res/#parameters","text":"color - \u989c\u8272\u8d44\u6e90Id","title":"Parameters"},{"location":"api/brv/com.drake.brv/-default-decoration/set-color/","text":"brv / com.drake.brv / DefaultDecoration / setColor setColor \u00b6 fun setColor(color: Int ): Unit \u8bbe\u7f6e\u5206\u5272\u7ebf\u989c\u8272, \u5982\u679c\u4e0d\u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 setDivider \u5219\u5206\u5272\u7ebf\u5bbd\u5ea6\u9ed8\u8ba4\u4e3a1px \u6240\u8c13\u5206\u5272\u7ebf\u5bbd\u5ea6\u6307\u7684\u662f\u5206\u5272\u7ebf\u7684\u7c97\u7ec6, \u800c\u975e\u6c34\u5e73\u5bbd\u5ea6 fun setColor(color: String ): Unit \u8bbe\u7f6e\u5206\u5272\u7ebf\u989c\u8272, \u5982\u679c\u4e0d\u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 setDivider \u5219\u5206\u5272\u7ebf\u5bbd\u5ea6\u9ed8\u8ba4\u4e3a1px \u6240\u8c13\u5206\u5272\u7ebf\u5bbd\u5ea6\u6307\u7684\u662f\u5206\u5272\u7ebf\u7684\u7c97\u7ec6, \u800c\u975e\u6c34\u5e73\u5bbd\u5ea6 Parameters \u00b6 color - 16\u8fdb\u5236\u7684\u989c\u8272\u503c\u5b57\u7b26\u4e32","title":"Set color"},{"location":"api/brv/com.drake.brv/-default-decoration/set-color/#setcolor","text":"fun setColor(color: Int ): Unit \u8bbe\u7f6e\u5206\u5272\u7ebf\u989c\u8272, \u5982\u679c\u4e0d\u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 setDivider \u5219\u5206\u5272\u7ebf\u5bbd\u5ea6\u9ed8\u8ba4\u4e3a1px \u6240\u8c13\u5206\u5272\u7ebf\u5bbd\u5ea6\u6307\u7684\u662f\u5206\u5272\u7ebf\u7684\u7c97\u7ec6, \u800c\u975e\u6c34\u5e73\u5bbd\u5ea6 fun setColor(color: String ): Unit \u8bbe\u7f6e\u5206\u5272\u7ebf\u989c\u8272, \u5982\u679c\u4e0d\u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 setDivider \u5219\u5206\u5272\u7ebf\u5bbd\u5ea6\u9ed8\u8ba4\u4e3a1px \u6240\u8c13\u5206\u5272\u7ebf\u5bbd\u5ea6\u6307\u7684\u662f\u5206\u5272\u7ebf\u7684\u7c97\u7ec6, \u800c\u975e\u6c34\u5e73\u5bbd\u5ea6","title":"setColor"},{"location":"api/brv/com.drake.brv/-default-decoration/set-color/#parameters","text":"color - 16\u8fdb\u5236\u7684\u989c\u8272\u503c\u5b57\u7b26\u4e32","title":"Parameters"},{"location":"api/brv/com.drake.brv/-default-decoration/set-divider/","text":"brv / com.drake.brv / DefaultDecoration / setDivider setDivider \u00b6 fun setDivider(width: Int = 1, dp: Boolean = false): Unit \u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 \u5982\u679c\u4f7f\u7528 setDrawable \u5219\u65e0\u6548 Parameters \u00b6 width - \u5206\u5272\u7ebf\u7684\u5c3a\u5bf8 (\u5206\u5272\u7ebf\u5782\u76f4\u65f6\u4e3a\u5bbd, \u6c34\u5e73\u65f6\u4e3a\u9ad8 ) dp - \u662f\u5426\u5355\u4f4d\u4e3adp, \u9ed8\u8ba4\u4e3afalse\u5373\u4f7f\u7528\u50cf\u7d20\u5355\u4f4d","title":"Set divider"},{"location":"api/brv/com.drake.brv/-default-decoration/set-divider/#setdivider","text":"fun setDivider(width: Int = 1, dp: Boolean = false): Unit \u8bbe\u7f6e\u5206\u5272\u7ebf\u5bbd\u5ea6 \u5982\u679c\u4f7f\u7528 setDrawable \u5219\u65e0\u6548","title":"setDivider"},{"location":"api/brv/com.drake.brv/-default-decoration/set-divider/#parameters","text":"width - \u5206\u5272\u7ebf\u7684\u5c3a\u5bf8 (\u5206\u5272\u7ebf\u5782\u76f4\u65f6\u4e3a\u5bbd, \u6c34\u5e73\u65f6\u4e3a\u9ad8 ) dp - \u662f\u5426\u5355\u4f4d\u4e3adp, \u9ed8\u8ba4\u4e3afalse\u5373\u4f7f\u7528\u50cf\u7d20\u5355\u4f4d","title":"Parameters"},{"location":"api/brv/com.drake.brv/-default-decoration/set-drawable/","text":"brv / com.drake.brv / DefaultDecoration / setDrawable setDrawable \u00b6 fun setDrawable(drawable: Drawable ): Unit fun setDrawable(@DrawableRes drawableRes: Int ): Unit \u5c06\u56fe\u7247\u4f5c\u4e3a\u5206\u5272\u7ebf, \u56fe\u7247\u5bbd\u9ad8\u5373\u5206\u5272\u7ebf\u5bbd\u9ad8","title":"Set drawable"},{"location":"api/brv/com.drake.brv/-default-decoration/set-drawable/#setdrawable","text":"fun setDrawable(drawable: Drawable ): Unit fun setDrawable(@DrawableRes drawableRes: Int ): Unit \u5c06\u56fe\u7247\u4f5c\u4e3a\u5206\u5272\u7ebf, \u56fe\u7247\u5bbd\u9ad8\u5373\u5206\u5272\u7ebf\u5bbd\u9ad8","title":"setDrawable"},{"location":"api/brv/com.drake.brv/-default-decoration/set-margin/","text":"brv / com.drake.brv / DefaultDecoration / setMargin setMargin \u00b6 fun setMargin(start: Int = 0, end: Int = 0, dp: Boolean = true): Unit \u8bbe\u7f6e\u5206\u9694\u5de6\u53f3\u6216\u4e0a\u4e0b\u95f4\u8ddd, \u4f9d\u636e\u5206\u5272\u7ebf\u4e3a\u5782\u76f4\u6216\u8005\u6c34\u5e73\u51b3\u5b9a\u5177\u4f53\u65b9\u5411\u95f4\u8ddd Parameters \u00b6 start - \u5206\u5272\u7ebf\u4e3a\u6c34\u5e73\u5219\u662f\u5de6\u95f4\u8ddd, \u5782\u76f4\u5219\u4e3a\u4e0a\u95f4\u8ddd end - \u5206\u5272\u7ebf\u4e3a\u6c34\u5e73\u5219\u662f\u53f3\u95f4\u8ddd, \u5782\u76f4\u5219\u4e3a\u4e0b\u95f4\u8ddd dp - \u662f\u5426\u5355\u4f4d\u4e3adp, \u9ed8\u8ba4\u4e3atrue\u5373\u4f7f\u7528dp\u5355\u4f4d","title":"Set margin"},{"location":"api/brv/com.drake.brv/-default-decoration/set-margin/#setmargin","text":"fun setMargin(start: Int = 0, end: Int = 0, dp: Boolean = true): Unit \u8bbe\u7f6e\u5206\u9694\u5de6\u53f3\u6216\u4e0a\u4e0b\u95f4\u8ddd, \u4f9d\u636e\u5206\u5272\u7ebf\u4e3a\u5782\u76f4\u6216\u8005\u6c34\u5e73\u51b3\u5b9a\u5177\u4f53\u65b9\u5411\u95f4\u8ddd","title":"setMargin"},{"location":"api/brv/com.drake.brv/-default-decoration/set-margin/#parameters","text":"start - \u5206\u5272\u7ebf\u4e3a\u6c34\u5e73\u5219\u662f\u5de6\u95f4\u8ddd, \u5782\u76f4\u5219\u4e3a\u4e0a\u95f4\u8ddd end - \u5206\u5272\u7ebf\u4e3a\u6c34\u5e73\u5219\u662f\u53f3\u95f4\u8ddd, \u5782\u76f4\u5219\u4e3a\u4e0b\u95f4\u8ddd dp - \u662f\u5426\u5355\u4f4d\u4e3adp, \u9ed8\u8ba4\u4e3atrue\u5373\u4f7f\u7528dp\u5355\u4f4d","title":"Parameters"},{"location":"api/brv/com.drake.brv/-default-decoration/start-visible/","text":"brv / com.drake.brv / DefaultDecoration / startVisible startVisible \u00b6 var startVisible: Boolean \u7b2c\u4e00\u4e2a\u6761\u76ee\u4e4b\u524d\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf, \u5f53\u5904\u4e8e DividerOrientation.GRID \u65f6\u6c34\u5e73\u65b9\u5411\u9876\u7aef\u548c\u672b\u7aef\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf","title":"Start visible"},{"location":"api/brv/com.drake.brv/-default-decoration/start-visible/#startvisible","text":"var startVisible: Boolean \u7b2c\u4e00\u4e2a\u6761\u76ee\u4e4b\u524d\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf, \u5f53\u5904\u4e8e DividerOrientation.GRID \u65f6\u6c34\u5e73\u65b9\u5411\u9876\u7aef\u548c\u672b\u7aef\u662f\u5426\u663e\u793a\u5206\u5272\u7ebf","title":"startVisible"},{"location":"api/brv/com.drake.brv/-default-decoration/type-pool/","text":"brv / com.drake.brv / DefaultDecoration / typePool typePool \u00b6 var typePool: MutableList < Int >? \u96c6\u5408\u5185\u5305\u542b\u7684\u7c7b\u578b\u624d\u663e\u793a\u5206\u5272\u7ebf Property \u00b6 typePool - \u96c6\u5408\u5185\u5305\u542b\u7684\u7c7b\u578b\u624d\u663e\u793a\u5206\u5272\u7ebf","title":"Type pool"},{"location":"api/brv/com.drake.brv/-default-decoration/type-pool/#typepool","text":"var typePool: MutableList < Int >? \u96c6\u5408\u5185\u5305\u542b\u7684\u7c7b\u578b\u624d\u663e\u793a\u5206\u5272\u7ebf","title":"typePool"},{"location":"api/brv/com.drake.brv/-default-decoration/type-pool/#property","text":"typePool - \u96c6\u5408\u5185\u5305\u542b\u7684\u7c7b\u578b\u624d\u663e\u793a\u5206\u5272\u7ebf","title":"Property"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/","text":"brv / com.drake.brv / DefaultDecoration / Edge Edge \u00b6 data class Edge \u5217\u8868\u6761\u76ee\u662f\u5426\u9760\u8fd1\u8fb9\u7f18\u7684\u7ed3\u7b97\u7ed3\u679c Parameters \u00b6 left - \u662f\u5426\u9760\u5de6 right - \u662f\u5426\u9760\u5de6 top - \u662f\u5426\u9760\u9876 bottom - \u662f\u5426\u9760\u5e95 Constructors \u00b6 Name Summary <init> \u5217\u8868\u6761\u76ee\u662f\u5426\u9760\u8fd1\u8fb9\u7f18\u7684\u7ed3\u7b97\u7ed3\u679c Edge(left: Boolean = false, top: Boolean = false, right: Boolean = false, bottom: Boolean = false) Properties \u00b6 Name Summary bottom \u662f\u5426\u9760\u5e95 var bottom: Boolean left \u662f\u5426\u9760\u5de6 var left: Boolean right \u662f\u5426\u9760\u5de6 var right: Boolean top \u662f\u5426\u9760\u9876 var top: Boolean Companion Object Functions \u00b6 Name Summary computeEdge \u8ba1\u7b97\u6307\u5b9a\u6761\u76ee\u7684\u8fb9\u7f18\u4f4d\u7f6e fun computeEdge(position: Int , layoutManager: LayoutManager): Edge","title":"Index"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/#edge","text":"data class Edge \u5217\u8868\u6761\u76ee\u662f\u5426\u9760\u8fd1\u8fb9\u7f18\u7684\u7ed3\u7b97\u7ed3\u679c","title":"Edge"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/#parameters","text":"left - \u662f\u5426\u9760\u5de6 right - \u662f\u5426\u9760\u5de6 top - \u662f\u5426\u9760\u9876 bottom - \u662f\u5426\u9760\u5e95","title":"Parameters"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/#constructors","text":"Name Summary <init> \u5217\u8868\u6761\u76ee\u662f\u5426\u9760\u8fd1\u8fb9\u7f18\u7684\u7ed3\u7b97\u7ed3\u679c Edge(left: Boolean = false, top: Boolean = false, right: Boolean = false, bottom: Boolean = false)","title":"Constructors"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/#properties","text":"Name Summary bottom \u662f\u5426\u9760\u5e95 var bottom: Boolean left \u662f\u5426\u9760\u5de6 var left: Boolean right \u662f\u5426\u9760\u5de6 var right: Boolean top \u662f\u5426\u9760\u9876 var top: Boolean","title":"Properties"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/#companion-object-functions","text":"Name Summary computeEdge \u8ba1\u7b97\u6307\u5b9a\u6761\u76ee\u7684\u8fb9\u7f18\u4f4d\u7f6e fun computeEdge(position: Int , layoutManager: LayoutManager): Edge","title":"Companion Object Functions"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/-init-/","text":"brv / com.drake.brv / DefaultDecoration / Edge / <init> <init> \u00b6 Edge(left: Boolean = false, top: Boolean = false, right: Boolean = false, bottom: Boolean = false) \u5217\u8868\u6761\u76ee\u662f\u5426\u9760\u8fd1\u8fb9\u7f18\u7684\u7ed3\u7b97\u7ed3\u679c Parameters \u00b6 left - \u662f\u5426\u9760\u5de6 right - \u662f\u5426\u9760\u5de6 top - \u662f\u5426\u9760\u9876 bottom - \u662f\u5426\u9760\u5e95","title":" init "},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/-init-/#init","text":"Edge(left: Boolean = false, top: Boolean = false, right: Boolean = false, bottom: Boolean = false) \u5217\u8868\u6761\u76ee\u662f\u5426\u9760\u8fd1\u8fb9\u7f18\u7684\u7ed3\u7b97\u7ed3\u679c","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/-init-/#parameters","text":"left - \u662f\u5426\u9760\u5de6 right - \u662f\u5426\u9760\u5de6 top - \u662f\u5426\u9760\u9876 bottom - \u662f\u5426\u9760\u5e95","title":"Parameters"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/bottom/","text":"brv / com.drake.brv / DefaultDecoration / Edge / bottom bottom \u00b6 var bottom: Boolean \u662f\u5426\u9760\u5e95","title":"Bottom"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/bottom/#bottom","text":"var bottom: Boolean \u662f\u5426\u9760\u5e95","title":"bottom"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/compute-edge/","text":"brv / com.drake.brv / DefaultDecoration / Edge / computeEdge computeEdge \u00b6 fun computeEdge(position: Int , layoutManager: LayoutManager): Edge \u8ba1\u7b97\u6307\u5b9a\u6761\u76ee\u7684\u8fb9\u7f18\u4f4d\u7f6e Parameters \u00b6 position - \u6307\u5b9a\u8ba1\u7b97\u7684Item\u7d22\u5f15 layoutManager - \u5f53\u524d\u5217\u8868\u7684LayoutManager","title":"Compute edge"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/compute-edge/#computeedge","text":"fun computeEdge(position: Int , layoutManager: LayoutManager): Edge \u8ba1\u7b97\u6307\u5b9a\u6761\u76ee\u7684\u8fb9\u7f18\u4f4d\u7f6e","title":"computeEdge"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/compute-edge/#parameters","text":"position - \u6307\u5b9a\u8ba1\u7b97\u7684Item\u7d22\u5f15 layoutManager - \u5f53\u524d\u5217\u8868\u7684LayoutManager","title":"Parameters"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/left/","text":"brv / com.drake.brv / DefaultDecoration / Edge / left left \u00b6 var left: Boolean \u662f\u5426\u9760\u5de6","title":"Left"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/left/#left","text":"var left: Boolean \u662f\u5426\u9760\u5de6","title":"left"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/right/","text":"brv / com.drake.brv / DefaultDecoration / Edge / right right \u00b6 var right: Boolean \u662f\u5426\u9760\u5de6","title":"Right"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/right/#right","text":"var right: Boolean \u662f\u5426\u9760\u5de6","title":"right"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/top/","text":"brv / com.drake.brv / DefaultDecoration / Edge / top top \u00b6 var top: Boolean \u662f\u5426\u9760\u9876","title":"Top"},{"location":"api/brv/com.drake.brv/-default-decoration/-edge/top/#top","text":"var top: Boolean \u662f\u5426\u9760\u9876","title":"top"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/","text":"brv / com.drake.brv / PageRefreshLayout PageRefreshLayout \u00b6 open class PageRefreshLayout : SmartRefreshLayout, OnRefreshLoadMoreListener \u6269\u5c55SmartRefreshLayout\u7684\u529f\u80fd \u529f\u80fd: \u4e0b\u62c9\u5237\u65b0u \u4e0a\u62c9\u52a0\u8f7d \u62c9\u53d6 \u9884\u52a0\u8f7d \u9884\u62c9\u53d6 \u81ea\u52a8\u5206\u9875 \u6dfb\u52a0\u6570\u636e \u7f3a\u7701\u72b6\u6001\u9875 Constructors \u00b6 Name Summary <init> PageRefreshLayout(context: Context ) PageRefreshLayout(context: Context , attrs: AttributeSet ?) Properties \u00b6 Name Summary contentView var contentView: View ? emptyLayout var emptyLayout: Int errorLayout var errorLayout: Int index var index: Int loaded \u6807\u8bb0\u662f\u5426\u5df2\u52a0\u8f7d, \u5df2\u52a0\u8f7d\u540e\u5c06\u4e0d\u518d\u663e\u793a\u9519\u8bef\u9875\u9762 var loaded: Boolean loadingLayout var loadingLayout: Int onBindViewHolderListener var onBindViewHolderListener: OnBindViewHolderListener preloadIndex \u6307\u5b9a\u5217\u8868\u4f4d\u7f6e(\u5012\u5e8f\u7d22\u5f15)\u663e\u793a\u81ea\u52a8\u9884\u52a0\u8f7d var preloadIndex: Int stateEnabled \u542f\u7528\u7f3a\u7701\u9875 var stateEnabled: Boolean stateLayout var stateLayout: StateLayout? upFetchEnabled var upFetchEnabled: Boolean Functions \u00b6 Name Summary addData \u81ea\u52a8\u5206\u9875\u81ea\u52a8\u52a0\u8f7d\u6570\u636e, \u81ea\u52a8\u5224\u65ad\u5f53\u524d\u5c5e\u4e8e\u4e0b\u62c9\u5237\u65b0\u8fd8\u662f\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a fun addData(data: List < Any ?>?, adapter: BindingAdapter ? = null, isEmpty: () -> Boolean = { data.isNullOrEmpty() }, hasMore: BindingAdapter .() -> Boolean = { true }): Unit finish \u5173\u95ed\u4e0b\u62c9\u52a0\u8f7d onAttachedToWindow open fun onAttachedToWindow(): Unit onEmpty fun onEmpty(block: View .( Any ?) -> Unit ): PageRefreshLayout onError fun onError(block: View .( Any ?) -> Unit ): PageRefreshLayout onFinishInflate open fun onFinishInflate(): Unit onLoading fun onLoading(block: View .( Any ?) -> Unit ): PageRefreshLayout onLoadMore fun onLoadMore(block: PageRefreshLayout .() -> Unit ): PageRefreshLayout open fun onLoadMore(refreshLayout: RefreshLayout): Unit onRefresh fun onRefresh(block: PageRefreshLayout .() -> Unit ): PageRefreshLayout open fun onRefresh(refreshLayout: RefreshLayout): Unit refresh \u89e6\u53d1\u5237\u65b0 (\u4e0d\u5305\u542b\u4e0b\u62c9\u52a8\u753b) fun refresh(): Unit setEnableLoadMore open fun setEnableLoadMore(enabled: Boolean ): RefreshLayout setEnableRefresh open fun setEnableRefresh(enabled: Boolean ): RefreshLayout setOnMultiStateListener \u76d1\u542c\u591a\u79cd\u72b6\u6001, \u4e0d\u4f1a\u62e6\u622a\u5df2\u6709\u7684\u5237\u65b0(onRefresh)\u548c\u52a0\u8f7d\u751f\u547d\u5468\u671f(onLoadMore) fun setOnMultiStateListener(onMultiStateListener: OnMultiStateListener ): PageRefreshLayout setRetryIds \u8bbe\u7f6e errorLayout \u4e2d\u7684\u89c6\u56fe\u70b9\u51fb\u540e\u4f1a\u6267\u884c StateLayout.showLoading \u5e76\u4e14500ms\u5185\u9632\u91cd\u590d\u70b9\u51fb fun setRetryIds(vararg ids: Int ): PageRefreshLayout showContent fun showContent(hasMore: Boolean = false): Unit showEmpty fun showEmpty(tag: Any ? = null): Unit showError \u52a0\u8f7d\u6210\u529f\u4ee5\u540e\u4e0d\u4f1a\u518d\u663e\u793a\u9519\u8bef\u9875\u9762, \u9664\u975e\u6307\u5b9a\u5f3a\u5236\u663e\u793a fun showError(tag: Any ? = null, force: Boolean = false): Unit showLoading fun showLoading(tag: Any ? = null, refresh: Boolean = true): Unit trigger \u7528\u4e8e\u7f51\u7edc\u8bf7\u6c42\u7684\u89e6\u53d1\u5668, \u4f5c\u7528\u4e8e\u6682\u505c/\u7ee7\u7eed\u7f3a\u7701\u72b6\u6001\u53d8\u5316 \u5f00\u53d1\u8005\u65e0\u9700\u5173\u5fc3\u8be5\u51fd\u6570 fun trigger(): Boolean Companion Object Properties \u00b6 Name Summary preloadIndex var preloadIndex: Int startIndex var startIndex: Int","title":"Index"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/#pagerefreshlayout","text":"open class PageRefreshLayout : SmartRefreshLayout, OnRefreshLoadMoreListener \u6269\u5c55SmartRefreshLayout\u7684\u529f\u80fd \u529f\u80fd: \u4e0b\u62c9\u5237\u65b0u \u4e0a\u62c9\u52a0\u8f7d \u62c9\u53d6 \u9884\u52a0\u8f7d \u9884\u62c9\u53d6 \u81ea\u52a8\u5206\u9875 \u6dfb\u52a0\u6570\u636e \u7f3a\u7701\u72b6\u6001\u9875","title":"PageRefreshLayout"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/#constructors","text":"Name Summary <init> PageRefreshLayout(context: Context ) PageRefreshLayout(context: Context , attrs: AttributeSet ?)","title":"Constructors"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/#properties","text":"Name Summary contentView var contentView: View ? emptyLayout var emptyLayout: Int errorLayout var errorLayout: Int index var index: Int loaded \u6807\u8bb0\u662f\u5426\u5df2\u52a0\u8f7d, \u5df2\u52a0\u8f7d\u540e\u5c06\u4e0d\u518d\u663e\u793a\u9519\u8bef\u9875\u9762 var loaded: Boolean loadingLayout var loadingLayout: Int onBindViewHolderListener var onBindViewHolderListener: OnBindViewHolderListener preloadIndex \u6307\u5b9a\u5217\u8868\u4f4d\u7f6e(\u5012\u5e8f\u7d22\u5f15)\u663e\u793a\u81ea\u52a8\u9884\u52a0\u8f7d var preloadIndex: Int stateEnabled \u542f\u7528\u7f3a\u7701\u9875 var stateEnabled: Boolean stateLayout var stateLayout: StateLayout? upFetchEnabled var upFetchEnabled: Boolean","title":"Properties"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/#functions","text":"Name Summary addData \u81ea\u52a8\u5206\u9875\u81ea\u52a8\u52a0\u8f7d\u6570\u636e, \u81ea\u52a8\u5224\u65ad\u5f53\u524d\u5c5e\u4e8e\u4e0b\u62c9\u5237\u65b0\u8fd8\u662f\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a fun addData(data: List < Any ?>?, adapter: BindingAdapter ? = null, isEmpty: () -> Boolean = { data.isNullOrEmpty() }, hasMore: BindingAdapter .() -> Boolean = { true }): Unit finish \u5173\u95ed\u4e0b\u62c9\u52a0\u8f7d onAttachedToWindow open fun onAttachedToWindow(): Unit onEmpty fun onEmpty(block: View .( Any ?) -> Unit ): PageRefreshLayout onError fun onError(block: View .( Any ?) -> Unit ): PageRefreshLayout onFinishInflate open fun onFinishInflate(): Unit onLoading fun onLoading(block: View .( Any ?) -> Unit ): PageRefreshLayout onLoadMore fun onLoadMore(block: PageRefreshLayout .() -> Unit ): PageRefreshLayout open fun onLoadMore(refreshLayout: RefreshLayout): Unit onRefresh fun onRefresh(block: PageRefreshLayout .() -> Unit ): PageRefreshLayout open fun onRefresh(refreshLayout: RefreshLayout): Unit refresh \u89e6\u53d1\u5237\u65b0 (\u4e0d\u5305\u542b\u4e0b\u62c9\u52a8\u753b) fun refresh(): Unit setEnableLoadMore open fun setEnableLoadMore(enabled: Boolean ): RefreshLayout setEnableRefresh open fun setEnableRefresh(enabled: Boolean ): RefreshLayout setOnMultiStateListener \u76d1\u542c\u591a\u79cd\u72b6\u6001, \u4e0d\u4f1a\u62e6\u622a\u5df2\u6709\u7684\u5237\u65b0(onRefresh)\u548c\u52a0\u8f7d\u751f\u547d\u5468\u671f(onLoadMore) fun setOnMultiStateListener(onMultiStateListener: OnMultiStateListener ): PageRefreshLayout setRetryIds \u8bbe\u7f6e errorLayout \u4e2d\u7684\u89c6\u56fe\u70b9\u51fb\u540e\u4f1a\u6267\u884c StateLayout.showLoading \u5e76\u4e14500ms\u5185\u9632\u91cd\u590d\u70b9\u51fb fun setRetryIds(vararg ids: Int ): PageRefreshLayout showContent fun showContent(hasMore: Boolean = false): Unit showEmpty fun showEmpty(tag: Any ? = null): Unit showError \u52a0\u8f7d\u6210\u529f\u4ee5\u540e\u4e0d\u4f1a\u518d\u663e\u793a\u9519\u8bef\u9875\u9762, \u9664\u975e\u6307\u5b9a\u5f3a\u5236\u663e\u793a fun showError(tag: Any ? = null, force: Boolean = false): Unit showLoading fun showLoading(tag: Any ? = null, refresh: Boolean = true): Unit trigger \u7528\u4e8e\u7f51\u7edc\u8bf7\u6c42\u7684\u89e6\u53d1\u5668, \u4f5c\u7528\u4e8e\u6682\u505c/\u7ee7\u7eed\u7f3a\u7701\u72b6\u6001\u53d8\u5316 \u5f00\u53d1\u8005\u65e0\u9700\u5173\u5fc3\u8be5\u51fd\u6570 fun trigger(): Boolean","title":"Functions"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/#companion-object-properties","text":"Name Summary preloadIndex var preloadIndex: Int startIndex var startIndex: Int","title":"Companion Object Properties"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/--index--/","text":"brv / com.drake.brv / PageRefreshLayout / index index \u00b6 var index: Int","title":"  index  "},{"location":"api/brv/com.drake.brv/-page-refresh-layout/--index--/#index","text":"var index: Int","title":"index"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/-init-/","text":"brv / com.drake.brv / PageRefreshLayout / <init> <init> \u00b6 PageRefreshLayout(context: Context ) PageRefreshLayout(context: Context , attrs: AttributeSet ?)","title":" init "},{"location":"api/brv/com.drake.brv/-page-refresh-layout/-init-/#init","text":"PageRefreshLayout(context: Context ) PageRefreshLayout(context: Context , attrs: AttributeSet ?)","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/add-data/","text":"brv / com.drake.brv / PageRefreshLayout / addData addData \u00b6 fun addData(data: List < Any ?>?, adapter: BindingAdapter ? = null, isEmpty: () -> Boolean = { data.isNullOrEmpty() }, hasMore: BindingAdapter .() -> Boolean = { true }): Unit \u81ea\u52a8\u5206\u9875\u81ea\u52a8\u52a0\u8f7d\u6570\u636e, \u81ea\u52a8\u5224\u65ad\u5f53\u524d\u5c5e\u4e8e\u4e0b\u62c9\u5237\u65b0\u8fd8\u662f\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a \u6b64\u51fd\u6570\u6bcf\u6b21\u8c03\u7528\u4f1a\u5bfc\u81f4 index \u9012\u589e\u6216\u8005\u4e0b\u62c9\u5237\u65b0\u4f1a\u5bfc\u81f4 index \u7b49\u4e8e startIndex Parameters \u00b6 data - \u6570\u636e\u96c6 adapter - \u5047\u8bbePageRefreshLayout\u4e0d\u80fd\u76f4\u63a5\u5305\u88f9RecyclerView, \u7136\u540e\u4e5f\u60f3\u4f7f\u7528\u81ea\u52a8\u5206\u9875, \u8bf7\u6307\u5b9a\u6b64\u53c2\u6570, \u56e0\u4e3a\u81ea\u52a8\u5206\u9875\u9700\u8981 BindingAdapter \u5b9e\u4f8b hasMore - \u5728\u51fd\u6570\u53c2\u6570\u4e2d\u8fd4\u56de\u5e03\u5c14\u7c7b\u578b\u6765\u5224\u65ad\u662f\u5426\u8fd8\u5b58\u5728\u4e0b\u4e00\u9875\u6570\u636e, \u9ed8\u8ba4\u503ctrue\u8868\u793a\u59cb\u7ec8\u5b58\u5728 isEmpty - \u8fd4\u56detrue\u8868\u793a\u6570\u636e\u4e3a\u7a7a, \u5c06\u663e\u793a\u7f3a\u7701\u9875 -> \u7a7a\u5e03\u5c40, \u9ed8\u8ba4\u4ee5 data.isNullOrEmpty \u5219\u4e3a\u7a7a","title":"Add data"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/add-data/#adddata","text":"fun addData(data: List < Any ?>?, adapter: BindingAdapter ? = null, isEmpty: () -> Boolean = { data.isNullOrEmpty() }, hasMore: BindingAdapter .() -> Boolean = { true }): Unit \u81ea\u52a8\u5206\u9875\u81ea\u52a8\u52a0\u8f7d\u6570\u636e, \u81ea\u52a8\u5224\u65ad\u5f53\u524d\u5c5e\u4e8e\u4e0b\u62c9\u5237\u65b0\u8fd8\u662f\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a \u6b64\u51fd\u6570\u6bcf\u6b21\u8c03\u7528\u4f1a\u5bfc\u81f4 index \u9012\u589e\u6216\u8005\u4e0b\u62c9\u5237\u65b0\u4f1a\u5bfc\u81f4 index \u7b49\u4e8e startIndex","title":"addData"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/add-data/#parameters","text":"data - \u6570\u636e\u96c6 adapter - \u5047\u8bbePageRefreshLayout\u4e0d\u80fd\u76f4\u63a5\u5305\u88f9RecyclerView, \u7136\u540e\u4e5f\u60f3\u4f7f\u7528\u81ea\u52a8\u5206\u9875, \u8bf7\u6307\u5b9a\u6b64\u53c2\u6570, \u56e0\u4e3a\u81ea\u52a8\u5206\u9875\u9700\u8981 BindingAdapter \u5b9e\u4f8b hasMore - \u5728\u51fd\u6570\u53c2\u6570\u4e2d\u8fd4\u56de\u5e03\u5c14\u7c7b\u578b\u6765\u5224\u65ad\u662f\u5426\u8fd8\u5b58\u5728\u4e0b\u4e00\u9875\u6570\u636e, \u9ed8\u8ba4\u503ctrue\u8868\u793a\u59cb\u7ec8\u5b58\u5728 isEmpty - \u8fd4\u56detrue\u8868\u793a\u6570\u636e\u4e3a\u7a7a, \u5c06\u663e\u793a\u7f3a\u7701\u9875 -> \u7a7a\u5e03\u5c40, \u9ed8\u8ba4\u4ee5 data.isNullOrEmpty \u5219\u4e3a\u7a7a","title":"Parameters"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/content-view/","text":"brv / com.drake.brv / PageRefreshLayout / contentView contentView \u00b6 var contentView: View ?","title":"Content view"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/content-view/#contentview","text":"var contentView: View ?","title":"contentView"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/empty-layout/","text":"brv / com.drake.brv / PageRefreshLayout / emptyLayout emptyLayout \u00b6 var emptyLayout: Int","title":"Empty layout"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/empty-layout/#emptylayout","text":"var emptyLayout: Int","title":"emptyLayout"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/error-layout/","text":"brv / com.drake.brv / PageRefreshLayout / errorLayout errorLayout \u00b6 var errorLayout: Int","title":"Error layout"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/error-layout/#errorlayout","text":"var errorLayout: Int","title":"errorLayout"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/finish/","text":"brv / com.drake.brv / PageRefreshLayout / finish finish \u00b6 fun finish(success: Boolean = true, hasMore: Boolean = false): Unit \u5173\u95ed\u4e0b\u62c9\u52a0\u8f7d|\u4e0a\u62c9\u5237\u65b0 Parameters \u00b6 success - Boolean \u5237\u65b0/\u52a0\u8f7d\u662f\u5426\u6210\u529f hasMore - \u662f\u5426\u5b58\u5728\u5206\u9875, \u5982\u679c\u4e0d\u5b58\u5728\u5206\u9875\u5f53\u5e03\u5c40\u4e0d\u6ee1\u4e00\u9875\u65f6\u4f1a\u5173\u95edFooter","title":"Finish"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/finish/#finish","text":"fun finish(success: Boolean = true, hasMore: Boolean = false): Unit \u5173\u95ed\u4e0b\u62c9\u52a0\u8f7d|\u4e0a\u62c9\u5237\u65b0","title":"finish"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/finish/#parameters","text":"success - Boolean \u5237\u65b0/\u52a0\u8f7d\u662f\u5426\u6210\u529f hasMore - \u662f\u5426\u5b58\u5728\u5206\u9875, \u5982\u679c\u4e0d\u5b58\u5728\u5206\u9875\u5f53\u5e03\u5c40\u4e0d\u6ee1\u4e00\u9875\u65f6\u4f1a\u5173\u95edFooter","title":"Parameters"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/loaded/","text":"brv / com.drake.brv / PageRefreshLayout / loaded loaded \u00b6 var loaded: Boolean \u6807\u8bb0\u662f\u5426\u5df2\u52a0\u8f7d, \u5df2\u52a0\u8f7d\u540e\u5c06\u4e0d\u518d\u663e\u793a\u9519\u8bef\u9875\u9762","title":"Loaded"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/loaded/#loaded","text":"var loaded: Boolean \u6807\u8bb0\u662f\u5426\u5df2\u52a0\u8f7d, \u5df2\u52a0\u8f7d\u540e\u5c06\u4e0d\u518d\u663e\u793a\u9519\u8bef\u9875\u9762","title":"loaded"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/loading-layout/","text":"brv / com.drake.brv / PageRefreshLayout / loadingLayout loadingLayout \u00b6 var loadingLayout: Int","title":"Loading layout"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/loading-layout/#loadinglayout","text":"var loadingLayout: Int","title":"loadingLayout"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-attached-to-window/","text":"brv / com.drake.brv / PageRefreshLayout / onAttachedToWindow onAttachedToWindow \u00b6 protected open fun onAttachedToWindow(): Unit","title":"On attached to window"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-attached-to-window/#onattachedtowindow","text":"protected open fun onAttachedToWindow(): Unit","title":"onAttachedToWindow"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-bind-view-holder-listener/","text":"brv / com.drake.brv / PageRefreshLayout / onBindViewHolderListener onBindViewHolderListener \u00b6 var onBindViewHolderListener: OnBindViewHolderListener","title":"On bind view holder listener"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-bind-view-holder-listener/#onbindviewholderlistener","text":"var onBindViewHolderListener: OnBindViewHolderListener","title":"onBindViewHolderListener"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-empty/","text":"brv / com.drake.brv / PageRefreshLayout / onEmpty onEmpty \u00b6 fun onEmpty(block: View .( Any ?) -> Unit ): PageRefreshLayout","title":"On empty"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-empty/#onempty","text":"fun onEmpty(block: View .( Any ?) -> Unit ): PageRefreshLayout","title":"onEmpty"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-error/","text":"brv / com.drake.brv / PageRefreshLayout / onError onError \u00b6 fun onError(block: View .( Any ?) -> Unit ): PageRefreshLayout","title":"On error"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-error/#onerror","text":"fun onError(block: View .( Any ?) -> Unit ): PageRefreshLayout","title":"onError"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-finish-inflate/","text":"brv / com.drake.brv / PageRefreshLayout / onFinishInflate onFinishInflate \u00b6 protected open fun onFinishInflate(): Unit","title":"On finish inflate"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-finish-inflate/#onfinishinflate","text":"protected open fun onFinishInflate(): Unit","title":"onFinishInflate"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-load-more/","text":"brv / com.drake.brv / PageRefreshLayout / onLoadMore onLoadMore \u00b6 fun onLoadMore(block: PageRefreshLayout .() -> Unit ): PageRefreshLayout open fun onLoadMore(refreshLayout: RefreshLayout): Unit","title":"On load more"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-load-more/#onloadmore","text":"fun onLoadMore(block: PageRefreshLayout .() -> Unit ): PageRefreshLayout open fun onLoadMore(refreshLayout: RefreshLayout): Unit","title":"onLoadMore"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-loading/","text":"brv / com.drake.brv / PageRefreshLayout / onLoading onLoading \u00b6 fun onLoading(block: View .( Any ?) -> Unit ): PageRefreshLayout","title":"On loading"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-loading/#onloading","text":"fun onLoading(block: View .( Any ?) -> Unit ): PageRefreshLayout","title":"onLoading"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-refresh/","text":"brv / com.drake.brv / PageRefreshLayout / onRefresh onRefresh \u00b6 fun onRefresh(block: PageRefreshLayout .() -> Unit ): PageRefreshLayout open fun onRefresh(refreshLayout: RefreshLayout): Unit","title":"On refresh"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/on-refresh/#onrefresh","text":"fun onRefresh(block: PageRefreshLayout .() -> Unit ): PageRefreshLayout open fun onRefresh(refreshLayout: RefreshLayout): Unit","title":"onRefresh"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/preload-index/","text":"brv / com.drake.brv / PageRefreshLayout / preloadIndex preloadIndex \u00b6 var preloadIndex: Int \u6307\u5b9a\u5217\u8868\u4f4d\u7f6e(\u5012\u5e8f\u7d22\u5f15)\u663e\u793a\u81ea\u52a8\u9884\u52a0\u8f7d var preloadIndex: Int","title":"Preload index"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/preload-index/#preloadindex","text":"var preloadIndex: Int \u6307\u5b9a\u5217\u8868\u4f4d\u7f6e(\u5012\u5e8f\u7d22\u5f15)\u663e\u793a\u81ea\u52a8\u9884\u52a0\u8f7d var preloadIndex: Int","title":"preloadIndex"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/refresh/","text":"brv / com.drake.brv / PageRefreshLayout / refresh refresh \u00b6 fun refresh(): Unit \u89e6\u53d1\u5237\u65b0 (\u4e0d\u5305\u542b\u4e0b\u62c9\u52a8\u753b)","title":"Refresh"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/refresh/#refresh","text":"fun refresh(): Unit \u89e6\u53d1\u5237\u65b0 (\u4e0d\u5305\u542b\u4e0b\u62c9\u52a8\u753b)","title":"refresh"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/set-enable-load-more/","text":"brv / com.drake.brv / PageRefreshLayout / setEnableLoadMore setEnableLoadMore \u00b6 open fun setEnableLoadMore(enabled: Boolean ): RefreshLayout","title":"Set enable load more"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/set-enable-load-more/#setenableloadmore","text":"open fun setEnableLoadMore(enabled: Boolean ): RefreshLayout","title":"setEnableLoadMore"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/set-enable-refresh/","text":"brv / com.drake.brv / PageRefreshLayout / setEnableRefresh setEnableRefresh \u00b6 open fun setEnableRefresh(enabled: Boolean ): RefreshLayout","title":"Set enable refresh"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/set-enable-refresh/#setenablerefresh","text":"open fun setEnableRefresh(enabled: Boolean ): RefreshLayout","title":"setEnableRefresh"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/set-on-multi-state-listener/","text":"brv / com.drake.brv / PageRefreshLayout / setOnMultiStateListener setOnMultiStateListener \u00b6 fun setOnMultiStateListener(onMultiStateListener: OnMultiStateListener ): PageRefreshLayout \u76d1\u542c\u591a\u79cd\u72b6\u6001, \u4e0d\u4f1a\u62e6\u622a\u5df2\u6709\u7684\u5237\u65b0(onRefresh)\u548c\u52a0\u8f7d\u751f\u547d\u5468\u671f(onLoadMore) Parameters \u00b6 onMultiStateListener - OnMultiStateListener Return PageRefreshLayout","title":"Set on multi state listener"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/set-on-multi-state-listener/#setonmultistatelistener","text":"fun setOnMultiStateListener(onMultiStateListener: OnMultiStateListener ): PageRefreshLayout \u76d1\u542c\u591a\u79cd\u72b6\u6001, \u4e0d\u4f1a\u62e6\u622a\u5df2\u6709\u7684\u5237\u65b0(onRefresh)\u548c\u52a0\u8f7d\u751f\u547d\u5468\u671f(onLoadMore)","title":"setOnMultiStateListener"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/set-on-multi-state-listener/#parameters","text":"onMultiStateListener - OnMultiStateListener Return PageRefreshLayout","title":"Parameters"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/set-retry-ids/","text":"brv / com.drake.brv / PageRefreshLayout / setRetryIds setRetryIds \u00b6 fun setRetryIds(@IdRes vararg ids: Int ): PageRefreshLayout \u8bbe\u7f6e errorLayout \u4e2d\u7684\u89c6\u56fe\u70b9\u51fb\u540e\u4f1a\u6267\u884c StateLayout.showLoading \u5e76\u4e14500ms\u5185\u9632\u91cd\u590d\u70b9\u51fb","title":"Set retry ids"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/set-retry-ids/#setretryids","text":"fun setRetryIds(@IdRes vararg ids: Int ): PageRefreshLayout \u8bbe\u7f6e errorLayout \u4e2d\u7684\u89c6\u56fe\u70b9\u51fb\u540e\u4f1a\u6267\u884c StateLayout.showLoading \u5e76\u4e14500ms\u5185\u9632\u91cd\u590d\u70b9\u51fb","title":"setRetryIds"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/show-content/","text":"brv / com.drake.brv / PageRefreshLayout / showContent showContent \u00b6 fun showContent(hasMore: Boolean = false): Unit","title":"Show content"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/show-content/#showcontent","text":"fun showContent(hasMore: Boolean = false): Unit","title":"showContent"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/show-empty/","text":"brv / com.drake.brv / PageRefreshLayout / showEmpty showEmpty \u00b6 fun showEmpty(tag: Any ? = null): Unit","title":"Show empty"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/show-empty/#showempty","text":"fun showEmpty(tag: Any ? = null): Unit","title":"showEmpty"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/show-error/","text":"brv / com.drake.brv / PageRefreshLayout / showError showError \u00b6 fun showError(tag: Any ? = null, force: Boolean = false): Unit \u52a0\u8f7d\u6210\u529f\u4ee5\u540e\u4e0d\u4f1a\u518d\u663e\u793a\u9519\u8bef\u9875\u9762, \u9664\u975e\u6307\u5b9a\u5f3a\u5236\u663e\u793a Parameters \u00b6 force - \u5f3a\u5236\u663e\u793a\u9519\u8bef\u9875\u9762","title":"Show error"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/show-error/#showerror","text":"fun showError(tag: Any ? = null, force: Boolean = false): Unit \u52a0\u8f7d\u6210\u529f\u4ee5\u540e\u4e0d\u4f1a\u518d\u663e\u793a\u9519\u8bef\u9875\u9762, \u9664\u975e\u6307\u5b9a\u5f3a\u5236\u663e\u793a","title":"showError"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/show-error/#parameters","text":"force - \u5f3a\u5236\u663e\u793a\u9519\u8bef\u9875\u9762","title":"Parameters"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/show-loading/","text":"brv / com.drake.brv / PageRefreshLayout / showLoading showLoading \u00b6 fun showLoading(tag: Any ? = null, refresh: Boolean = true): Unit","title":"Show loading"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/show-loading/#showloading","text":"fun showLoading(tag: Any ? = null, refresh: Boolean = true): Unit","title":"showLoading"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/start-index/","text":"brv / com.drake.brv / PageRefreshLayout / startIndex startIndex \u00b6 var startIndex: Int","title":"Start index"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/start-index/#startindex","text":"var startIndex: Int","title":"startIndex"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/state-enabled/","text":"brv / com.drake.brv / PageRefreshLayout / stateEnabled stateEnabled \u00b6 var stateEnabled: Boolean \u542f\u7528\u7f3a\u7701\u9875","title":"State enabled"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/state-enabled/#stateenabled","text":"var stateEnabled: Boolean \u542f\u7528\u7f3a\u7701\u9875","title":"stateEnabled"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/state-layout/","text":"brv / com.drake.brv / PageRefreshLayout / stateLayout stateLayout \u00b6 var stateLayout: StateLayout?","title":"State layout"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/state-layout/#statelayout","text":"var stateLayout: StateLayout?","title":"stateLayout"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/trigger/","text":"brv / com.drake.brv / PageRefreshLayout / trigger trigger \u00b6 fun trigger(): Boolean \u7528\u4e8e\u7f51\u7edc\u8bf7\u6c42\u7684\u89e6\u53d1\u5668, \u4f5c\u7528\u4e8e\u6682\u505c/\u7ee7\u7eed\u7f3a\u7701\u72b6\u6001\u53d8\u5316 \u5f00\u53d1\u8005\u65e0\u9700\u5173\u5fc3\u8be5\u51fd\u6570","title":"Trigger"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/trigger/#trigger","text":"fun trigger(): Boolean \u7528\u4e8e\u7f51\u7edc\u8bf7\u6c42\u7684\u89e6\u53d1\u5668, \u4f5c\u7528\u4e8e\u6682\u505c/\u7ee7\u7eed\u7f3a\u7701\u72b6\u6001\u53d8\u5316 \u5f00\u53d1\u8005\u65e0\u9700\u5173\u5fc3\u8be5\u51fd\u6570","title":"trigger"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/up-fetch-enabled/","text":"brv / com.drake.brv / PageRefreshLayout / upFetchEnabled upFetchEnabled \u00b6 var upFetchEnabled: Boolean","title":"Up fetch enabled"},{"location":"api/brv/com.drake.brv/-page-refresh-layout/up-fetch-enabled/#upfetchenabled","text":"var upFetchEnabled: Boolean","title":"upFetchEnabled"},{"location":"api/brv/com.drake.brv.animation/","text":"brv / com.drake.brv.animation Package com.drake.brv.animation \u00b6 Types \u00b6 Name Summary AlphaItemAnimation class AlphaItemAnimation : ItemAnimation ItemAnimation interface ItemAnimation ScaleItemAnimation class ScaleItemAnimation : ItemAnimation SlideBottomItemAnimation class SlideBottomItemAnimation : ItemAnimation SlideLeftItemAnimation class SlideLeftItemAnimation : ItemAnimation SlideRightItemAnimation class SlideRightItemAnimation : ItemAnimation","title":"Index"},{"location":"api/brv/com.drake.brv.animation/#package-comdrakebrvanimation","text":"","title":"Package com.drake.brv.animation"},{"location":"api/brv/com.drake.brv.animation/#types","text":"Name Summary AlphaItemAnimation class AlphaItemAnimation : ItemAnimation ItemAnimation interface ItemAnimation ScaleItemAnimation class ScaleItemAnimation : ItemAnimation SlideBottomItemAnimation class SlideBottomItemAnimation : ItemAnimation SlideLeftItemAnimation class SlideLeftItemAnimation : ItemAnimation SlideRightItemAnimation class SlideRightItemAnimation : ItemAnimation","title":"Types"},{"location":"api/brv/com.drake.brv.animation/-alpha-item-animation/","text":"brv / com.drake.brv.animation / AlphaItemAnimation AlphaItemAnimation \u00b6 class AlphaItemAnimation : ItemAnimation Constructors \u00b6 Name Summary <init> AlphaItemAnimation(mFrom: Float = DEFAULT_ALPHA_FROM) Functions \u00b6 Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b fun onItemEnterAnimation(view: View ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.animation/-alpha-item-animation/#alphaitemanimation","text":"class AlphaItemAnimation : ItemAnimation","title":"AlphaItemAnimation"},{"location":"api/brv/com.drake.brv.animation/-alpha-item-animation/#constructors","text":"Name Summary <init> AlphaItemAnimation(mFrom: Float = DEFAULT_ALPHA_FROM)","title":"Constructors"},{"location":"api/brv/com.drake.brv.animation/-alpha-item-animation/#functions","text":"Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b fun onItemEnterAnimation(view: View ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.animation/-alpha-item-animation/-init-/","text":"brv / com.drake.brv.animation / AlphaItemAnimation / <init> <init> \u00b6 AlphaItemAnimation(mFrom: Float = DEFAULT_ALPHA_FROM)","title":" init "},{"location":"api/brv/com.drake.brv.animation/-alpha-item-animation/-init-/#init","text":"AlphaItemAnimation(mFrom: Float = DEFAULT_ALPHA_FROM)","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.animation/-alpha-item-animation/on-item-enter-animation/","text":"brv / com.drake.brv.animation / AlphaItemAnimation / onItemEnterAnimation onItemEnterAnimation \u00b6 fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"On item enter animation"},{"location":"api/brv/com.drake.brv.animation/-alpha-item-animation/on-item-enter-animation/#onitementeranimation","text":"fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"onItemEnterAnimation"},{"location":"api/brv/com.drake.brv.animation/-item-animation/","text":"brv / com.drake.brv.animation / ItemAnimation ItemAnimation \u00b6 interface ItemAnimation Functions \u00b6 Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b abstract fun onItemEnterAnimation(view: View ): Unit Inheritors \u00b6 Name Summary AlphaItemAnimation class AlphaItemAnimation : ItemAnimation ScaleItemAnimation class ScaleItemAnimation : ItemAnimation SlideBottomItemAnimation class SlideBottomItemAnimation : ItemAnimation SlideLeftItemAnimation class SlideLeftItemAnimation : ItemAnimation SlideRightItemAnimation class SlideRightItemAnimation : ItemAnimation","title":"Index"},{"location":"api/brv/com.drake.brv.animation/-item-animation/#itemanimation","text":"interface ItemAnimation","title":"ItemAnimation"},{"location":"api/brv/com.drake.brv.animation/-item-animation/#functions","text":"Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b abstract fun onItemEnterAnimation(view: View ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.animation/-item-animation/#inheritors","text":"Name Summary AlphaItemAnimation class AlphaItemAnimation : ItemAnimation ScaleItemAnimation class ScaleItemAnimation : ItemAnimation SlideBottomItemAnimation class SlideBottomItemAnimation : ItemAnimation SlideLeftItemAnimation class SlideLeftItemAnimation : ItemAnimation SlideRightItemAnimation class SlideRightItemAnimation : ItemAnimation","title":"Inheritors"},{"location":"api/brv/com.drake.brv.animation/-item-animation/on-item-enter-animation/","text":"brv / com.drake.brv.animation / ItemAnimation / onItemEnterAnimation onItemEnterAnimation \u00b6 abstract fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"On item enter animation"},{"location":"api/brv/com.drake.brv.animation/-item-animation/on-item-enter-animation/#onitementeranimation","text":"abstract fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"onItemEnterAnimation"},{"location":"api/brv/com.drake.brv.animation/-scale-item-animation/","text":"brv / com.drake.brv.animation / ScaleItemAnimation ScaleItemAnimation \u00b6 class ScaleItemAnimation : ItemAnimation Constructors \u00b6 Name Summary <init> ScaleItemAnimation(mFrom: Float = DEFAULT_SCALE_FROM) Functions \u00b6 Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b fun onItemEnterAnimation(view: View ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.animation/-scale-item-animation/#scaleitemanimation","text":"class ScaleItemAnimation : ItemAnimation","title":"ScaleItemAnimation"},{"location":"api/brv/com.drake.brv.animation/-scale-item-animation/#constructors","text":"Name Summary <init> ScaleItemAnimation(mFrom: Float = DEFAULT_SCALE_FROM)","title":"Constructors"},{"location":"api/brv/com.drake.brv.animation/-scale-item-animation/#functions","text":"Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b fun onItemEnterAnimation(view: View ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.animation/-scale-item-animation/-init-/","text":"brv / com.drake.brv.animation / ScaleItemAnimation / <init> <init> \u00b6 ScaleItemAnimation(mFrom: Float = DEFAULT_SCALE_FROM)","title":" init "},{"location":"api/brv/com.drake.brv.animation/-scale-item-animation/-init-/#init","text":"ScaleItemAnimation(mFrom: Float = DEFAULT_SCALE_FROM)","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.animation/-scale-item-animation/on-item-enter-animation/","text":"brv / com.drake.brv.animation / ScaleItemAnimation / onItemEnterAnimation onItemEnterAnimation \u00b6 fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"On item enter animation"},{"location":"api/brv/com.drake.brv.animation/-scale-item-animation/on-item-enter-animation/#onitementeranimation","text":"fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"onItemEnterAnimation"},{"location":"api/brv/com.drake.brv.animation/-slide-bottom-item-animation/","text":"brv / com.drake.brv.animation / SlideBottomItemAnimation SlideBottomItemAnimation \u00b6 class SlideBottomItemAnimation : ItemAnimation Constructors \u00b6 Name Summary <init> SlideBottomItemAnimation() Functions \u00b6 Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b fun onItemEnterAnimation(view: View ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.animation/-slide-bottom-item-animation/#slidebottomitemanimation","text":"class SlideBottomItemAnimation : ItemAnimation","title":"SlideBottomItemAnimation"},{"location":"api/brv/com.drake.brv.animation/-slide-bottom-item-animation/#constructors","text":"Name Summary <init> SlideBottomItemAnimation()","title":"Constructors"},{"location":"api/brv/com.drake.brv.animation/-slide-bottom-item-animation/#functions","text":"Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b fun onItemEnterAnimation(view: View ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.animation/-slide-bottom-item-animation/-init-/","text":"brv / com.drake.brv.animation / SlideBottomItemAnimation / <init> <init> \u00b6 SlideBottomItemAnimation()","title":" init "},{"location":"api/brv/com.drake.brv.animation/-slide-bottom-item-animation/-init-/#init","text":"SlideBottomItemAnimation()","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.animation/-slide-bottom-item-animation/on-item-enter-animation/","text":"brv / com.drake.brv.animation / SlideBottomItemAnimation / onItemEnterAnimation onItemEnterAnimation \u00b6 fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"On item enter animation"},{"location":"api/brv/com.drake.brv.animation/-slide-bottom-item-animation/on-item-enter-animation/#onitementeranimation","text":"fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"onItemEnterAnimation"},{"location":"api/brv/com.drake.brv.animation/-slide-left-item-animation/","text":"brv / com.drake.brv.animation / SlideLeftItemAnimation SlideLeftItemAnimation \u00b6 class SlideLeftItemAnimation : ItemAnimation Constructors \u00b6 Name Summary <init> SlideLeftItemAnimation() Functions \u00b6 Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b fun onItemEnterAnimation(view: View ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.animation/-slide-left-item-animation/#slideleftitemanimation","text":"class SlideLeftItemAnimation : ItemAnimation","title":"SlideLeftItemAnimation"},{"location":"api/brv/com.drake.brv.animation/-slide-left-item-animation/#constructors","text":"Name Summary <init> SlideLeftItemAnimation()","title":"Constructors"},{"location":"api/brv/com.drake.brv.animation/-slide-left-item-animation/#functions","text":"Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b fun onItemEnterAnimation(view: View ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.animation/-slide-left-item-animation/-init-/","text":"brv / com.drake.brv.animation / SlideLeftItemAnimation / <init> <init> \u00b6 SlideLeftItemAnimation()","title":" init "},{"location":"api/brv/com.drake.brv.animation/-slide-left-item-animation/-init-/#init","text":"SlideLeftItemAnimation()","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.animation/-slide-left-item-animation/on-item-enter-animation/","text":"brv / com.drake.brv.animation / SlideLeftItemAnimation / onItemEnterAnimation onItemEnterAnimation \u00b6 fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"On item enter animation"},{"location":"api/brv/com.drake.brv.animation/-slide-left-item-animation/on-item-enter-animation/#onitementeranimation","text":"fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"onItemEnterAnimation"},{"location":"api/brv/com.drake.brv.animation/-slide-right-item-animation/","text":"brv / com.drake.brv.animation / SlideRightItemAnimation SlideRightItemAnimation \u00b6 class SlideRightItemAnimation : ItemAnimation Constructors \u00b6 Name Summary <init> SlideRightItemAnimation() Functions \u00b6 Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b fun onItemEnterAnimation(view: View ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.animation/-slide-right-item-animation/#sliderightitemanimation","text":"class SlideRightItemAnimation : ItemAnimation","title":"SlideRightItemAnimation"},{"location":"api/brv/com.drake.brv.animation/-slide-right-item-animation/#constructors","text":"Name Summary <init> SlideRightItemAnimation()","title":"Constructors"},{"location":"api/brv/com.drake.brv.animation/-slide-right-item-animation/#functions","text":"Name Summary onItemEnterAnimation \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b fun onItemEnterAnimation(view: View ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.animation/-slide-right-item-animation/-init-/","text":"brv / com.drake.brv.animation / SlideRightItemAnimation / <init> <init> \u00b6 SlideRightItemAnimation()","title":" init "},{"location":"api/brv/com.drake.brv.animation/-slide-right-item-animation/-init-/#init","text":"SlideRightItemAnimation()","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.animation/-slide-right-item-animation/on-item-enter-animation/","text":"brv / com.drake.brv.animation / SlideRightItemAnimation / onItemEnterAnimation onItemEnterAnimation \u00b6 fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"On item enter animation"},{"location":"api/brv/com.drake.brv.animation/-slide-right-item-animation/on-item-enter-animation/#onitementeranimation","text":"fun onItemEnterAnimation(view: View ): Unit \u5904\u7406item\u88ab\u6dfb\u52a0\u7684\u65f6\u5019\u7684\u8fdb\u5165\u52a8\u753b","title":"onItemEnterAnimation"},{"location":"api/brv/com.drake.brv.annotaion/","text":"brv / com.drake.brv.annotaion Package com.drake.brv.annotaion \u00b6 Types \u00b6 Name Summary AnimationType enum class AnimationType DividerOrientation enum class DividerOrientation ItemOrientation object ItemOrientation","title":"Index"},{"location":"api/brv/com.drake.brv.annotaion/#package-comdrakebrvannotaion","text":"","title":"Package com.drake.brv.annotaion"},{"location":"api/brv/com.drake.brv.annotaion/#types","text":"Name Summary AnimationType enum class AnimationType DividerOrientation enum class DividerOrientation ItemOrientation object ItemOrientation","title":"Types"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/","text":"brv / com.drake.brv.annotaion / AnimationType AnimationType \u00b6 enum class AnimationType Enum Values \u00b6 Name Summary ALPHA SCALE SLIDE_BOTTOM SLIDE_LEFT SLIDE_RIGHT","title":"Index"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/#animationtype","text":"enum class AnimationType","title":"AnimationType"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/#enum-values","text":"Name Summary ALPHA SCALE SLIDE_BOTTOM SLIDE_LEFT SLIDE_RIGHT","title":"Enum Values"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/-a-l-p-h-a/","text":"brv / com.drake.brv.annotaion / AnimationType / ALPHA ALPHA \u00b6 ALPHA","title":" a l p h a"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/-a-l-p-h-a/#alpha","text":"ALPHA","title":"ALPHA"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/-s-c-a-l-e/","text":"brv / com.drake.brv.annotaion / AnimationType / SCALE SCALE \u00b6 SCALE","title":" s c a l e"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/-s-c-a-l-e/#scale","text":"SCALE","title":"SCALE"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/-s-l-i-d-e_-b-o-t-t-o-m/","text":"brv / com.drake.brv.annotaion / AnimationType / SLIDE_BOTTOM SLIDE_BOTTOM \u00b6 SLIDE_BOTTOM","title":" s l i d e  b o t t o m"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/-s-l-i-d-e_-b-o-t-t-o-m/#slide_bottom","text":"SLIDE_BOTTOM","title":"SLIDE_BOTTOM"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/-s-l-i-d-e_-l-e-f-t/","text":"brv / com.drake.brv.annotaion / AnimationType / SLIDE_LEFT SLIDE_LEFT \u00b6 SLIDE_LEFT","title":" s l i d e  l e f t"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/-s-l-i-d-e_-l-e-f-t/#slide_left","text":"SLIDE_LEFT","title":"SLIDE_LEFT"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/-s-l-i-d-e_-r-i-g-h-t/","text":"brv / com.drake.brv.annotaion / AnimationType / SLIDE_RIGHT SLIDE_RIGHT \u00b6 SLIDE_RIGHT","title":" s l i d e  r i g h t"},{"location":"api/brv/com.drake.brv.annotaion/-animation-type/-s-l-i-d-e_-r-i-g-h-t/#slide_right","text":"SLIDE_RIGHT","title":"SLIDE_RIGHT"},{"location":"api/brv/com.drake.brv.annotaion/-divider-orientation/","text":"brv / com.drake.brv.annotaion / DividerOrientation DividerOrientation \u00b6 enum class DividerOrientation Enum Values \u00b6 Name Summary VERTICAL HORIZONTAL GRID","title":"Index"},{"location":"api/brv/com.drake.brv.annotaion/-divider-orientation/#dividerorientation","text":"enum class DividerOrientation","title":"DividerOrientation"},{"location":"api/brv/com.drake.brv.annotaion/-divider-orientation/#enum-values","text":"Name Summary VERTICAL HORIZONTAL GRID","title":"Enum Values"},{"location":"api/brv/com.drake.brv.annotaion/-divider-orientation/-g-r-i-d/","text":"brv / com.drake.brv.annotaion / DividerOrientation / GRID GRID \u00b6 GRID","title":" g r i d"},{"location":"api/brv/com.drake.brv.annotaion/-divider-orientation/-g-r-i-d/#grid","text":"GRID","title":"GRID"},{"location":"api/brv/com.drake.brv.annotaion/-divider-orientation/-h-o-r-i-z-o-n-t-a-l/","text":"brv / com.drake.brv.annotaion / DividerOrientation / HORIZONTAL HORIZONTAL \u00b6 HORIZONTAL","title":" h o r i z o n t a l"},{"location":"api/brv/com.drake.brv.annotaion/-divider-orientation/-h-o-r-i-z-o-n-t-a-l/#horizontal","text":"HORIZONTAL","title":"HORIZONTAL"},{"location":"api/brv/com.drake.brv.annotaion/-divider-orientation/-v-e-r-t-i-c-a-l/","text":"brv / com.drake.brv.annotaion / DividerOrientation / VERTICAL VERTICAL \u00b6 VERTICAL","title":" v e r t i c a l"},{"location":"api/brv/com.drake.brv.annotaion/-divider-orientation/-v-e-r-t-i-c-a-l/#vertical","text":"VERTICAL","title":"VERTICAL"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/","text":"brv / com.drake.brv.annotaion / ItemOrientation ItemOrientation \u00b6 object ItemOrientation Properties \u00b6 Name Summary ALL const val ALL: Int DOWN const val DOWN: Int HORIZONTAL const val HORIZONTAL: Int LEFT const val LEFT: Int NONE const val NONE: Int RIGHT const val RIGHT: Int UP const val UP: Int VERTICAL const val VERTICAL: Int","title":"Index"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/#itemorientation","text":"object ItemOrientation","title":"ItemOrientation"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/#properties","text":"Name Summary ALL const val ALL: Int DOWN const val DOWN: Int HORIZONTAL const val HORIZONTAL: Int LEFT const val LEFT: Int NONE const val NONE: Int RIGHT const val RIGHT: Int UP const val UP: Int VERTICAL const val VERTICAL: Int","title":"Properties"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-a-l-l/","text":"brv / com.drake.brv.annotaion / ItemOrientation / ALL ALL \u00b6 const val ALL: Int","title":" a l l"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-a-l-l/#all","text":"const val ALL: Int","title":"ALL"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-d-o-w-n/","text":"brv / com.drake.brv.annotaion / ItemOrientation / DOWN DOWN \u00b6 const val DOWN: Int","title":" d o w n"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-d-o-w-n/#down","text":"const val DOWN: Int","title":"DOWN"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-h-o-r-i-z-o-n-t-a-l/","text":"brv / com.drake.brv.annotaion / ItemOrientation / HORIZONTAL HORIZONTAL \u00b6 const val HORIZONTAL: Int","title":" h o r i z o n t a l"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-h-o-r-i-z-o-n-t-a-l/#horizontal","text":"const val HORIZONTAL: Int","title":"HORIZONTAL"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-l-e-f-t/","text":"brv / com.drake.brv.annotaion / ItemOrientation / LEFT LEFT \u00b6 const val LEFT: Int","title":" l e f t"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-l-e-f-t/#left","text":"const val LEFT: Int","title":"LEFT"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-n-o-n-e/","text":"brv / com.drake.brv.annotaion / ItemOrientation / NONE NONE \u00b6 const val NONE: Int","title":" n o n e"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-n-o-n-e/#none","text":"const val NONE: Int","title":"NONE"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-r-i-g-h-t/","text":"brv / com.drake.brv.annotaion / ItemOrientation / RIGHT RIGHT \u00b6 const val RIGHT: Int","title":" r i g h t"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-r-i-g-h-t/#right","text":"const val RIGHT: Int","title":"RIGHT"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-u-p/","text":"brv / com.drake.brv.annotaion / ItemOrientation / UP UP \u00b6 const val UP: Int","title":" u p"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-u-p/#up","text":"const val UP: Int","title":"UP"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-v-e-r-t-i-c-a-l/","text":"brv / com.drake.brv.annotaion / ItemOrientation / VERTICAL VERTICAL \u00b6 const val VERTICAL: Int","title":" v e r t i c a l"},{"location":"api/brv/com.drake.brv.annotaion/-item-orientation/-v-e-r-t-i-c-a-l/#vertical","text":"const val VERTICAL: Int","title":"VERTICAL"},{"location":"api/brv/com.drake.brv.binding/","text":"brv / com.drake.brv.binding Package com.drake.brv.binding \u00b6 Types \u00b6 Name Summary ObservableIml A convenience class that implements android.databinding.Observable interface and provides .notifyPropertyChanged and .notifyChange methods. interface ObservableIml : Observable","title":"Index"},{"location":"api/brv/com.drake.brv.binding/#package-comdrakebrvbinding","text":"","title":"Package com.drake.brv.binding"},{"location":"api/brv/com.drake.brv.binding/#types","text":"Name Summary ObservableIml A convenience class that implements android.databinding.Observable interface and provides .notifyPropertyChanged and .notifyChange methods. interface ObservableIml : Observable","title":"Types"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/","text":"brv / com.drake.brv.binding / ObservableIml ObservableIml \u00b6 interface ObservableIml : Observable A convenience class that implements android.databinding.Observable interface and provides .notifyPropertyChanged and .notifyChange methods. Properties \u00b6 Name Summary registry abstract val registry: PropertyChangeRegistry Functions \u00b6 Name Summary addOnPropertyChangedCallback open fun addOnPropertyChangedCallback(callback: OnPropertyChangedCallback): Unit notifyChange Notifies listeners that all properties of this instance have changed. open fun notifyChange(): Unit notifyPropertyChanged Notifies listeners that a specific property has changed. The getter for the property that changes should be marked with Bindable to generate a field in BR to be used as fieldId . open fun notifyPropertyChanged(fieldId: Int ): Unit removeOnPropertyChangedCallback open fun removeOnPropertyChangedCallback(callback: OnPropertyChangedCallback): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/#observableiml","text":"interface ObservableIml : Observable A convenience class that implements android.databinding.Observable interface and provides .notifyPropertyChanged and .notifyChange methods.","title":"ObservableIml"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/#properties","text":"Name Summary registry abstract val registry: PropertyChangeRegistry","title":"Properties"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/#functions","text":"Name Summary addOnPropertyChangedCallback open fun addOnPropertyChangedCallback(callback: OnPropertyChangedCallback): Unit notifyChange Notifies listeners that all properties of this instance have changed. open fun notifyChange(): Unit notifyPropertyChanged Notifies listeners that a specific property has changed. The getter for the property that changes should be marked with Bindable to generate a field in BR to be used as fieldId . open fun notifyPropertyChanged(fieldId: Int ): Unit removeOnPropertyChangedCallback open fun removeOnPropertyChangedCallback(callback: OnPropertyChangedCallback): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/add-on-property-changed-callback/","text":"brv / com.drake.brv.binding / ObservableIml / addOnPropertyChangedCallback addOnPropertyChangedCallback \u00b6 open fun addOnPropertyChangedCallback(callback: OnPropertyChangedCallback): Unit","title":"Add on property changed callback"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/add-on-property-changed-callback/#addonpropertychangedcallback","text":"open fun addOnPropertyChangedCallback(callback: OnPropertyChangedCallback): Unit","title":"addOnPropertyChangedCallback"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/notify-change/","text":"brv / com.drake.brv.binding / ObservableIml / notifyChange notifyChange \u00b6 open fun notifyChange(): Unit Notifies listeners that all properties of this instance have changed.","title":"Notify change"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/notify-change/#notifychange","text":"open fun notifyChange(): Unit Notifies listeners that all properties of this instance have changed.","title":"notifyChange"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/notify-property-changed/","text":"brv / com.drake.brv.binding / ObservableIml / notifyPropertyChanged notifyPropertyChanged \u00b6 open fun notifyPropertyChanged(fieldId: Int ): Unit Notifies listeners that a specific property has changed. The getter for the property that changes should be marked with Bindable to generate a field in BR to be used as fieldId . Parameters \u00b6 fieldId - The generated BR id for the Bindable field.","title":"Notify property changed"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/notify-property-changed/#notifypropertychanged","text":"open fun notifyPropertyChanged(fieldId: Int ): Unit Notifies listeners that a specific property has changed. The getter for the property that changes should be marked with Bindable to generate a field in BR to be used as fieldId .","title":"notifyPropertyChanged"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/notify-property-changed/#parameters","text":"fieldId - The generated BR id for the Bindable field.","title":"Parameters"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/registry/","text":"brv / com.drake.brv.binding / ObservableIml / registry registry \u00b6 abstract val registry: PropertyChangeRegistry","title":"Registry"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/registry/#registry","text":"abstract val registry: PropertyChangeRegistry","title":"registry"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/remove-on-property-changed-callback/","text":"brv / com.drake.brv.binding / ObservableIml / removeOnPropertyChangedCallback removeOnPropertyChangedCallback \u00b6 open fun removeOnPropertyChangedCallback(callback: OnPropertyChangedCallback): Unit","title":"Remove on property changed callback"},{"location":"api/brv/com.drake.brv.binding/-observable-iml/remove-on-property-changed-callback/#removeonpropertychangedcallback","text":"open fun removeOnPropertyChangedCallback(callback: OnPropertyChangedCallback): Unit","title":"removeOnPropertyChangedCallback"},{"location":"api/brv/com.drake.brv.item/","text":"brv / com.drake.brv.item Package com.drake.brv.item \u00b6 Types \u00b6 Name Summary ItemBind \u63a8\u8350\u4f7f\u7528DataBinding\u6765\u8fdb\u884c\u6570\u636e\u7ed1\u5b9a com.drake.brv.BindingAdapter.modelId , \u6216\u8005\u51fd\u6570 com.drake.brv.BindingAdapter.onBind \u8be5\u63a5\u53e3\u8fdb\u884cUI\u64cd\u4f5c\u4e0d\u7b26\u5408MVVM\u67b6\u6784, \u56e0\u4e3aModel\u4e2d\u4e0d\u5141\u8bb8\u51fa\u73b0View\u5f15\u7528 interface ItemBind ItemDrag \u53ef\u62d6\u62fd interface ItemDrag ItemExpand \u53ef\u5c55\u5f00/\u6298\u53e0\u7684\u6761\u76ee interface ItemExpand ItemHover \u53ef\u7c98\u6027\u5934\u90e8\u7684\u6761\u76ee interface ItemHover ItemPosition interface ItemPosition ItemSwipe \u53ef\u4fa7\u6ed1\u7684\u6761\u76ee interface ItemSwipe","title":"Index"},{"location":"api/brv/com.drake.brv.item/#package-comdrakebrvitem","text":"","title":"Package com.drake.brv.item"},{"location":"api/brv/com.drake.brv.item/#types","text":"Name Summary ItemBind \u63a8\u8350\u4f7f\u7528DataBinding\u6765\u8fdb\u884c\u6570\u636e\u7ed1\u5b9a com.drake.brv.BindingAdapter.modelId , \u6216\u8005\u51fd\u6570 com.drake.brv.BindingAdapter.onBind \u8be5\u63a5\u53e3\u8fdb\u884cUI\u64cd\u4f5c\u4e0d\u7b26\u5408MVVM\u67b6\u6784, \u56e0\u4e3aModel\u4e2d\u4e0d\u5141\u8bb8\u51fa\u73b0View\u5f15\u7528 interface ItemBind ItemDrag \u53ef\u62d6\u62fd interface ItemDrag ItemExpand \u53ef\u5c55\u5f00/\u6298\u53e0\u7684\u6761\u76ee interface ItemExpand ItemHover \u53ef\u7c98\u6027\u5934\u90e8\u7684\u6761\u76ee interface ItemHover ItemPosition interface ItemPosition ItemSwipe \u53ef\u4fa7\u6ed1\u7684\u6761\u76ee interface ItemSwipe","title":"Types"},{"location":"api/brv/com.drake.brv.item/-item-bind/","text":"brv / com.drake.brv.item / ItemBind ItemBind \u00b6 interface ItemBind \u63a8\u8350\u4f7f\u7528DataBinding\u6765\u8fdb\u884c\u6570\u636e\u7ed1\u5b9a com.drake.brv.BindingAdapter.modelId , \u6216\u8005\u51fd\u6570 com.drake.brv.BindingAdapter.onBind \u8be5\u63a5\u53e3\u8fdb\u884cUI\u64cd\u4f5c\u4e0d\u7b26\u5408MVVM\u67b6\u6784, \u56e0\u4e3aModel\u4e2d\u4e0d\u5141\u8bb8\u51fa\u73b0View\u5f15\u7528 Functions \u00b6 Name Summary onBind abstract fun onBind(holder: BindingViewHolder): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.item/-item-bind/#itembind","text":"interface ItemBind \u63a8\u8350\u4f7f\u7528DataBinding\u6765\u8fdb\u884c\u6570\u636e\u7ed1\u5b9a com.drake.brv.BindingAdapter.modelId , \u6216\u8005\u51fd\u6570 com.drake.brv.BindingAdapter.onBind \u8be5\u63a5\u53e3\u8fdb\u884cUI\u64cd\u4f5c\u4e0d\u7b26\u5408MVVM\u67b6\u6784, \u56e0\u4e3aModel\u4e2d\u4e0d\u5141\u8bb8\u51fa\u73b0View\u5f15\u7528","title":"ItemBind"},{"location":"api/brv/com.drake.brv.item/-item-bind/#functions","text":"Name Summary onBind abstract fun onBind(holder: BindingViewHolder): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.item/-item-bind/on-bind/","text":"brv / com.drake.brv.item / ItemBind / onBind onBind \u00b6 abstract fun onBind(holder: BindingViewHolder): Unit","title":"On bind"},{"location":"api/brv/com.drake.brv.item/-item-bind/on-bind/#onbind","text":"abstract fun onBind(holder: BindingViewHolder): Unit","title":"onBind"},{"location":"api/brv/com.drake.brv.item/-item-drag/","text":"brv / com.drake.brv.item / ItemDrag ItemDrag \u00b6 interface ItemDrag \u53ef\u62d6\u62fd Properties \u00b6 Name Summary itemOrientationDrag \u62d6\u62fd\u65b9\u5411 abstract var itemOrientationDrag: Int","title":"Index"},{"location":"api/brv/com.drake.brv.item/-item-drag/#itemdrag","text":"interface ItemDrag \u53ef\u62d6\u62fd","title":"ItemDrag"},{"location":"api/brv/com.drake.brv.item/-item-drag/#properties","text":"Name Summary itemOrientationDrag \u62d6\u62fd\u65b9\u5411 abstract var itemOrientationDrag: Int","title":"Properties"},{"location":"api/brv/com.drake.brv.item/-item-drag/item-orientation-drag/","text":"brv / com.drake.brv.item / ItemDrag / itemOrientationDrag itemOrientationDrag \u00b6 abstract var itemOrientationDrag: Int \u62d6\u62fd\u65b9\u5411 See Also ItemOrientation","title":"Item orientation drag"},{"location":"api/brv/com.drake.brv.item/-item-drag/item-orientation-drag/#itemorientationdrag","text":"abstract var itemOrientationDrag: Int \u62d6\u62fd\u65b9\u5411 See Also ItemOrientation","title":"itemOrientationDrag"},{"location":"api/brv/com.drake.brv.item/-item-expand/","text":"brv / com.drake.brv.item / ItemExpand ItemExpand \u00b6 interface ItemExpand \u53ef\u5c55\u5f00/\u6298\u53e0\u7684\u6761\u76ee Properties \u00b6 Name Summary itemExpand abstract var itemExpand: Boolean itemGroupPosition abstract var itemGroupPosition: Int itemSublist abstract var itemSublist: List < Any ?>?","title":"Index"},{"location":"api/brv/com.drake.brv.item/-item-expand/#itemexpand","text":"interface ItemExpand \u53ef\u5c55\u5f00/\u6298\u53e0\u7684\u6761\u76ee","title":"ItemExpand"},{"location":"api/brv/com.drake.brv.item/-item-expand/#properties","text":"Name Summary itemExpand abstract var itemExpand: Boolean itemGroupPosition abstract var itemGroupPosition: Int itemSublist abstract var itemSublist: List < Any ?>?","title":"Properties"},{"location":"api/brv/com.drake.brv.item/-item-expand/item-expand/","text":"brv / com.drake.brv.item / ItemExpand / itemExpand itemExpand \u00b6 abstract var itemExpand: Boolean","title":"Item expand"},{"location":"api/brv/com.drake.brv.item/-item-expand/item-expand/#itemexpand","text":"abstract var itemExpand: Boolean","title":"itemExpand"},{"location":"api/brv/com.drake.brv.item/-item-expand/item-group-position/","text":"brv / com.drake.brv.item / ItemExpand / itemGroupPosition itemGroupPosition \u00b6 abstract var itemGroupPosition: Int","title":"Item group position"},{"location":"api/brv/com.drake.brv.item/-item-expand/item-group-position/#itemgroupposition","text":"abstract var itemGroupPosition: Int","title":"itemGroupPosition"},{"location":"api/brv/com.drake.brv.item/-item-expand/item-sublist/","text":"brv / com.drake.brv.item / ItemExpand / itemSublist itemSublist \u00b6 abstract var itemSublist: List < Any ?>?","title":"Item sublist"},{"location":"api/brv/com.drake.brv.item/-item-expand/item-sublist/#itemsublist","text":"abstract var itemSublist: List < Any ?>?","title":"itemSublist"},{"location":"api/brv/com.drake.brv.item/-item-hover/","text":"brv / com.drake.brv.item / ItemHover ItemHover \u00b6 interface ItemHover \u53ef\u7c98\u6027\u5934\u90e8\u7684\u6761\u76ee Properties \u00b6 Name Summary itemHover \u662f\u5426\u542f\u7528\u7c98\u6027\u5934\u90e8 com.drake.brv.utils.RecyclerUtilsKt.linear com.drake.brv.utils.RecyclerUtilsKt.staggered abstract var itemHover: Boolean","title":"Index"},{"location":"api/brv/com.drake.brv.item/-item-hover/#itemhover","text":"interface ItemHover \u53ef\u7c98\u6027\u5934\u90e8\u7684\u6761\u76ee","title":"ItemHover"},{"location":"api/brv/com.drake.brv.item/-item-hover/#properties","text":"Name Summary itemHover \u662f\u5426\u542f\u7528\u7c98\u6027\u5934\u90e8 com.drake.brv.utils.RecyclerUtilsKt.linear com.drake.brv.utils.RecyclerUtilsKt.staggered abstract var itemHover: Boolean","title":"Properties"},{"location":"api/brv/com.drake.brv.item/-item-hover/item-hover/","text":"brv / com.drake.brv.item / ItemHover / itemHover itemHover \u00b6 abstract var itemHover: Boolean \u662f\u5426\u542f\u7528\u7c98\u6027\u5934\u90e8 com.drake.brv.utils.RecyclerUtilsKt.linear com.drake.brv.utils.RecyclerUtilsKt.staggered","title":"Item hover"},{"location":"api/brv/com.drake.brv.item/-item-hover/item-hover/#itemhover","text":"abstract var itemHover: Boolean \u662f\u5426\u542f\u7528\u7c98\u6027\u5934\u90e8 com.drake.brv.utils.RecyclerUtilsKt.linear com.drake.brv.utils.RecyclerUtilsKt.staggered","title":"itemHover"},{"location":"api/brv/com.drake.brv.item/-item-position/","text":"brv / com.drake.brv.item / ItemPosition ItemPosition \u00b6 interface ItemPosition Properties \u00b6 Name Summary itemPosition abstract var itemPosition: Int","title":"Index"},{"location":"api/brv/com.drake.brv.item/-item-position/#itemposition","text":"interface ItemPosition","title":"ItemPosition"},{"location":"api/brv/com.drake.brv.item/-item-position/#properties","text":"Name Summary itemPosition abstract var itemPosition: Int","title":"Properties"},{"location":"api/brv/com.drake.brv.item/-item-position/item-position/","text":"brv / com.drake.brv.item / ItemPosition / itemPosition itemPosition \u00b6 abstract var itemPosition: Int","title":"Item position"},{"location":"api/brv/com.drake.brv.item/-item-position/item-position/#itemposition","text":"abstract var itemPosition: Int","title":"itemPosition"},{"location":"api/brv/com.drake.brv.item/-item-swipe/","text":"brv / com.drake.brv.item / ItemSwipe ItemSwipe \u00b6 interface ItemSwipe \u53ef\u4fa7\u6ed1\u7684\u6761\u76ee Properties \u00b6 Name Summary itemOrientationSwipe \u4fa7\u6ed1\u65b9\u5411 abstract var itemOrientationSwipe: Int","title":"Index"},{"location":"api/brv/com.drake.brv.item/-item-swipe/#itemswipe","text":"interface ItemSwipe \u53ef\u4fa7\u6ed1\u7684\u6761\u76ee","title":"ItemSwipe"},{"location":"api/brv/com.drake.brv.item/-item-swipe/#properties","text":"Name Summary itemOrientationSwipe \u4fa7\u6ed1\u65b9\u5411 abstract var itemOrientationSwipe: Int","title":"Properties"},{"location":"api/brv/com.drake.brv.item/-item-swipe/item-orientation-swipe/","text":"brv / com.drake.brv.item / ItemSwipe / itemOrientationSwipe itemOrientationSwipe \u00b6 abstract var itemOrientationSwipe: Int \u4fa7\u6ed1\u65b9\u5411 See Also ItemOrientation","title":"Item orientation swipe"},{"location":"api/brv/com.drake.brv.item/-item-swipe/item-orientation-swipe/#itemorientationswipe","text":"abstract var itemOrientationSwipe: Int \u4fa7\u6ed1\u65b9\u5411 See Also ItemOrientation","title":"itemOrientationSwipe"},{"location":"api/brv/com.drake.brv.layoutmanager/","text":"brv / com.drake.brv.layoutmanager Package com.drake.brv.layoutmanager \u00b6 Types \u00b6 Name Summary HoverGridLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 open class HoverGridLayoutManager : GridLayoutManager HoverLinearLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 open class HoverLinearLayoutManager : LinearLayoutManager HoverStaggeredGridLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 open class HoverStaggeredGridLayoutManager : StaggeredGridLayoutManager","title":"Index"},{"location":"api/brv/com.drake.brv.layoutmanager/#package-comdrakebrvlayoutmanager","text":"","title":"Package com.drake.brv.layoutmanager"},{"location":"api/brv/com.drake.brv.layoutmanager/#types","text":"Name Summary HoverGridLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 open class HoverGridLayoutManager : GridLayoutManager HoverLinearLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 open class HoverLinearLayoutManager : LinearLayoutManager HoverStaggeredGridLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 open class HoverStaggeredGridLayoutManager : StaggeredGridLayoutManager","title":"Types"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager HoverGridLayoutManager \u00b6 open class HoverGridLayoutManager : GridLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 Link https://github.com/Doist/RecyclerViewExtensions Types \u00b6 Name Summary SavedState open class SavedState : Parcelable Constructors \u00b6 Name Summary <init> HoverGridLayoutManager(context: Context !, spanCount: Int ) HoverGridLayoutManager(context: Context !, spanCount: Int , orientation: Int , reverseLayout: Boolean ) HoverGridLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int ) Functions \u00b6 Name Summary canScrollHorizontally open fun canScrollHorizontally(): Boolean canScrollVertically open fun canScrollVertically(): Boolean computeHorizontalScrollExtent open fun computeHorizontalScrollExtent(state: State): Int computeHorizontalScrollOffset open fun computeHorizontalScrollOffset(state: State): Int computeHorizontalScrollRange open fun computeHorizontalScrollRange(state: State): Int computeScrollVectorForPosition open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ? computeVerticalScrollExtent open fun computeVerticalScrollExtent(state: State): Int computeVerticalScrollOffset open fun computeVerticalScrollOffset(state: State): Int computeVerticalScrollRange open fun computeVerticalScrollRange(state: State): Int isHover Returns true if view is the current hover header. open fun isHover(view: View !): Boolean onAdapterChanged open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit onAttachedToWindow open fun onAttachedToWindow(view: RecyclerView!): Unit onFocusSearchFailed open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ? onLayoutChildren open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit onRestoreInstanceState open fun onRestoreInstanceState(state: Parcelable !): Unit onSaveInstanceState open fun onSaveInstanceState(): Parcelable ? scrollHorizontallyBy open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int scrollToPosition open fun scrollToPosition(position: Int ): Unit scrollToPositionWithOffset open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit scrollVerticallyBy open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int setHoverTranslationX Offsets the horizontal location of the hover header relative to the its default position. open fun setHoverTranslationX(translationX: Float ): Unit setHoverTranslationY Offsets the vertical location of the hover header relative to the its default position. open fun setHoverTranslationY(translationY: Float ): Unit setScrollEnabled open fun setScrollEnabled(enabled: Boolean ): HoverGridLayoutManager !","title":"Index"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/#hovergridlayoutmanager","text":"open class HoverGridLayoutManager : GridLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 Link https://github.com/Doist/RecyclerViewExtensions","title":"HoverGridLayoutManager"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/#types","text":"Name Summary SavedState open class SavedState : Parcelable","title":"Types"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/#constructors","text":"Name Summary <init> HoverGridLayoutManager(context: Context !, spanCount: Int ) HoverGridLayoutManager(context: Context !, spanCount: Int , orientation: Int , reverseLayout: Boolean ) HoverGridLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int )","title":"Constructors"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/#functions","text":"Name Summary canScrollHorizontally open fun canScrollHorizontally(): Boolean canScrollVertically open fun canScrollVertically(): Boolean computeHorizontalScrollExtent open fun computeHorizontalScrollExtent(state: State): Int computeHorizontalScrollOffset open fun computeHorizontalScrollOffset(state: State): Int computeHorizontalScrollRange open fun computeHorizontalScrollRange(state: State): Int computeScrollVectorForPosition open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ? computeVerticalScrollExtent open fun computeVerticalScrollExtent(state: State): Int computeVerticalScrollOffset open fun computeVerticalScrollOffset(state: State): Int computeVerticalScrollRange open fun computeVerticalScrollRange(state: State): Int isHover Returns true if view is the current hover header. open fun isHover(view: View !): Boolean onAdapterChanged open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit onAttachedToWindow open fun onAttachedToWindow(view: RecyclerView!): Unit onFocusSearchFailed open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ? onLayoutChildren open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit onRestoreInstanceState open fun onRestoreInstanceState(state: Parcelable !): Unit onSaveInstanceState open fun onSaveInstanceState(): Parcelable ? scrollHorizontallyBy open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int scrollToPosition open fun scrollToPosition(position: Int ): Unit scrollToPositionWithOffset open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit scrollVerticallyBy open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int setHoverTranslationX Offsets the horizontal location of the hover header relative to the its default position. open fun setHoverTranslationX(translationX: Float ): Unit setHoverTranslationY Offsets the vertical location of the hover header relative to the its default position. open fun setHoverTranslationY(translationY: Float ): Unit setScrollEnabled open fun setScrollEnabled(enabled: Boolean ): HoverGridLayoutManager !","title":"Functions"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-init-/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / <init> <init> \u00b6 HoverGridLayoutManager(context: Context !, spanCount: Int ) HoverGridLayoutManager(context: Context !, spanCount: Int , orientation: Int , reverseLayout: Boolean ) HoverGridLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int )","title":" init "},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-init-/#init","text":"HoverGridLayoutManager(context: Context !, spanCount: Int ) HoverGridLayoutManager(context: Context !, spanCount: Int , orientation: Int , reverseLayout: Boolean ) HoverGridLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int )","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/can-scroll-horizontally/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / canScrollHorizontally canScrollHorizontally \u00b6 open fun canScrollHorizontally(): Boolean","title":"Can scroll horizontally"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/can-scroll-horizontally/#canscrollhorizontally","text":"open fun canScrollHorizontally(): Boolean","title":"canScrollHorizontally"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/can-scroll-vertically/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / canScrollVertically canScrollVertically \u00b6 open fun canScrollVertically(): Boolean","title":"Can scroll vertically"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/can-scroll-vertically/#canscrollvertically","text":"open fun canScrollVertically(): Boolean","title":"canScrollVertically"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-horizontal-scroll-extent/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / computeHorizontalScrollExtent computeHorizontalScrollExtent \u00b6 open fun computeHorizontalScrollExtent(state: State): Int","title":"Compute horizontal scroll extent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-horizontal-scroll-extent/#computehorizontalscrollextent","text":"open fun computeHorizontalScrollExtent(state: State): Int","title":"computeHorizontalScrollExtent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-horizontal-scroll-offset/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / computeHorizontalScrollOffset computeHorizontalScrollOffset \u00b6 open fun computeHorizontalScrollOffset(state: State): Int","title":"Compute horizontal scroll offset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-horizontal-scroll-offset/#computehorizontalscrolloffset","text":"open fun computeHorizontalScrollOffset(state: State): Int","title":"computeHorizontalScrollOffset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-horizontal-scroll-range/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / computeHorizontalScrollRange computeHorizontalScrollRange \u00b6 open fun computeHorizontalScrollRange(state: State): Int","title":"Compute horizontal scroll range"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-horizontal-scroll-range/#computehorizontalscrollrange","text":"open fun computeHorizontalScrollRange(state: State): Int","title":"computeHorizontalScrollRange"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-scroll-vector-for-position/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / computeScrollVectorForPosition computeScrollVectorForPosition \u00b6 open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ?","title":"Compute scroll vector for position"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-scroll-vector-for-position/#computescrollvectorforposition","text":"open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ?","title":"computeScrollVectorForPosition"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-vertical-scroll-extent/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / computeVerticalScrollExtent computeVerticalScrollExtent \u00b6 open fun computeVerticalScrollExtent(state: State): Int","title":"Compute vertical scroll extent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-vertical-scroll-extent/#computeverticalscrollextent","text":"open fun computeVerticalScrollExtent(state: State): Int","title":"computeVerticalScrollExtent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-vertical-scroll-offset/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / computeVerticalScrollOffset computeVerticalScrollOffset \u00b6 open fun computeVerticalScrollOffset(state: State): Int","title":"Compute vertical scroll offset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-vertical-scroll-offset/#computeverticalscrolloffset","text":"open fun computeVerticalScrollOffset(state: State): Int","title":"computeVerticalScrollOffset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-vertical-scroll-range/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / computeVerticalScrollRange computeVerticalScrollRange \u00b6 open fun computeVerticalScrollRange(state: State): Int","title":"Compute vertical scroll range"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/compute-vertical-scroll-range/#computeverticalscrollrange","text":"open fun computeVerticalScrollRange(state: State): Int","title":"computeVerticalScrollRange"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/is-hover/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / isHover isHover \u00b6 open fun isHover(view: View !): Boolean Returns true if view is the current hover header.","title":"Is hover"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/is-hover/#ishover","text":"open fun isHover(view: View !): Boolean Returns true if view is the current hover header.","title":"isHover"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-adapter-changed/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / onAdapterChanged onAdapterChanged \u00b6 open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit","title":"On adapter changed"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-adapter-changed/#onadapterchanged","text":"open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit","title":"onAdapterChanged"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-attached-to-window/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / onAttachedToWindow onAttachedToWindow \u00b6 open fun onAttachedToWindow(view: RecyclerView!): Unit","title":"On attached to window"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-attached-to-window/#onattachedtowindow","text":"open fun onAttachedToWindow(view: RecyclerView!): Unit","title":"onAttachedToWindow"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-focus-search-failed/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / onFocusSearchFailed onFocusSearchFailed \u00b6 open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ?","title":"On focus search failed"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-focus-search-failed/#onfocussearchfailed","text":"open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ?","title":"onFocusSearchFailed"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-layout-children/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / onLayoutChildren onLayoutChildren \u00b6 open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit","title":"On layout children"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-layout-children/#onlayoutchildren","text":"open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit","title":"onLayoutChildren"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-restore-instance-state/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / onRestoreInstanceState onRestoreInstanceState \u00b6 open fun onRestoreInstanceState(state: Parcelable !): Unit","title":"On restore instance state"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-restore-instance-state/#onrestoreinstancestate","text":"open fun onRestoreInstanceState(state: Parcelable !): Unit","title":"onRestoreInstanceState"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-save-instance-state/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / onSaveInstanceState onSaveInstanceState \u00b6 open fun onSaveInstanceState(): Parcelable ?","title":"On save instance state"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/on-save-instance-state/#onsaveinstancestate","text":"open fun onSaveInstanceState(): Parcelable ?","title":"onSaveInstanceState"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/scroll-horizontally-by/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / scrollHorizontallyBy scrollHorizontallyBy \u00b6 open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int","title":"Scroll horizontally by"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/scroll-horizontally-by/#scrollhorizontallyby","text":"open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int","title":"scrollHorizontallyBy"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/scroll-to-position-with-offset/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / scrollToPositionWithOffset scrollToPositionWithOffset \u00b6 open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit","title":"Scroll to position with offset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/scroll-to-position-with-offset/#scrolltopositionwithoffset","text":"open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit","title":"scrollToPositionWithOffset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/scroll-to-position/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / scrollToPosition scrollToPosition \u00b6 open fun scrollToPosition(position: Int ): Unit","title":"Scroll to position"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/scroll-to-position/#scrolltoposition","text":"open fun scrollToPosition(position: Int ): Unit","title":"scrollToPosition"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/scroll-vertically-by/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / scrollVerticallyBy scrollVerticallyBy \u00b6 open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int","title":"Scroll vertically by"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/scroll-vertically-by/#scrollverticallyby","text":"open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int","title":"scrollVerticallyBy"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/set-hover-translation-x/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / setHoverTranslationX setHoverTranslationX \u00b6 open fun setHoverTranslationX(translationX: Float ): Unit Offsets the horizontal location of the hover header relative to the its default position.","title":"Set hover translation x"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/set-hover-translation-x/#sethovertranslationx","text":"open fun setHoverTranslationX(translationX: Float ): Unit Offsets the horizontal location of the hover header relative to the its default position.","title":"setHoverTranslationX"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/set-hover-translation-y/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / setHoverTranslationY setHoverTranslationY \u00b6 open fun setHoverTranslationY(translationY: Float ): Unit Offsets the vertical location of the hover header relative to the its default position.","title":"Set hover translation y"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/set-hover-translation-y/#sethovertranslationy","text":"open fun setHoverTranslationY(translationY: Float ): Unit Offsets the vertical location of the hover header relative to the its default position.","title":"setHoverTranslationY"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/set-scroll-enabled/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / setScrollEnabled setScrollEnabled \u00b6 open fun setScrollEnabled(enabled: Boolean ): HoverGridLayoutManager !","title":"Set scroll enabled"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/set-scroll-enabled/#setscrollenabled","text":"open fun setScrollEnabled(enabled: Boolean ): HoverGridLayoutManager !","title":"setScrollEnabled"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / SavedState SavedState \u00b6 open class SavedState : Parcelable Constructors \u00b6 Name Summary <init> SavedState() SavedState(in: Parcel !) Properties \u00b6 Name Summary CREATOR static val CREATOR: Creator <SavedState!>! Functions \u00b6 Name Summary describeContents open fun describeContents(): Int writeToParcel open fun writeToParcel(dest: Parcel , flags: Int ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/#savedstate","text":"open class SavedState : Parcelable","title":"SavedState"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/#constructors","text":"Name Summary <init> SavedState() SavedState(in: Parcel !)","title":"Constructors"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/#properties","text":"Name Summary CREATOR static val CREATOR: Creator <SavedState!>!","title":"Properties"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/#functions","text":"Name Summary describeContents open fun describeContents(): Int writeToParcel open fun writeToParcel(dest: Parcel , flags: Int ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/-c-r-e-a-t-o-r/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / SavedState / CREATOR CREATOR \u00b6 static val CREATOR: Creator <SavedState!>!","title":" c r e a t o r"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator <SavedState!>!","title":"CREATOR"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/-init-/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / SavedState / <init> <init> \u00b6 SavedState() SavedState(in: Parcel !)","title":" init "},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/-init-/#init","text":"SavedState() SavedState(in: Parcel !)","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/describe-contents/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / SavedState / describeContents describeContents \u00b6 open fun describeContents(): Int","title":"Describe contents"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/write-to-parcel/","text":"brv / com.drake.brv.layoutmanager / HoverGridLayoutManager / SavedState / writeToParcel writeToParcel \u00b6 open fun writeToParcel(@NonNull dest: Parcel , flags: Int ): Unit","title":"Write to parcel"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-grid-layout-manager/-saved-state/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(@NonNull dest: Parcel , flags: Int ): Unit","title":"writeToParcel"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager HoverLinearLayoutManager \u00b6 open class HoverLinearLayoutManager : LinearLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 Link https://github.com/Doist/RecyclerViewExtensions Types \u00b6 Name Summary SavedState open class SavedState : Parcelable Constructors \u00b6 Name Summary <init> HoverLinearLayoutManager(context: Context !) HoverLinearLayoutManager(context: Context !, orientation: Int , reverseLayout: Boolean ) HoverLinearLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int ) Functions \u00b6 Name Summary canScrollHorizontally open fun canScrollHorizontally(): Boolean canScrollVertically open fun canScrollVertically(): Boolean computeHorizontalScrollExtent open fun computeHorizontalScrollExtent(state: State): Int computeHorizontalScrollOffset open fun computeHorizontalScrollOffset(state: State): Int computeHorizontalScrollRange open fun computeHorizontalScrollRange(state: State): Int computeScrollVectorForPosition open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ? computeVerticalScrollExtent open fun computeVerticalScrollExtent(state: State): Int computeVerticalScrollOffset open fun computeVerticalScrollOffset(state: State): Int computeVerticalScrollRange open fun computeVerticalScrollRange(state: State): Int isHover Returns true if view is the current hover header. open fun isHover(view: View !): Boolean onAdapterChanged open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit onAttachedToWindow open fun onAttachedToWindow(view: RecyclerView!): Unit onFocusSearchFailed open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ? onLayoutChildren open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit onRestoreInstanceState open fun onRestoreInstanceState(state: Parcelable !): Unit onSaveInstanceState open fun onSaveInstanceState(): Parcelable ? scrollHorizontallyBy open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int scrollToPosition open fun scrollToPosition(position: Int ): Unit scrollToPositionWithOffset open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit scrollVerticallyBy open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int setHoverTranslationX Offsets the horizontal location of the hover header relative to the its default position. open fun setHoverTranslationX(translationX: Float ): Unit setHoverTranslationY Offsets the vertical location of the hover header relative to the its default position. open fun setHoverTranslationY(translationY: Float ): Unit setScrollEnabled open fun setScrollEnabled(enabled: Boolean ): HoverLinearLayoutManager ! smoothScrollToPosition open fun smoothScrollToPosition(recyclerView: RecyclerView!, state: State!, position: Int ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/#hoverlinearlayoutmanager","text":"open class HoverLinearLayoutManager : LinearLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 Link https://github.com/Doist/RecyclerViewExtensions","title":"HoverLinearLayoutManager"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/#types","text":"Name Summary SavedState open class SavedState : Parcelable","title":"Types"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/#constructors","text":"Name Summary <init> HoverLinearLayoutManager(context: Context !) HoverLinearLayoutManager(context: Context !, orientation: Int , reverseLayout: Boolean ) HoverLinearLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int )","title":"Constructors"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/#functions","text":"Name Summary canScrollHorizontally open fun canScrollHorizontally(): Boolean canScrollVertically open fun canScrollVertically(): Boolean computeHorizontalScrollExtent open fun computeHorizontalScrollExtent(state: State): Int computeHorizontalScrollOffset open fun computeHorizontalScrollOffset(state: State): Int computeHorizontalScrollRange open fun computeHorizontalScrollRange(state: State): Int computeScrollVectorForPosition open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ? computeVerticalScrollExtent open fun computeVerticalScrollExtent(state: State): Int computeVerticalScrollOffset open fun computeVerticalScrollOffset(state: State): Int computeVerticalScrollRange open fun computeVerticalScrollRange(state: State): Int isHover Returns true if view is the current hover header. open fun isHover(view: View !): Boolean onAdapterChanged open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit onAttachedToWindow open fun onAttachedToWindow(view: RecyclerView!): Unit onFocusSearchFailed open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ? onLayoutChildren open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit onRestoreInstanceState open fun onRestoreInstanceState(state: Parcelable !): Unit onSaveInstanceState open fun onSaveInstanceState(): Parcelable ? scrollHorizontallyBy open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int scrollToPosition open fun scrollToPosition(position: Int ): Unit scrollToPositionWithOffset open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit scrollVerticallyBy open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int setHoverTranslationX Offsets the horizontal location of the hover header relative to the its default position. open fun setHoverTranslationX(translationX: Float ): Unit setHoverTranslationY Offsets the vertical location of the hover header relative to the its default position. open fun setHoverTranslationY(translationY: Float ): Unit setScrollEnabled open fun setScrollEnabled(enabled: Boolean ): HoverLinearLayoutManager ! smoothScrollToPosition open fun smoothScrollToPosition(recyclerView: RecyclerView!, state: State!, position: Int ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-init-/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / <init> <init> \u00b6 HoverLinearLayoutManager(context: Context !) HoverLinearLayoutManager(context: Context !, orientation: Int , reverseLayout: Boolean ) HoverLinearLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int )","title":" init "},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-init-/#init","text":"HoverLinearLayoutManager(context: Context !) HoverLinearLayoutManager(context: Context !, orientation: Int , reverseLayout: Boolean ) HoverLinearLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int )","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/can-scroll-horizontally/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / canScrollHorizontally canScrollHorizontally \u00b6 open fun canScrollHorizontally(): Boolean","title":"Can scroll horizontally"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/can-scroll-horizontally/#canscrollhorizontally","text":"open fun canScrollHorizontally(): Boolean","title":"canScrollHorizontally"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/can-scroll-vertically/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / canScrollVertically canScrollVertically \u00b6 open fun canScrollVertically(): Boolean","title":"Can scroll vertically"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/can-scroll-vertically/#canscrollvertically","text":"open fun canScrollVertically(): Boolean","title":"canScrollVertically"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-horizontal-scroll-extent/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / computeHorizontalScrollExtent computeHorizontalScrollExtent \u00b6 open fun computeHorizontalScrollExtent(state: State): Int","title":"Compute horizontal scroll extent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-horizontal-scroll-extent/#computehorizontalscrollextent","text":"open fun computeHorizontalScrollExtent(state: State): Int","title":"computeHorizontalScrollExtent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-horizontal-scroll-offset/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / computeHorizontalScrollOffset computeHorizontalScrollOffset \u00b6 open fun computeHorizontalScrollOffset(state: State): Int","title":"Compute horizontal scroll offset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-horizontal-scroll-offset/#computehorizontalscrolloffset","text":"open fun computeHorizontalScrollOffset(state: State): Int","title":"computeHorizontalScrollOffset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-horizontal-scroll-range/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / computeHorizontalScrollRange computeHorizontalScrollRange \u00b6 open fun computeHorizontalScrollRange(state: State): Int","title":"Compute horizontal scroll range"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-horizontal-scroll-range/#computehorizontalscrollrange","text":"open fun computeHorizontalScrollRange(state: State): Int","title":"computeHorizontalScrollRange"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-scroll-vector-for-position/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / computeScrollVectorForPosition computeScrollVectorForPosition \u00b6 open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ?","title":"Compute scroll vector for position"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-scroll-vector-for-position/#computescrollvectorforposition","text":"open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ?","title":"computeScrollVectorForPosition"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-vertical-scroll-extent/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / computeVerticalScrollExtent computeVerticalScrollExtent \u00b6 open fun computeVerticalScrollExtent(state: State): Int","title":"Compute vertical scroll extent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-vertical-scroll-extent/#computeverticalscrollextent","text":"open fun computeVerticalScrollExtent(state: State): Int","title":"computeVerticalScrollExtent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-vertical-scroll-offset/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / computeVerticalScrollOffset computeVerticalScrollOffset \u00b6 open fun computeVerticalScrollOffset(state: State): Int","title":"Compute vertical scroll offset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-vertical-scroll-offset/#computeverticalscrolloffset","text":"open fun computeVerticalScrollOffset(state: State): Int","title":"computeVerticalScrollOffset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-vertical-scroll-range/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / computeVerticalScrollRange computeVerticalScrollRange \u00b6 open fun computeVerticalScrollRange(state: State): Int","title":"Compute vertical scroll range"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/compute-vertical-scroll-range/#computeverticalscrollrange","text":"open fun computeVerticalScrollRange(state: State): Int","title":"computeVerticalScrollRange"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/is-hover/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / isHover isHover \u00b6 open fun isHover(view: View !): Boolean Returns true if view is the current hover header.","title":"Is hover"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/is-hover/#ishover","text":"open fun isHover(view: View !): Boolean Returns true if view is the current hover header.","title":"isHover"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-adapter-changed/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / onAdapterChanged onAdapterChanged \u00b6 open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit","title":"On adapter changed"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-adapter-changed/#onadapterchanged","text":"open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit","title":"onAdapterChanged"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-attached-to-window/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / onAttachedToWindow onAttachedToWindow \u00b6 open fun onAttachedToWindow(view: RecyclerView!): Unit","title":"On attached to window"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-attached-to-window/#onattachedtowindow","text":"open fun onAttachedToWindow(view: RecyclerView!): Unit","title":"onAttachedToWindow"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-focus-search-failed/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / onFocusSearchFailed onFocusSearchFailed \u00b6 open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ?","title":"On focus search failed"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-focus-search-failed/#onfocussearchfailed","text":"open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ?","title":"onFocusSearchFailed"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-layout-children/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / onLayoutChildren onLayoutChildren \u00b6 open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit","title":"On layout children"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-layout-children/#onlayoutchildren","text":"open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit","title":"onLayoutChildren"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-restore-instance-state/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / onRestoreInstanceState onRestoreInstanceState \u00b6 open fun onRestoreInstanceState(state: Parcelable !): Unit","title":"On restore instance state"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-restore-instance-state/#onrestoreinstancestate","text":"open fun onRestoreInstanceState(state: Parcelable !): Unit","title":"onRestoreInstanceState"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-save-instance-state/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / onSaveInstanceState onSaveInstanceState \u00b6 open fun onSaveInstanceState(): Parcelable ?","title":"On save instance state"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/on-save-instance-state/#onsaveinstancestate","text":"open fun onSaveInstanceState(): Parcelable ?","title":"onSaveInstanceState"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/scroll-horizontally-by/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / scrollHorizontallyBy scrollHorizontallyBy \u00b6 open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int","title":"Scroll horizontally by"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/scroll-horizontally-by/#scrollhorizontallyby","text":"open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int","title":"scrollHorizontallyBy"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/scroll-to-position-with-offset/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / scrollToPositionWithOffset scrollToPositionWithOffset \u00b6 open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit","title":"Scroll to position with offset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/scroll-to-position-with-offset/#scrolltopositionwithoffset","text":"open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit","title":"scrollToPositionWithOffset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/scroll-to-position/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / scrollToPosition scrollToPosition \u00b6 open fun scrollToPosition(position: Int ): Unit","title":"Scroll to position"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/scroll-to-position/#scrolltoposition","text":"open fun scrollToPosition(position: Int ): Unit","title":"scrollToPosition"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/scroll-vertically-by/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / scrollVerticallyBy scrollVerticallyBy \u00b6 open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int","title":"Scroll vertically by"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/scroll-vertically-by/#scrollverticallyby","text":"open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int","title":"scrollVerticallyBy"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/set-hover-translation-x/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / setHoverTranslationX setHoverTranslationX \u00b6 open fun setHoverTranslationX(translationX: Float ): Unit Offsets the horizontal location of the hover header relative to the its default position.","title":"Set hover translation x"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/set-hover-translation-x/#sethovertranslationx","text":"open fun setHoverTranslationX(translationX: Float ): Unit Offsets the horizontal location of the hover header relative to the its default position.","title":"setHoverTranslationX"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/set-hover-translation-y/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / setHoverTranslationY setHoverTranslationY \u00b6 open fun setHoverTranslationY(translationY: Float ): Unit Offsets the vertical location of the hover header relative to the its default position.","title":"Set hover translation y"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/set-hover-translation-y/#sethovertranslationy","text":"open fun setHoverTranslationY(translationY: Float ): Unit Offsets the vertical location of the hover header relative to the its default position.","title":"setHoverTranslationY"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/set-scroll-enabled/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / setScrollEnabled setScrollEnabled \u00b6 open fun setScrollEnabled(enabled: Boolean ): HoverLinearLayoutManager !","title":"Set scroll enabled"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/set-scroll-enabled/#setscrollenabled","text":"open fun setScrollEnabled(enabled: Boolean ): HoverLinearLayoutManager !","title":"setScrollEnabled"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/smooth-scroll-to-position/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / smoothScrollToPosition smoothScrollToPosition \u00b6 open fun smoothScrollToPosition(recyclerView: RecyclerView!, state: State!, position: Int ): Unit","title":"Smooth scroll to position"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/smooth-scroll-to-position/#smoothscrolltoposition","text":"open fun smoothScrollToPosition(recyclerView: RecyclerView!, state: State!, position: Int ): Unit","title":"smoothScrollToPosition"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / SavedState SavedState \u00b6 open class SavedState : Parcelable Constructors \u00b6 Name Summary <init> SavedState() SavedState(in: Parcel !) Properties \u00b6 Name Summary CREATOR static val CREATOR: Creator <SavedState!>! Functions \u00b6 Name Summary describeContents open fun describeContents(): Int writeToParcel open fun writeToParcel(dest: Parcel , flags: Int ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/#savedstate","text":"open class SavedState : Parcelable","title":"SavedState"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/#constructors","text":"Name Summary <init> SavedState() SavedState(in: Parcel !)","title":"Constructors"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/#properties","text":"Name Summary CREATOR static val CREATOR: Creator <SavedState!>!","title":"Properties"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/#functions","text":"Name Summary describeContents open fun describeContents(): Int writeToParcel open fun writeToParcel(dest: Parcel , flags: Int ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/-c-r-e-a-t-o-r/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / SavedState / CREATOR CREATOR \u00b6 static val CREATOR: Creator <SavedState!>!","title":" c r e a t o r"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator <SavedState!>!","title":"CREATOR"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/-init-/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / SavedState / <init> <init> \u00b6 SavedState() SavedState(in: Parcel !)","title":" init "},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/-init-/#init","text":"SavedState() SavedState(in: Parcel !)","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/describe-contents/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / SavedState / describeContents describeContents \u00b6 open fun describeContents(): Int","title":"Describe contents"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/write-to-parcel/","text":"brv / com.drake.brv.layoutmanager / HoverLinearLayoutManager / SavedState / writeToParcel writeToParcel \u00b6 open fun writeToParcel(@NonNull dest: Parcel , flags: Int ): Unit","title":"Write to parcel"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-linear-layout-manager/-saved-state/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(@NonNull dest: Parcel , flags: Int ): Unit","title":"writeToParcel"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager HoverStaggeredGridLayoutManager \u00b6 open class HoverStaggeredGridLayoutManager : StaggeredGridLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 Link https://github.com/Doist/RecyclerViewExtensions Types \u00b6 Name Summary SavedState open class SavedState : Parcelable Constructors \u00b6 Name Summary <init> HoverStaggeredGridLayoutManager(spanCount: Int , orientation: Int ) HoverStaggeredGridLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int ) Functions \u00b6 Name Summary canScrollHorizontally open fun canScrollHorizontally(): Boolean canScrollVertically open fun canScrollVertically(): Boolean computeHorizontalScrollExtent open fun computeHorizontalScrollExtent(state: State): Int computeHorizontalScrollOffset open fun computeHorizontalScrollOffset(state: State): Int computeHorizontalScrollRange open fun computeHorizontalScrollRange(state: State): Int computeScrollVectorForPosition open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ? computeVerticalScrollExtent open fun computeVerticalScrollExtent(state: State): Int computeVerticalScrollOffset open fun computeVerticalScrollOffset(state: State): Int computeVerticalScrollRange open fun computeVerticalScrollRange(state: State): Int isHover Returns true if view is the current hover header. open fun isHover(view: View !): Boolean onAdapterChanged open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit onAttachedToWindow open fun onAttachedToWindow(view: RecyclerView!): Unit onFocusSearchFailed open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ? onLayoutChildren open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit onRestoreInstanceState open fun onRestoreInstanceState(state: Parcelable !): Unit onSaveInstanceState open fun onSaveInstanceState(): Parcelable ? scrollHorizontallyBy open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int scrollToPosition open fun scrollToPosition(position: Int ): Unit scrollToPositionWithOffset open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit scrollVerticallyBy open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int setHoverTranslationX Offsets the horizontal location of the hover header relative to the its default position. open fun setHoverTranslationX(translationX: Float ): Unit setHoverTranslationY Offsets the vertical location of the hover header relative to the its default position. open fun setHoverTranslationY(translationY: Float ): Unit setScrollEnabled open fun setScrollEnabled(enabled: Boolean ): HoverStaggeredGridLayoutManager !","title":"Index"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/#hoverstaggeredgridlayoutmanager","text":"open class HoverStaggeredGridLayoutManager : StaggeredGridLayoutManager Created by jay on 2017/12/4 \u4e0a\u534810:57 Link https://github.com/Doist/RecyclerViewExtensions","title":"HoverStaggeredGridLayoutManager"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/#types","text":"Name Summary SavedState open class SavedState : Parcelable","title":"Types"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/#constructors","text":"Name Summary <init> HoverStaggeredGridLayoutManager(spanCount: Int , orientation: Int ) HoverStaggeredGridLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int )","title":"Constructors"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/#functions","text":"Name Summary canScrollHorizontally open fun canScrollHorizontally(): Boolean canScrollVertically open fun canScrollVertically(): Boolean computeHorizontalScrollExtent open fun computeHorizontalScrollExtent(state: State): Int computeHorizontalScrollOffset open fun computeHorizontalScrollOffset(state: State): Int computeHorizontalScrollRange open fun computeHorizontalScrollRange(state: State): Int computeScrollVectorForPosition open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ? computeVerticalScrollExtent open fun computeVerticalScrollExtent(state: State): Int computeVerticalScrollOffset open fun computeVerticalScrollOffset(state: State): Int computeVerticalScrollRange open fun computeVerticalScrollRange(state: State): Int isHover Returns true if view is the current hover header. open fun isHover(view: View !): Boolean onAdapterChanged open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit onAttachedToWindow open fun onAttachedToWindow(view: RecyclerView!): Unit onFocusSearchFailed open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ? onLayoutChildren open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit onRestoreInstanceState open fun onRestoreInstanceState(state: Parcelable !): Unit onSaveInstanceState open fun onSaveInstanceState(): Parcelable ? scrollHorizontallyBy open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int scrollToPosition open fun scrollToPosition(position: Int ): Unit scrollToPositionWithOffset open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit scrollVerticallyBy open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int setHoverTranslationX Offsets the horizontal location of the hover header relative to the its default position. open fun setHoverTranslationX(translationX: Float ): Unit setHoverTranslationY Offsets the vertical location of the hover header relative to the its default position. open fun setHoverTranslationY(translationY: Float ): Unit setScrollEnabled open fun setScrollEnabled(enabled: Boolean ): HoverStaggeredGridLayoutManager !","title":"Functions"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-init-/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / <init> <init> \u00b6 HoverStaggeredGridLayoutManager(spanCount: Int , orientation: Int ) HoverStaggeredGridLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int )","title":" init "},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-init-/#init","text":"HoverStaggeredGridLayoutManager(spanCount: Int , orientation: Int ) HoverStaggeredGridLayoutManager(context: Context !, attrs: AttributeSet !, defStyleAttr: Int , defStyleRes: Int )","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/can-scroll-horizontally/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / canScrollHorizontally canScrollHorizontally \u00b6 open fun canScrollHorizontally(): Boolean","title":"Can scroll horizontally"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/can-scroll-horizontally/#canscrollhorizontally","text":"open fun canScrollHorizontally(): Boolean","title":"canScrollHorizontally"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/can-scroll-vertically/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / canScrollVertically canScrollVertically \u00b6 open fun canScrollVertically(): Boolean","title":"Can scroll vertically"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/can-scroll-vertically/#canscrollvertically","text":"open fun canScrollVertically(): Boolean","title":"canScrollVertically"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-horizontal-scroll-extent/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / computeHorizontalScrollExtent computeHorizontalScrollExtent \u00b6 open fun computeHorizontalScrollExtent(state: State): Int","title":"Compute horizontal scroll extent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-horizontal-scroll-extent/#computehorizontalscrollextent","text":"open fun computeHorizontalScrollExtent(state: State): Int","title":"computeHorizontalScrollExtent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-horizontal-scroll-offset/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / computeHorizontalScrollOffset computeHorizontalScrollOffset \u00b6 open fun computeHorizontalScrollOffset(state: State): Int","title":"Compute horizontal scroll offset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-horizontal-scroll-offset/#computehorizontalscrolloffset","text":"open fun computeHorizontalScrollOffset(state: State): Int","title":"computeHorizontalScrollOffset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-horizontal-scroll-range/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / computeHorizontalScrollRange computeHorizontalScrollRange \u00b6 open fun computeHorizontalScrollRange(state: State): Int","title":"Compute horizontal scroll range"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-horizontal-scroll-range/#computehorizontalscrollrange","text":"open fun computeHorizontalScrollRange(state: State): Int","title":"computeHorizontalScrollRange"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-scroll-vector-for-position/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / computeScrollVectorForPosition computeScrollVectorForPosition \u00b6 open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ?","title":"Compute scroll vector for position"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-scroll-vector-for-position/#computescrollvectorforposition","text":"open fun computeScrollVectorForPosition(targetPosition: Int ): PointF ?","title":"computeScrollVectorForPosition"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-vertical-scroll-extent/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / computeVerticalScrollExtent computeVerticalScrollExtent \u00b6 open fun computeVerticalScrollExtent(state: State): Int","title":"Compute vertical scroll extent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-vertical-scroll-extent/#computeverticalscrollextent","text":"open fun computeVerticalScrollExtent(state: State): Int","title":"computeVerticalScrollExtent"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-vertical-scroll-offset/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / computeVerticalScrollOffset computeVerticalScrollOffset \u00b6 open fun computeVerticalScrollOffset(state: State): Int","title":"Compute vertical scroll offset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-vertical-scroll-offset/#computeverticalscrolloffset","text":"open fun computeVerticalScrollOffset(state: State): Int","title":"computeVerticalScrollOffset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-vertical-scroll-range/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / computeVerticalScrollRange computeVerticalScrollRange \u00b6 open fun computeVerticalScrollRange(state: State): Int","title":"Compute vertical scroll range"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/compute-vertical-scroll-range/#computeverticalscrollrange","text":"open fun computeVerticalScrollRange(state: State): Int","title":"computeVerticalScrollRange"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/is-hover/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / isHover isHover \u00b6 open fun isHover(view: View !): Boolean Returns true if view is the current hover header.","title":"Is hover"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/is-hover/#ishover","text":"open fun isHover(view: View !): Boolean Returns true if view is the current hover header.","title":"isHover"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-adapter-changed/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / onAdapterChanged onAdapterChanged \u00b6 open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit","title":"On adapter changed"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-adapter-changed/#onadapterchanged","text":"open fun onAdapterChanged(oldAdapter: Adapter<ViewHolder!>?, newAdapter: Adapter<ViewHolder!>?): Unit","title":"onAdapterChanged"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-attached-to-window/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / onAttachedToWindow onAttachedToWindow \u00b6 open fun onAttachedToWindow(view: RecyclerView!): Unit","title":"On attached to window"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-attached-to-window/#onattachedtowindow","text":"open fun onAttachedToWindow(view: RecyclerView!): Unit","title":"onAttachedToWindow"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-focus-search-failed/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / onFocusSearchFailed onFocusSearchFailed \u00b6 open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ?","title":"On focus search failed"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-focus-search-failed/#onfocussearchfailed","text":"open fun onFocusSearchFailed(focused: View , focusDirection: Int , recycler: Recycler, state: State): View ?","title":"onFocusSearchFailed"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-layout-children/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / onLayoutChildren onLayoutChildren \u00b6 open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit","title":"On layout children"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-layout-children/#onlayoutchildren","text":"open fun onLayoutChildren(recycler: Recycler!, state: State!): Unit","title":"onLayoutChildren"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-restore-instance-state/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / onRestoreInstanceState onRestoreInstanceState \u00b6 open fun onRestoreInstanceState(state: Parcelable !): Unit","title":"On restore instance state"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-restore-instance-state/#onrestoreinstancestate","text":"open fun onRestoreInstanceState(state: Parcelable !): Unit","title":"onRestoreInstanceState"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-save-instance-state/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / onSaveInstanceState onSaveInstanceState \u00b6 open fun onSaveInstanceState(): Parcelable ?","title":"On save instance state"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/on-save-instance-state/#onsaveinstancestate","text":"open fun onSaveInstanceState(): Parcelable ?","title":"onSaveInstanceState"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/scroll-horizontally-by/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / scrollHorizontallyBy scrollHorizontallyBy \u00b6 open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int","title":"Scroll horizontally by"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/scroll-horizontally-by/#scrollhorizontallyby","text":"open fun scrollHorizontallyBy(dx: Int , recycler: Recycler!, state: State!): Int","title":"scrollHorizontallyBy"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/scroll-to-position-with-offset/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / scrollToPositionWithOffset scrollToPositionWithOffset \u00b6 open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit","title":"Scroll to position with offset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/scroll-to-position-with-offset/#scrolltopositionwithoffset","text":"open fun scrollToPositionWithOffset(position: Int , offset: Int ): Unit","title":"scrollToPositionWithOffset"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/scroll-to-position/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / scrollToPosition scrollToPosition \u00b6 open fun scrollToPosition(position: Int ): Unit","title":"Scroll to position"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/scroll-to-position/#scrolltoposition","text":"open fun scrollToPosition(position: Int ): Unit","title":"scrollToPosition"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/scroll-vertically-by/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / scrollVerticallyBy scrollVerticallyBy \u00b6 open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int","title":"Scroll vertically by"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/scroll-vertically-by/#scrollverticallyby","text":"open fun scrollVerticallyBy(dy: Int , recycler: Recycler!, state: State!): Int","title":"scrollVerticallyBy"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/set-hover-translation-x/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / setHoverTranslationX setHoverTranslationX \u00b6 open fun setHoverTranslationX(translationX: Float ): Unit Offsets the horizontal location of the hover header relative to the its default position.","title":"Set hover translation x"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/set-hover-translation-x/#sethovertranslationx","text":"open fun setHoverTranslationX(translationX: Float ): Unit Offsets the horizontal location of the hover header relative to the its default position.","title":"setHoverTranslationX"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/set-hover-translation-y/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / setHoverTranslationY setHoverTranslationY \u00b6 open fun setHoverTranslationY(translationY: Float ): Unit Offsets the vertical location of the hover header relative to the its default position.","title":"Set hover translation y"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/set-hover-translation-y/#sethovertranslationy","text":"open fun setHoverTranslationY(translationY: Float ): Unit Offsets the vertical location of the hover header relative to the its default position.","title":"setHoverTranslationY"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/set-scroll-enabled/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / setScrollEnabled setScrollEnabled \u00b6 open fun setScrollEnabled(enabled: Boolean ): HoverStaggeredGridLayoutManager !","title":"Set scroll enabled"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/set-scroll-enabled/#setscrollenabled","text":"open fun setScrollEnabled(enabled: Boolean ): HoverStaggeredGridLayoutManager !","title":"setScrollEnabled"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / SavedState SavedState \u00b6 open class SavedState : Parcelable Constructors \u00b6 Name Summary <init> SavedState() SavedState(in: Parcel !) Properties \u00b6 Name Summary CREATOR static val CREATOR: Creator <SavedState!>! Functions \u00b6 Name Summary describeContents open fun describeContents(): Int writeToParcel open fun writeToParcel(dest: Parcel , flags: Int ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/#savedstate","text":"open class SavedState : Parcelable","title":"SavedState"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/#constructors","text":"Name Summary <init> SavedState() SavedState(in: Parcel !)","title":"Constructors"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/#properties","text":"Name Summary CREATOR static val CREATOR: Creator <SavedState!>!","title":"Properties"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/#functions","text":"Name Summary describeContents open fun describeContents(): Int writeToParcel open fun writeToParcel(dest: Parcel , flags: Int ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/-c-r-e-a-t-o-r/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / SavedState / CREATOR CREATOR \u00b6 static val CREATOR: Creator <SavedState!>!","title":" c r e a t o r"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator <SavedState!>!","title":"CREATOR"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/-init-/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / SavedState / <init> <init> \u00b6 SavedState() SavedState(in: Parcel !)","title":" init "},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/-init-/#init","text":"SavedState() SavedState(in: Parcel !)","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/describe-contents/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / SavedState / describeContents describeContents \u00b6 open fun describeContents(): Int","title":"Describe contents"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/write-to-parcel/","text":"brv / com.drake.brv.layoutmanager / HoverStaggeredGridLayoutManager / SavedState / writeToParcel writeToParcel \u00b6 open fun writeToParcel(@NonNull dest: Parcel , flags: Int ): Unit","title":"Write to parcel"},{"location":"api/brv/com.drake.brv.layoutmanager/-hover-staggered-grid-layout-manager/-saved-state/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(@NonNull dest: Parcel , flags: Int ): Unit","title":"writeToParcel"},{"location":"api/brv/com.drake.brv.listener/","text":"brv / com.drake.brv.listener Package com.drake.brv.listener \u00b6 Types \u00b6 Name Summary DefaultItemTouchCallback \u9ed8\u8ba4\u5b9e\u73b0\u62d6\u62fd\u66ff\u6362\u548c\u4fa7\u6ed1\u5220\u9664 open class DefaultItemTouchCallback : Callback OnBindViewHolderListener interface OnBindViewHolderListener OnHoverAttachListener \u7531RecyclerView.Adapter\u5b9e\u73b0\u8be5\u63a5\u53e3 interface OnHoverAttachListener OnMultiStateListener open class OnMultiStateListener : OnMultiListener SnapLinearSmoothScroller class SnapLinearSmoothScroller : LinearSmoothScroller Extensions for External Classes \u00b6 Name Summary android.view.View","title":"Index"},{"location":"api/brv/com.drake.brv.listener/#package-comdrakebrvlistener","text":"","title":"Package com.drake.brv.listener"},{"location":"api/brv/com.drake.brv.listener/#types","text":"Name Summary DefaultItemTouchCallback \u9ed8\u8ba4\u5b9e\u73b0\u62d6\u62fd\u66ff\u6362\u548c\u4fa7\u6ed1\u5220\u9664 open class DefaultItemTouchCallback : Callback OnBindViewHolderListener interface OnBindViewHolderListener OnHoverAttachListener \u7531RecyclerView.Adapter\u5b9e\u73b0\u8be5\u63a5\u53e3 interface OnHoverAttachListener OnMultiStateListener open class OnMultiStateListener : OnMultiListener SnapLinearSmoothScroller class SnapLinearSmoothScroller : LinearSmoothScroller","title":"Types"},{"location":"api/brv/com.drake.brv.listener/#extensions-for-external-classes","text":"Name Summary android.view.View","title":"Extensions for External Classes"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/","text":"brv / com.drake.brv.listener / DefaultItemTouchCallback DefaultItemTouchCallback \u00b6 open class DefaultItemTouchCallback : Callback \u9ed8\u8ba4\u5b9e\u73b0\u62d6\u62fd\u66ff\u6362\u548c\u4fa7\u6ed1\u5220\u9664 Constructors \u00b6 Name Summary <init> \u9ed8\u8ba4\u5b9e\u73b0\u62d6\u62fd\u66ff\u6362\u548c\u4fa7\u6ed1\u5220\u9664 DefaultItemTouchCallback(adapter: BindingAdapter ) Properties \u00b6 Name Summary adapter var adapter: BindingAdapter Functions \u00b6 Name Summary getMovementFlags open fun getMovementFlags(recyclerView: RecyclerView, viewHolder: ViewHolder): Int getSwipeThreshold open fun getSwipeThreshold(viewHolder: ViewHolder): Float onChildDraw open fun onChildDraw(c: Canvas , recyclerView: RecyclerView, viewHolder: ViewHolder, dX: Float , dY: Float , actionState: Int , isCurrentlyActive: Boolean ): Unit onDrag \u62d6\u62fd\u66ff\u6362\u6210\u529f open fun onDrag(source: BindingViewHolder, target: BindingViewHolder): Unit onMove open fun onMove(recyclerView: RecyclerView, viewHolder: ViewHolder, target: ViewHolder): Boolean onSwiped open fun onSwiped(viewHolder: ViewHolder, direction: Int ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/#defaultitemtouchcallback","text":"open class DefaultItemTouchCallback : Callback \u9ed8\u8ba4\u5b9e\u73b0\u62d6\u62fd\u66ff\u6362\u548c\u4fa7\u6ed1\u5220\u9664","title":"DefaultItemTouchCallback"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/#constructors","text":"Name Summary <init> \u9ed8\u8ba4\u5b9e\u73b0\u62d6\u62fd\u66ff\u6362\u548c\u4fa7\u6ed1\u5220\u9664 DefaultItemTouchCallback(adapter: BindingAdapter )","title":"Constructors"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/#properties","text":"Name Summary adapter var adapter: BindingAdapter","title":"Properties"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/#functions","text":"Name Summary getMovementFlags open fun getMovementFlags(recyclerView: RecyclerView, viewHolder: ViewHolder): Int getSwipeThreshold open fun getSwipeThreshold(viewHolder: ViewHolder): Float onChildDraw open fun onChildDraw(c: Canvas , recyclerView: RecyclerView, viewHolder: ViewHolder, dX: Float , dY: Float , actionState: Int , isCurrentlyActive: Boolean ): Unit onDrag \u62d6\u62fd\u66ff\u6362\u6210\u529f open fun onDrag(source: BindingViewHolder, target: BindingViewHolder): Unit onMove open fun onMove(recyclerView: RecyclerView, viewHolder: ViewHolder, target: ViewHolder): Boolean onSwiped open fun onSwiped(viewHolder: ViewHolder, direction: Int ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/-init-/","text":"brv / com.drake.brv.listener / DefaultItemTouchCallback / <init> <init> \u00b6 DefaultItemTouchCallback(adapter: BindingAdapter ) \u9ed8\u8ba4\u5b9e\u73b0\u62d6\u62fd\u66ff\u6362\u548c\u4fa7\u6ed1\u5220\u9664","title":" init "},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/-init-/#init","text":"DefaultItemTouchCallback(adapter: BindingAdapter ) \u9ed8\u8ba4\u5b9e\u73b0\u62d6\u62fd\u66ff\u6362\u548c\u4fa7\u6ed1\u5220\u9664","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/adapter/","text":"brv / com.drake.brv.listener / DefaultItemTouchCallback / adapter adapter \u00b6 var adapter: BindingAdapter","title":"Adapter"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/adapter/#adapter","text":"var adapter: BindingAdapter","title":"adapter"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/get-movement-flags/","text":"brv / com.drake.brv.listener / DefaultItemTouchCallback / getMovementFlags getMovementFlags \u00b6 open fun getMovementFlags(recyclerView: RecyclerView, viewHolder: ViewHolder): Int","title":"Get movement flags"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/get-movement-flags/#getmovementflags","text":"open fun getMovementFlags(recyclerView: RecyclerView, viewHolder: ViewHolder): Int","title":"getMovementFlags"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/get-swipe-threshold/","text":"brv / com.drake.brv.listener / DefaultItemTouchCallback / getSwipeThreshold getSwipeThreshold \u00b6 open fun getSwipeThreshold(viewHolder: ViewHolder): Float","title":"Get swipe threshold"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/get-swipe-threshold/#getswipethreshold","text":"open fun getSwipeThreshold(viewHolder: ViewHolder): Float","title":"getSwipeThreshold"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/on-child-draw/","text":"brv / com.drake.brv.listener / DefaultItemTouchCallback / onChildDraw onChildDraw \u00b6 open fun onChildDraw(c: Canvas , recyclerView: RecyclerView, viewHolder: ViewHolder, dX: Float , dY: Float , actionState: Int , isCurrentlyActive: Boolean ): Unit","title":"On child draw"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/on-child-draw/#onchilddraw","text":"open fun onChildDraw(c: Canvas , recyclerView: RecyclerView, viewHolder: ViewHolder, dX: Float , dY: Float , actionState: Int , isCurrentlyActive: Boolean ): Unit","title":"onChildDraw"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/on-drag/","text":"brv / com.drake.brv.listener / DefaultItemTouchCallback / onDrag onDrag \u00b6 open fun onDrag(source: BindingViewHolder, target: BindingViewHolder): Unit \u62d6\u62fd\u66ff\u6362\u6210\u529f","title":"On drag"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/on-drag/#ondrag","text":"open fun onDrag(source: BindingViewHolder, target: BindingViewHolder): Unit \u62d6\u62fd\u66ff\u6362\u6210\u529f","title":"onDrag"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/on-move/","text":"brv / com.drake.brv.listener / DefaultItemTouchCallback / onMove onMove \u00b6 open fun onMove(recyclerView: RecyclerView, viewHolder: ViewHolder, target: ViewHolder): Boolean","title":"On move"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/on-move/#onmove","text":"open fun onMove(recyclerView: RecyclerView, viewHolder: ViewHolder, target: ViewHolder): Boolean","title":"onMove"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/on-swiped/","text":"brv / com.drake.brv.listener / DefaultItemTouchCallback / onSwiped onSwiped \u00b6 open fun onSwiped(viewHolder: ViewHolder, direction: Int ): Unit","title":"On swiped"},{"location":"api/brv/com.drake.brv.listener/-default-item-touch-callback/on-swiped/#onswiped","text":"open fun onSwiped(viewHolder: ViewHolder, direction: Int ): Unit","title":"onSwiped"},{"location":"api/brv/com.drake.brv.listener/-on-bind-view-holder-listener/","text":"brv / com.drake.brv.listener / OnBindViewHolderListener OnBindViewHolderListener \u00b6 interface OnBindViewHolderListener Functions \u00b6 Name Summary onBindViewHolder abstract fun onBindViewHolder(rv: RecyclerView, adapter: BindingAdapter , holder: BindingViewHolder, position: Int ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.listener/-on-bind-view-holder-listener/#onbindviewholderlistener","text":"interface OnBindViewHolderListener","title":"OnBindViewHolderListener"},{"location":"api/brv/com.drake.brv.listener/-on-bind-view-holder-listener/#functions","text":"Name Summary onBindViewHolder abstract fun onBindViewHolder(rv: RecyclerView, adapter: BindingAdapter , holder: BindingViewHolder, position: Int ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.listener/-on-bind-view-holder-listener/on-bind-view-holder/","text":"brv / com.drake.brv.listener / OnBindViewHolderListener / onBindViewHolder onBindViewHolder \u00b6 abstract fun onBindViewHolder(rv: RecyclerView, adapter: BindingAdapter , holder: BindingViewHolder, position: Int ): Unit","title":"On bind view holder"},{"location":"api/brv/com.drake.brv.listener/-on-bind-view-holder-listener/on-bind-view-holder/#onbindviewholder","text":"abstract fun onBindViewHolder(rv: RecyclerView, adapter: BindingAdapter , holder: BindingViewHolder, position: Int ): Unit","title":"onBindViewHolder"},{"location":"api/brv/com.drake.brv.listener/-on-hover-attach-listener/","text":"brv / com.drake.brv.listener / OnHoverAttachListener OnHoverAttachListener \u00b6 interface OnHoverAttachListener \u7531RecyclerView.Adapter\u5b9e\u73b0\u8be5\u63a5\u53e3 Functions \u00b6 Name Summary attachHover \u5f53\u6761\u76ee\u9644\u7740\u65f6 detachHover \u8be5\u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u8fd8\u539f abstract fun attachHover(v: View ): Unit detachHover \u6761\u76ee\u5206\u79bb\u65f6 \u4e00\u822c\u7528\u4e8e\u8fd8\u539f attachHover \u51fd\u6570 abstract fun detachHover(v: View ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.listener/-on-hover-attach-listener/#onhoverattachlistener","text":"interface OnHoverAttachListener \u7531RecyclerView.Adapter\u5b9e\u73b0\u8be5\u63a5\u53e3","title":"OnHoverAttachListener"},{"location":"api/brv/com.drake.brv.listener/-on-hover-attach-listener/#functions","text":"Name Summary attachHover \u5f53\u6761\u76ee\u9644\u7740\u65f6 detachHover \u8be5\u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u8fd8\u539f abstract fun attachHover(v: View ): Unit detachHover \u6761\u76ee\u5206\u79bb\u65f6 \u4e00\u822c\u7528\u4e8e\u8fd8\u539f attachHover \u51fd\u6570 abstract fun detachHover(v: View ): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.listener/-on-hover-attach-listener/attach-hover/","text":"brv / com.drake.brv.listener / OnHoverAttachListener / attachHover attachHover \u00b6 abstract fun attachHover(v: View ): Unit \u5f53\u6761\u76ee\u9644\u7740\u65f6 detachHover \u8be5\u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u8fd8\u539f","title":"Attach hover"},{"location":"api/brv/com.drake.brv.listener/-on-hover-attach-listener/attach-hover/#attachhover","text":"abstract fun attachHover(v: View ): Unit \u5f53\u6761\u76ee\u9644\u7740\u65f6 detachHover \u8be5\u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u8fd8\u539f","title":"attachHover"},{"location":"api/brv/com.drake.brv.listener/-on-hover-attach-listener/detach-hover/","text":"brv / com.drake.brv.listener / OnHoverAttachListener / detachHover detachHover \u00b6 abstract fun detachHover(v: View ): Unit \u6761\u76ee\u5206\u79bb\u65f6 \u4e00\u822c\u7528\u4e8e\u8fd8\u539f attachHover \u51fd\u6570","title":"Detach hover"},{"location":"api/brv/com.drake.brv.listener/-on-hover-attach-listener/detach-hover/#detachhover","text":"abstract fun detachHover(v: View ): Unit \u6761\u76ee\u5206\u79bb\u65f6 \u4e00\u822c\u7528\u4e8e\u8fd8\u539f attachHover \u51fd\u6570","title":"detachHover"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/","text":"brv / com.drake.brv.listener / OnMultiStateListener OnMultiStateListener \u00b6 open class OnMultiStateListener : OnMultiListener Constructors \u00b6 Name Summary <init> OnMultiStateListener() Functions \u00b6 Name Summary onFooterFinish open fun onFooterFinish(footer: RefreshFooter?, success: Boolean ): Unit onFooterMoving open fun onFooterMoving(footer: RefreshFooter?, isDragging: Boolean , percent: Float , offset: Int , footerHeight: Int , maxDragHeight: Int ): Unit onFooterReleased open fun onFooterReleased(footer: RefreshFooter?, footerHeight: Int , maxDragHeight: Int ): Unit onFooterStartAnimator open fun onFooterStartAnimator(footer: RefreshFooter?, footerHeight: Int , maxDragHeight: Int ): Unit onHeaderFinish open fun onHeaderFinish(header: RefreshHeader?, success: Boolean ): Unit onHeaderMoving open fun onHeaderMoving(header: RefreshHeader?, isDragging: Boolean , percent: Float , offset: Int , headerHeight: Int , maxDragHeight: Int ): Unit onHeaderReleased open fun onHeaderReleased(header: RefreshHeader?, headerHeight: Int , maxDragHeight: Int ): Unit onHeaderStartAnimator open fun onHeaderStartAnimator(header: RefreshHeader?, headerHeight: Int , maxDragHeight: Int ): Unit onLoadMore open fun onLoadMore(refreshLayout: RefreshLayout): Unit onRefresh open fun onRefresh(refreshLayout: RefreshLayout): Unit onStateChanged open fun onStateChanged(refreshLayout: RefreshLayout, oldState: RefreshState, newState: RefreshState): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/#onmultistatelistener","text":"open class OnMultiStateListener : OnMultiListener","title":"OnMultiStateListener"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/#constructors","text":"Name Summary <init> OnMultiStateListener()","title":"Constructors"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/#functions","text":"Name Summary onFooterFinish open fun onFooterFinish(footer: RefreshFooter?, success: Boolean ): Unit onFooterMoving open fun onFooterMoving(footer: RefreshFooter?, isDragging: Boolean , percent: Float , offset: Int , footerHeight: Int , maxDragHeight: Int ): Unit onFooterReleased open fun onFooterReleased(footer: RefreshFooter?, footerHeight: Int , maxDragHeight: Int ): Unit onFooterStartAnimator open fun onFooterStartAnimator(footer: RefreshFooter?, footerHeight: Int , maxDragHeight: Int ): Unit onHeaderFinish open fun onHeaderFinish(header: RefreshHeader?, success: Boolean ): Unit onHeaderMoving open fun onHeaderMoving(header: RefreshHeader?, isDragging: Boolean , percent: Float , offset: Int , headerHeight: Int , maxDragHeight: Int ): Unit onHeaderReleased open fun onHeaderReleased(header: RefreshHeader?, headerHeight: Int , maxDragHeight: Int ): Unit onHeaderStartAnimator open fun onHeaderStartAnimator(header: RefreshHeader?, headerHeight: Int , maxDragHeight: Int ): Unit onLoadMore open fun onLoadMore(refreshLayout: RefreshLayout): Unit onRefresh open fun onRefresh(refreshLayout: RefreshLayout): Unit onStateChanged open fun onStateChanged(refreshLayout: RefreshLayout, oldState: RefreshState, newState: RefreshState): Unit","title":"Functions"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/-init-/","text":"brv / com.drake.brv.listener / OnMultiStateListener / <init> <init> \u00b6 OnMultiStateListener()","title":" init "},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/-init-/#init","text":"OnMultiStateListener()","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-footer-finish/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onFooterFinish onFooterFinish \u00b6 open fun onFooterFinish(footer: RefreshFooter?, success: Boolean ): Unit","title":"On footer finish"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-footer-finish/#onfooterfinish","text":"open fun onFooterFinish(footer: RefreshFooter?, success: Boolean ): Unit","title":"onFooterFinish"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-footer-moving/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onFooterMoving onFooterMoving \u00b6 open fun onFooterMoving(footer: RefreshFooter?, isDragging: Boolean , percent: Float , offset: Int , footerHeight: Int , maxDragHeight: Int ): Unit","title":"On footer moving"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-footer-moving/#onfootermoving","text":"open fun onFooterMoving(footer: RefreshFooter?, isDragging: Boolean , percent: Float , offset: Int , footerHeight: Int , maxDragHeight: Int ): Unit","title":"onFooterMoving"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-footer-released/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onFooterReleased onFooterReleased \u00b6 open fun onFooterReleased(footer: RefreshFooter?, footerHeight: Int , maxDragHeight: Int ): Unit","title":"On footer released"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-footer-released/#onfooterreleased","text":"open fun onFooterReleased(footer: RefreshFooter?, footerHeight: Int , maxDragHeight: Int ): Unit","title":"onFooterReleased"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-footer-start-animator/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onFooterStartAnimator onFooterStartAnimator \u00b6 open fun onFooterStartAnimator(footer: RefreshFooter?, footerHeight: Int , maxDragHeight: Int ): Unit","title":"On footer start animator"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-footer-start-animator/#onfooterstartanimator","text":"open fun onFooterStartAnimator(footer: RefreshFooter?, footerHeight: Int , maxDragHeight: Int ): Unit","title":"onFooterStartAnimator"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-header-finish/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onHeaderFinish onHeaderFinish \u00b6 open fun onHeaderFinish(header: RefreshHeader?, success: Boolean ): Unit","title":"On header finish"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-header-finish/#onheaderfinish","text":"open fun onHeaderFinish(header: RefreshHeader?, success: Boolean ): Unit","title":"onHeaderFinish"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-header-moving/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onHeaderMoving onHeaderMoving \u00b6 open fun onHeaderMoving(header: RefreshHeader?, isDragging: Boolean , percent: Float , offset: Int , headerHeight: Int , maxDragHeight: Int ): Unit","title":"On header moving"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-header-moving/#onheadermoving","text":"open fun onHeaderMoving(header: RefreshHeader?, isDragging: Boolean , percent: Float , offset: Int , headerHeight: Int , maxDragHeight: Int ): Unit","title":"onHeaderMoving"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-header-released/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onHeaderReleased onHeaderReleased \u00b6 open fun onHeaderReleased(header: RefreshHeader?, headerHeight: Int , maxDragHeight: Int ): Unit","title":"On header released"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-header-released/#onheaderreleased","text":"open fun onHeaderReleased(header: RefreshHeader?, headerHeight: Int , maxDragHeight: Int ): Unit","title":"onHeaderReleased"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-header-start-animator/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onHeaderStartAnimator onHeaderStartAnimator \u00b6 open fun onHeaderStartAnimator(header: RefreshHeader?, headerHeight: Int , maxDragHeight: Int ): Unit","title":"On header start animator"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-header-start-animator/#onheaderstartanimator","text":"open fun onHeaderStartAnimator(header: RefreshHeader?, headerHeight: Int , maxDragHeight: Int ): Unit","title":"onHeaderStartAnimator"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-load-more/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onLoadMore onLoadMore \u00b6 open fun onLoadMore(refreshLayout: RefreshLayout): Unit","title":"On load more"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-load-more/#onloadmore","text":"open fun onLoadMore(refreshLayout: RefreshLayout): Unit","title":"onLoadMore"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-refresh/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onRefresh onRefresh \u00b6 open fun onRefresh(refreshLayout: RefreshLayout): Unit","title":"On refresh"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-refresh/#onrefresh","text":"open fun onRefresh(refreshLayout: RefreshLayout): Unit","title":"onRefresh"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-state-changed/","text":"brv / com.drake.brv.listener / OnMultiStateListener / onStateChanged onStateChanged \u00b6 open fun onStateChanged(refreshLayout: RefreshLayout, oldState: RefreshState, newState: RefreshState): Unit","title":"On state changed"},{"location":"api/brv/com.drake.brv.listener/-on-multi-state-listener/on-state-changed/#onstatechanged","text":"open fun onStateChanged(refreshLayout: RefreshLayout, oldState: RefreshState, newState: RefreshState): Unit","title":"onStateChanged"},{"location":"api/brv/com.drake.brv.listener/-snap-linear-smooth-scroller/","text":"brv / com.drake.brv.listener / SnapLinearSmoothScroller SnapLinearSmoothScroller \u00b6 class SnapLinearSmoothScroller : LinearSmoothScroller Constructors \u00b6 Name Summary <init> SnapLinearSmoothScroller(context: Context ) Functions \u00b6 Name Summary getVerticalSnapPreference fun getVerticalSnapPreference(): Int","title":"Index"},{"location":"api/brv/com.drake.brv.listener/-snap-linear-smooth-scroller/#snaplinearsmoothscroller","text":"class SnapLinearSmoothScroller : LinearSmoothScroller","title":"SnapLinearSmoothScroller"},{"location":"api/brv/com.drake.brv.listener/-snap-linear-smooth-scroller/#constructors","text":"Name Summary <init> SnapLinearSmoothScroller(context: Context )","title":"Constructors"},{"location":"api/brv/com.drake.brv.listener/-snap-linear-smooth-scroller/#functions","text":"Name Summary getVerticalSnapPreference fun getVerticalSnapPreference(): Int","title":"Functions"},{"location":"api/brv/com.drake.brv.listener/-snap-linear-smooth-scroller/-init-/","text":"brv / com.drake.brv.listener / SnapLinearSmoothScroller / <init> <init> \u00b6 SnapLinearSmoothScroller(context: Context )","title":" init "},{"location":"api/brv/com.drake.brv.listener/-snap-linear-smooth-scroller/-init-/#init","text":"SnapLinearSmoothScroller(context: Context )","title":"&lt;init&gt;"},{"location":"api/brv/com.drake.brv.listener/-snap-linear-smooth-scroller/get-vertical-snap-preference/","text":"brv / com.drake.brv.listener / SnapLinearSmoothScroller / getVerticalSnapPreference getVerticalSnapPreference \u00b6 protected fun getVerticalSnapPreference(): Int","title":"Get vertical snap preference"},{"location":"api/brv/com.drake.brv.listener/-snap-linear-smooth-scroller/get-vertical-snap-preference/#getverticalsnappreference","text":"protected fun getVerticalSnapPreference(): Int","title":"getVerticalSnapPreference"},{"location":"api/brv/com.drake.brv.listener/android.view.-view/","text":"brv / com.drake.brv.listener / android.view.View Extensions for android.view.View \u00b6 Name Summary throttleClick fun View .throttleClick(period: Long = 500, block: View .() -> Unit ): Unit","title":"Index"},{"location":"api/brv/com.drake.brv.listener/android.view.-view/#extensions-for-androidviewview","text":"Name Summary throttleClick fun View .throttleClick(period: Long = 500, block: View .() -> Unit ): Unit","title":"Extensions for android.view.View"},{"location":"api/brv/com.drake.brv.listener/android.view.-view/throttle-click/","text":"brv / com.drake.brv.listener / android.view.View / throttleClick throttleClick \u00b6 fun View .throttleClick(period: Long = 500, block: View .() -> Unit ): Unit","title":"Throttle click"},{"location":"api/brv/com.drake.brv.listener/android.view.-view/throttle-click/#throttleclick","text":"fun View .throttleClick(period: Long = 500, block: View .() -> Unit ): Unit","title":"throttleClick"},{"location":"api/brv/com.drake.brv.utils/","text":"brv / com.drake.brv.utils Package com.drake.brv.utils \u00b6 Types \u00b6 Name Summary BRV object BRV Extensions for External Classes \u00b6 Name Summary android.app.Dialog android.view.View androidx.recyclerview.widget.RecyclerView","title":"Index"},{"location":"api/brv/com.drake.brv.utils/#package-comdrakebrvutils","text":"","title":"Package com.drake.brv.utils"},{"location":"api/brv/com.drake.brv.utils/#types","text":"Name Summary BRV object BRV","title":"Types"},{"location":"api/brv/com.drake.brv.utils/#extensions-for-external-classes","text":"Name Summary android.app.Dialog android.view.View androidx.recyclerview.widget.RecyclerView","title":"Extensions for External Classes"},{"location":"api/brv/com.drake.brv.utils/-b-r-v/","text":"brv / com.drake.brv.utils / BRV BRV \u00b6 object BRV Properties \u00b6 Name Summary modelId var modelId: Int","title":"Index"},{"location":"api/brv/com.drake.brv.utils/-b-r-v/#brv","text":"object BRV","title":"BRV"},{"location":"api/brv/com.drake.brv.utils/-b-r-v/#properties","text":"Name Summary modelId var modelId: Int","title":"Properties"},{"location":"api/brv/com.drake.brv.utils/-b-r-v/model-id/","text":"brv / com.drake.brv.utils / BRV / modelId modelId \u00b6 var modelId: Int","title":"Model id"},{"location":"api/brv/com.drake.brv.utils/-b-r-v/model-id/#modelid","text":"var modelId: Int","title":"modelId"},{"location":"api/brv/com.drake.brv.utils/android.app.-dialog/","text":"brv / com.drake.brv.utils / android.app.Dialog Extensions for android.app.Dialog \u00b6 Name Summary setup \u5feb\u901f\u4e3a\u5bf9\u8bdd\u6846\u521b\u5efa\u4e00\u4e2a\u5217\u8868 fun Dialog .setup(block: BindingAdapter .(RecyclerView) -> Unit ): Dialog","title":"Index"},{"location":"api/brv/com.drake.brv.utils/android.app.-dialog/#extensions-for-androidappdialog","text":"Name Summary setup \u5feb\u901f\u4e3a\u5bf9\u8bdd\u6846\u521b\u5efa\u4e00\u4e2a\u5217\u8868 fun Dialog .setup(block: BindingAdapter .(RecyclerView) -> Unit ): Dialog","title":"Extensions for android.app.Dialog"},{"location":"api/brv/com.drake.brv.utils/android.app.-dialog/setup/","text":"brv / com.drake.brv.utils / android.app.Dialog / setup setup \u00b6 fun Dialog .setup(block: BindingAdapter .(RecyclerView) -> Unit ): Dialog \u5feb\u901f\u4e3a\u5bf9\u8bdd\u6846\u521b\u5efa\u4e00\u4e2a\u5217\u8868","title":"Setup"},{"location":"api/brv/com.drake.brv.utils/android.app.-dialog/setup/#setup","text":"fun Dialog .setup(block: BindingAdapter .(RecyclerView) -> Unit ): Dialog \u5feb\u901f\u4e3a\u5bf9\u8bdd\u6846\u521b\u5efa\u4e00\u4e2a\u5217\u8868","title":"setup"},{"location":"api/brv/com.drake.brv.utils/android.view.-view/","text":"brv / com.drake.brv.utils / android.view.View Extensions for android.view.View \u00b6 Name Summary page PageRefreshLayout \u5305\u88f9\u5f53\u524d view fun View .page(loadMoreEnabled: Boolean = true, stateEnabled: Boolean = true): PageRefreshLayout","title":"Index"},{"location":"api/brv/com.drake.brv.utils/android.view.-view/#extensions-for-androidviewview","text":"Name Summary page PageRefreshLayout \u5305\u88f9\u5f53\u524d view fun View .page(loadMoreEnabled: Boolean = true, stateEnabled: Boolean = true): PageRefreshLayout","title":"Extensions for android.view.View"},{"location":"api/brv/com.drake.brv.utils/android.view.-view/page/","text":"brv / com.drake.brv.utils / android.view.View / page page \u00b6 fun View .page(loadMoreEnabled: Boolean = true, stateEnabled: Boolean = true): PageRefreshLayout PageRefreshLayout \u5305\u88f9\u5f53\u524d view Parameters \u00b6 loadMoreEnabled - Boolean \u542f\u7528\u4e0a\u62c9\u52a0\u8f7d stateEnabled - Boolean \u542f\u7528\u7f3a\u7701\u9875 Receiver View","title":"Page"},{"location":"api/brv/com.drake.brv.utils/android.view.-view/page/#page","text":"fun View .page(loadMoreEnabled: Boolean = true, stateEnabled: Boolean = true): PageRefreshLayout PageRefreshLayout \u5305\u88f9\u5f53\u524d view","title":"page"},{"location":"api/brv/com.drake.brv.utils/android.view.-view/page/#parameters","text":"loadMoreEnabled - Boolean \u542f\u7528\u4e0a\u62c9\u52a0\u8f7d stateEnabled - Boolean \u542f\u7528\u7f3a\u7701\u9875 Receiver View","title":"Parameters"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/","text":"brv / com.drake.brv.utils / androidx.recyclerview.widget.RecyclerView Extensions for androidx.recyclerview.widget.RecyclerView \u00b6 Name Summary addModels \u6dfb\u52a0\u6570\u636e fun RecyclerView.addModels(models: List < Any ?>?, animation: Boolean = true): Unit bindingAdapter val RecyclerView.bindingAdapter: BindingAdapter divider \u51fd\u6570\u914d\u7f6e\u5206\u5272\u7ebf \u5177\u4f53\u914d\u7f6e\u53c2\u6570\u67e5\u770b DefaultDecoration fun RecyclerView.divider(block: DefaultDecoration .() -> Unit ): RecyclerView \u6307\u5b9aDrawable\u8d44\u6e90\u4e3a\u5206\u5272\u7ebf, \u5206\u5272\u7ebf\u7684\u95f4\u8ddd\u548c\u5bbd\u5ea6\u5e94\u5728\u8d44\u6e90\u6587\u4ef6\u4e2d\u914d\u7f6e fun RecyclerView.divider(drawable: Int , orientation: DividerOrientation = DividerOrientation.HORIZONTAL): RecyclerView grid \u521b\u5efa HoverGridLayoutManager \u7f51\u683c\u5217\u8868 fun RecyclerView.grid(spanCount: Int = 1, orientation: Int = VERTICAL, reverseLayout: Boolean = false, scrollEnabled: Boolean = true): RecyclerView linear \u521b\u5efa HoverLinearLayoutManager \u7ebf\u6027\u5217\u8868 fun RecyclerView.linear(orientation: Int = VERTICAL, reverseLayout: Boolean = false, scrollEnabled: Boolean = true): RecyclerView models var RecyclerView.models: List < Any ?>? setup \u8bbe\u7f6e\u9002\u914d\u5668 fun RecyclerView.setup(block: BindingAdapter .(RecyclerView) -> Unit ): BindingAdapter staggered \u521b\u5efa HoverStaggeredGridLayoutManager \u4ea4\u9519\u5217\u8868 fun RecyclerView.staggered(spanCount: Int , orientation: Int = VERTICAL, scrollEnabled: Boolean = true): RecyclerView","title":"Index"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/#extensions-for-androidxrecyclerviewwidgetrecyclerview","text":"Name Summary addModels \u6dfb\u52a0\u6570\u636e fun RecyclerView.addModels(models: List < Any ?>?, animation: Boolean = true): Unit bindingAdapter val RecyclerView.bindingAdapter: BindingAdapter divider \u51fd\u6570\u914d\u7f6e\u5206\u5272\u7ebf \u5177\u4f53\u914d\u7f6e\u53c2\u6570\u67e5\u770b DefaultDecoration fun RecyclerView.divider(block: DefaultDecoration .() -> Unit ): RecyclerView \u6307\u5b9aDrawable\u8d44\u6e90\u4e3a\u5206\u5272\u7ebf, \u5206\u5272\u7ebf\u7684\u95f4\u8ddd\u548c\u5bbd\u5ea6\u5e94\u5728\u8d44\u6e90\u6587\u4ef6\u4e2d\u914d\u7f6e fun RecyclerView.divider(drawable: Int , orientation: DividerOrientation = DividerOrientation.HORIZONTAL): RecyclerView grid \u521b\u5efa HoverGridLayoutManager \u7f51\u683c\u5217\u8868 fun RecyclerView.grid(spanCount: Int = 1, orientation: Int = VERTICAL, reverseLayout: Boolean = false, scrollEnabled: Boolean = true): RecyclerView linear \u521b\u5efa HoverLinearLayoutManager \u7ebf\u6027\u5217\u8868 fun RecyclerView.linear(orientation: Int = VERTICAL, reverseLayout: Boolean = false, scrollEnabled: Boolean = true): RecyclerView models var RecyclerView.models: List < Any ?>? setup \u8bbe\u7f6e\u9002\u914d\u5668 fun RecyclerView.setup(block: BindingAdapter .(RecyclerView) -> Unit ): BindingAdapter staggered \u521b\u5efa HoverStaggeredGridLayoutManager \u4ea4\u9519\u5217\u8868 fun RecyclerView.staggered(spanCount: Int , orientation: Int = VERTICAL, scrollEnabled: Boolean = true): RecyclerView","title":"Extensions for androidx.recyclerview.widget.RecyclerView"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/add-models/","text":"brv / com.drake.brv.utils / androidx.recyclerview.widget.RecyclerView / addModels addModels \u00b6 fun RecyclerView.addModels(models: List < Any ?>?, animation: Boolean = true): Unit \u6dfb\u52a0\u6570\u636e Parameters \u00b6 models - \u88ab\u6dfb\u52a0\u7684\u6570\u636e animation - \u6dfb\u52a0\u6570\u636e\u662f\u5426\u663e\u793a\u52a8\u753b","title":"Add models"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/add-models/#addmodels","text":"fun RecyclerView.addModels(models: List < Any ?>?, animation: Boolean = true): Unit \u6dfb\u52a0\u6570\u636e","title":"addModels"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/add-models/#parameters","text":"models - \u88ab\u6dfb\u52a0\u7684\u6570\u636e animation - \u6dfb\u52a0\u6570\u636e\u662f\u5426\u663e\u793a\u52a8\u753b","title":"Parameters"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/binding-adapter/","text":"brv / com.drake.brv.utils / androidx.recyclerview.widget.RecyclerView / bindingAdapter bindingAdapter \u00b6 val RecyclerView.bindingAdapter: BindingAdapter","title":"Binding adapter"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/binding-adapter/#bindingadapter","text":"val RecyclerView.bindingAdapter: BindingAdapter","title":"bindingAdapter"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/divider/","text":"brv / com.drake.brv.utils / androidx.recyclerview.widget.RecyclerView / divider divider \u00b6 fun RecyclerView.divider(block: DefaultDecoration .() -> Unit ): RecyclerView \u51fd\u6570\u914d\u7f6e\u5206\u5272\u7ebf \u5177\u4f53\u914d\u7f6e\u53c2\u6570\u67e5\u770b DefaultDecoration fun RecyclerView.divider(@DrawableRes drawable: Int , orientation: DividerOrientation = DividerOrientation.HORIZONTAL): RecyclerView \u6307\u5b9aDrawable\u8d44\u6e90\u4e3a\u5206\u5272\u7ebf, \u5206\u5272\u7ebf\u7684\u95f4\u8ddd\u548c\u5bbd\u5ea6\u5e94\u5728\u8d44\u6e90\u6587\u4ef6\u4e2d\u914d\u7f6e Parameters \u00b6 drawable - \u63cf\u8ff0\u5206\u5272\u7ebf\u7684drawable orientation - \u5206\u5272\u7ebf\u65b9\u5411, \u4ec5 androidx.recyclerview.widget.GridLayoutManager \u9700\u8981\u4f7f\u7528\u6b64\u53c2\u6570, \u5176\u4ed6LayoutManager\u90fd\u662f\u6839\u636e\u5176\u65b9\u5411\u81ea\u52a8\u63a8\u65ad","title":"Divider"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/divider/#divider","text":"fun RecyclerView.divider(block: DefaultDecoration .() -> Unit ): RecyclerView \u51fd\u6570\u914d\u7f6e\u5206\u5272\u7ebf \u5177\u4f53\u914d\u7f6e\u53c2\u6570\u67e5\u770b DefaultDecoration fun RecyclerView.divider(@DrawableRes drawable: Int , orientation: DividerOrientation = DividerOrientation.HORIZONTAL): RecyclerView \u6307\u5b9aDrawable\u8d44\u6e90\u4e3a\u5206\u5272\u7ebf, \u5206\u5272\u7ebf\u7684\u95f4\u8ddd\u548c\u5bbd\u5ea6\u5e94\u5728\u8d44\u6e90\u6587\u4ef6\u4e2d\u914d\u7f6e","title":"divider"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/divider/#parameters","text":"drawable - \u63cf\u8ff0\u5206\u5272\u7ebf\u7684drawable orientation - \u5206\u5272\u7ebf\u65b9\u5411, \u4ec5 androidx.recyclerview.widget.GridLayoutManager \u9700\u8981\u4f7f\u7528\u6b64\u53c2\u6570, \u5176\u4ed6LayoutManager\u90fd\u662f\u6839\u636e\u5176\u65b9\u5411\u81ea\u52a8\u63a8\u65ad","title":"Parameters"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/grid/","text":"brv / com.drake.brv.utils / androidx.recyclerview.widget.RecyclerView / grid grid \u00b6 fun RecyclerView.grid(spanCount: Int = 1, orientation: Int = VERTICAL, reverseLayout: Boolean = false, scrollEnabled: Boolean = true): RecyclerView \u521b\u5efa HoverGridLayoutManager \u7f51\u683c\u5217\u8868 Parameters \u00b6 spanCount - \u7f51\u683c\u8de8\u5ea6\u6570\u91cf orientation - \u5217\u8868\u65b9\u5411 reverseLayout - \u662f\u5426\u53cd\u8f6c scrollEnabled - \u662f\u5426\u5141\u8bb8\u6eda\u52a8","title":"Grid"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/grid/#grid","text":"fun RecyclerView.grid(spanCount: Int = 1, orientation: Int = VERTICAL, reverseLayout: Boolean = false, scrollEnabled: Boolean = true): RecyclerView \u521b\u5efa HoverGridLayoutManager \u7f51\u683c\u5217\u8868","title":"grid"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/grid/#parameters","text":"spanCount - \u7f51\u683c\u8de8\u5ea6\u6570\u91cf orientation - \u5217\u8868\u65b9\u5411 reverseLayout - \u662f\u5426\u53cd\u8f6c scrollEnabled - \u662f\u5426\u5141\u8bb8\u6eda\u52a8","title":"Parameters"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/linear/","text":"brv / com.drake.brv.utils / androidx.recyclerview.widget.RecyclerView / linear linear \u00b6 fun RecyclerView.linear(orientation: Int = VERTICAL, reverseLayout: Boolean = false, scrollEnabled: Boolean = true): RecyclerView \u521b\u5efa HoverLinearLayoutManager \u7ebf\u6027\u5217\u8868 Parameters \u00b6 orientation - \u5217\u8868\u65b9\u5411 reverseLayout - \u662f\u5426\u53cd\u8f6c\u5217\u8868 scrollEnabled - \u662f\u5426\u5141\u8bb8\u6eda\u52a8","title":"Linear"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/linear/#linear","text":"fun RecyclerView.linear(orientation: Int = VERTICAL, reverseLayout: Boolean = false, scrollEnabled: Boolean = true): RecyclerView \u521b\u5efa HoverLinearLayoutManager \u7ebf\u6027\u5217\u8868","title":"linear"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/linear/#parameters","text":"orientation - \u5217\u8868\u65b9\u5411 reverseLayout - \u662f\u5426\u53cd\u8f6c\u5217\u8868 scrollEnabled - \u662f\u5426\u5141\u8bb8\u6eda\u52a8","title":"Parameters"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/models/","text":"brv / com.drake.brv.utils / androidx.recyclerview.widget.RecyclerView / models models \u00b6 var RecyclerView.models: List < Any ?>?","title":"Models"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/models/#models","text":"var RecyclerView.models: List < Any ?>?","title":"models"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/setup/","text":"brv / com.drake.brv.utils / androidx.recyclerview.widget.RecyclerView / setup setup \u00b6 fun RecyclerView.setup(block: BindingAdapter .(RecyclerView) -> Unit ): BindingAdapter \u8bbe\u7f6e\u9002\u914d\u5668","title":"Setup"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/setup/#setup","text":"fun RecyclerView.setup(block: BindingAdapter .(RecyclerView) -> Unit ): BindingAdapter \u8bbe\u7f6e\u9002\u914d\u5668","title":"setup"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/staggered/","text":"brv / com.drake.brv.utils / androidx.recyclerview.widget.RecyclerView / staggered staggered \u00b6 fun RecyclerView.staggered(spanCount: Int , orientation: Int = VERTICAL, scrollEnabled: Boolean = true): RecyclerView \u521b\u5efa HoverStaggeredGridLayoutManager \u4ea4\u9519\u5217\u8868 Parameters \u00b6 orientation - \u5217\u8868\u65b9\u5411 spanCount - \u7f51\u683c\u8de8\u5ea6\u6570\u91cf scrollEnabled - \u662f\u5426\u5141\u8bb8\u6eda\u52a8","title":"Staggered"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/staggered/#staggered","text":"fun RecyclerView.staggered(spanCount: Int , orientation: Int = VERTICAL, scrollEnabled: Boolean = true): RecyclerView \u521b\u5efa HoverStaggeredGridLayoutManager \u4ea4\u9519\u5217\u8868","title":"staggered"},{"location":"api/brv/com.drake.brv.utils/androidx.recyclerview.widget.-recycler-view/staggered/#parameters","text":"orientation - \u5217\u8868\u65b9\u5411 spanCount - \u7f51\u683c\u8de8\u5ea6\u6570\u91cf scrollEnabled - \u662f\u5426\u5141\u8bb8\u6eda\u52a8","title":"Parameters"}]}